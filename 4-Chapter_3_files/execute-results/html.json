{
  "hash": "81a6f82730229942f4af5351d0ce0763",
  "result": {
    "markdown": "# 第3章\n\n第3章は3元表に対する部分連関モデルを扱う．パッケージは`tidyverse`（データセットの処理のため），`magrittr`（パイプ演算子），`DescTools`（記述統計を求めるため），`vcd`パッケージ（カテゴリカルデータの分析のため），`broom`（回帰係数の整理），`gnm`（連関分析の処理のため），`broom`（tidyな回帰分析の結果の表示）を使用する．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)\nlibrary(broom)\n```\n:::\n\n\n\nまたモデル適合度を表示するための関数をここでも準備しておく．すべて`gnm`によって推定を行う．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 引数となるobjはgnmの結果\nmodel.summary <- function(obj, Model = NULL){\n  if (sum(class(obj) == \"gnm\") != 1)\n    stop(\"estimate with gnm\")\n  aic <- obj$deviance - obj$df * 2 # AIC(L2)\n  bic <- obj$deviance - obj$df * log(sum(obj$y)) #BIC(L2)\n  delta <- 100 * sum(abs(obj$y - obj$fitted.values)) / (2 * sum(obj$y))\n  p <- pchisq(obj$deviance, obj$df, lower.tail = FALSE)\n  result <- matrix(0, 1, 7)\n  if (is.null(Model)){ \n  Model <- deparse(substitute(obj))\n  }\n  result <- tibble(\n    \"Model Description\" = Model,\n    \"df\" = obj$df,\n    \"L2\" = obj$deviance,\n    #\"AIC(L2)\" = aic,\n    \"BIC\" = bic,\n    \"Delta\" = delta,\n    \"p\" = p\n  )\n  return(result)\n}\n```\n:::\n\n\n\n## 表3.1A\n\n表3.1Aをまずベクトルとして入力する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 表3.1\nFreq <- c(  9, 5, 5, 1,    1, 6, 5, 1,    2, 2, 2, 1,\n           17,13, 7, 4,   13,22, 9, 1,    7,13, 6, 2,\n            8,14, 6, 0,   10,29,10, 0,    5,14, 6, 2,\n           20,38,24, 8,   23,72,34,10,   17,67,36,12,\n            4,21,12, 4,    7,30, 9, 1,    9,19,14, 2,\n            2, 9, 8, 3,    1,16,19, 2,   11,28,28,11,\n            0, 1, 5, 0,    2, 3, 3, 2,    2, 7, 6, 6)\n```\n:::\n\n\n\n次に行変数，列変数，層変数を入力する．`gl(n = 水準数, k = 繰り返しの数, length = 長さ)`を注意しながら設定する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolviews <- gl(n = 7, k = 4*3, length = length(Freq))\nfefam <- gl(n = 4, k = 1, length = length(Freq))\nnatfare <- gl(n = 3, k = 4, length = length(Freq))\n```\n:::\n\n\n対応しているのかを確認したければ，matrix形式で示すとよい．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatrix(polviews, nrow = 7, ncol = 12, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"   \"1\"   \"1\"  \n[2,] \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"   \"2\"   \"2\"  \n[3,] \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[4,] \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"   \"4\"   \"4\"  \n[5,] \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"   \"5\"   \"5\"  \n[6,] \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"   \"6\"   \"6\"  \n[7,] \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"   \"7\"   \"7\"  \n```\n:::\n\n```{.r .cell-code}\nmatrix(fefam, nrow = 7, ncol = 12, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[2,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[3,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[4,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[5,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[6,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[7,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n```\n:::\n\n```{.r .cell-code}\nmatrix(natfare, nrow = 7, ncol = 12, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[2,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[3,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[4,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[5,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[6,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[7,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n```\n:::\n:::\n\n\ntableのデータ（`tab_3.1`）とセルを単位としたデータ（`freq_tab_3.1`）を作成する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_3.1 <- xtabs(Freq ~ polviews + fefam + natfare)\nfreq_tab_3.1 <- tibble(Freq, polviews, fefam, natfare)\n```\n:::\n\n\n\n表3.2のモデルで推定を行う．モデル6から8まではスコアパラメータの正則化が必要であるが，適合度については問題なく求めることができる．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model 1 - 独立モデル\nM1 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews + fefam + natfare,\n    family = poisson,\n    data = _,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 2 - 完全2元交互作用モデル\nM2 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews * fefam + fefam * natfare + polviews * natfare,\n    family = poisson,\n    data = _,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 3 - 条件付き独立 (polviews)\nM3 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews * fefam + polviews * natfare,\n    family = poisson,\n    data = _,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 4 - 条件付き独立 (fefam)\nM4 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews * fefam + fefam * natfare,\n    family = poisson,\n    data = _,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 5 - 条件付き独立 (natfare)\nM5 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ fefam * natfare + polviews * natfare,\n    family = poisson,\n    data = _,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 6 - RC(1)+RL(1) 部分連関\n# 値の正則化が必要\nM6 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews, fefam) + \n      Mult(1, polviews, natfare),\n    data = _,\n    family = poisson,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\n```\n:::\n\n```{.r .cell-code}\n# Model 7 - RC(1)+RL(1) 部分連関 (一貫した行スコア - polviews)\n# 値の正則化が必要\nM7 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews, fefam + natfare),\n    data = _,\n    family = poisson,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n\nDone\n```\n:::\n\n```{.r .cell-code}\n# Model 8 - RC(1)+RL(1) 部分連関 (一貫した行スコア - polviews)\n# 行スコアへの等値制約\n# 値の正則化が必要\n\n# 等値制約をかけたいセルの水準を同じにする\nfreq_tab_3.1 <- freq_tab_3.1 |> \n  mutate(polviews.c = case_when(polviews == 1 ~ 1,  # mu1 = mu2\n                                polviews == 2 ~ 1,  # mu1 = mu2\n                                polviews == 3 ~ 2,\n                                polviews == 4 ~ 3,  # mu4 = mu5\n                                polviews == 5 ~ 3,  # mu4 = mu5\n                                polviews == 6 ~ 4,\n                                polviews == 7 ~ 5) |>\n           factor())\n\nM8 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews.c, fefam + natfare),\n    data = _,\n    family = poisson,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................................\nDone\n```\n:::\n:::\n\n\n\nモデル間の比較は次のように行う．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model 3 と Model 2の比較\npchisq(q = M3$deviance - M2$deviance,\n       df = M3$df.residual - M2$df.residual,\n       lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.06425806\n```\n:::\n\n```{.r .cell-code}\n# Model 6 と Model 3の比較\npchisq(q = M6$deviance - M3$deviance,\n       df = M6$df.residual - M3$df.residual,\n       lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1266967\n```\n:::\n\n```{.r .cell-code}\n# Model 13 と Model 8の比較\n## Model 13が推定できないため表の値を用いる\npchisq(q = 9.22,\n       df = 6,\n       lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1615782\n```\n:::\n:::\n\n\n\n\n## 表3.2\n\n表3.2を再現する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## 表3.2\n\n# リストを作成\nM <- list()\n# モデルの適合度をリストに順に格納\nM[[1]] <- model.summary(M1, \"1. Complete independence\") \nM[[2]] <- model.summary(M2, \"2. Full two-way interaction\") \nM[[3]] <- model.summary(M3, \"3. Conditional independence on POLVIEWS\") \nM[[4]] <- model.summary(M4, \"4. Conditional independence on FEFAM\")\nM[[5]] <- model.summary(M5, \"5. Conditional independence on NATFARE\")\nM[[6]] <- model.summary(M6, \"6. RC(1) + RL(1) partial association\")\nM[[7]] <- model.summary(M7, \"7. Model 6 plus consisitent row (POLVIEWS) score restrictions\")\nM[[8]] <- model.summary(M8, \"8. Model 6 plus consisitent and equality restrictions on row (POLVIEWS) scores (mu_1 = mu_2, mu_4 = mu_5)\")\n# リストを行方向に合併する\nM |> bind_rows()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 6\n  `Model Description`                               df    L2   BIC Delta       p\n  <chr>                                          <int> <dbl> <dbl> <dbl>   <dbl>\n1 1. Complete independence                          72 168.  -324. 14.1  1.37e-9\n2 2. Full two-way interaction                       36  35.4 -211.  5.72 4.99e-1\n3 3. Conditional independence on POLVIEWS           42  47.3 -240.  7.30 2.67e-1\n4 4. Conditional independence on FEFAM              48  87.3 -241. 10.3  4.50e-4\n5 5. Conditional independence on NATFARE            54  91.0 -278. 10.1  1.21e-3\n6 6. RC(1) + RL(1) partial association              57  68.6 -321.  8.83 1.40e-1\n7 7. Model 6 plus consisitent row (POLVIEWS) sc…    62  72.8 -351.  9.07 1.65e-1\n8 8. Model 6 plus consisitent and equality rest…    64  73.6 -364.  9.21 1.93e-1\n```\n:::\n:::\n\n\n## 表3.3\n\n表3.3を再現するために，モデル6から8までのスコアパラメータの正則化を行う．\n\nまずはモデル6である．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estimating standard error\n# Model 6\n\n# 変数と係数と係数の順番を表示\npickCoef(M6, \"[.]polviews\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Mult(1, ., fefam).polviews1   Mult(1, ., fefam).polviews2 \n                           14                            15 \n  Mult(1, ., fefam).polviews3   Mult(1, ., fefam).polviews4 \n                           16                            17 \n  Mult(1, ., fefam).polviews5   Mult(1, ., fefam).polviews6 \n                           18                            19 \n  Mult(1, ., fefam).polviews7 Mult(1, ., natfare).polviews1 \n                           20                            26 \nMult(1, ., natfare).polviews2 Mult(1, ., natfare).polviews3 \n                           27                            28 \nMult(1, ., natfare).polviews4 Mult(1, ., natfare).polviews5 \n                           29                            30 \nMult(1, ., natfare).polviews6 Mult(1, ., natfare).polviews7 \n                           31                            32 \n```\n:::\n\n```{.r .cell-code}\npickCoef(M6, \"[.]fefam\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, polviews, .).fefam1 Mult(1, polviews, .).fefam2 \n                         21                          22 \nMult(1, polviews, .).fefam3 Mult(1, polviews, .).fefam4 \n                         23                          24 \n```\n:::\n\n```{.r .cell-code}\npickCoef(M6, \"[.]natfare\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, polviews, .).natfare1 Mult(1, polviews, .).natfare2 \n                           33                            34 \nMult(1, polviews, .).natfare3 \n                           35 \n```\n:::\n\n```{.r .cell-code}\ndata.frame(var = names(M6$coefficients),\n           estimate = M6$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                                        var      estimate\n(Intercept)                                     (Intercept)  4.562049e-01\npolviews2                                         polviews2  1.104007e+00\npolviews3                                         polviews3  1.062053e+00\npolviews4                                         polviews4  2.377835e+00\npolviews5                                         polviews5  1.363901e+00\npolviews6                                         polviews6  1.298405e+00\npolviews7                                         polviews7 -8.665756e-02\nfefam2                                               fefam2  9.812610e-01\nfefam3                                               fefam3  4.347350e-01\nfefam4                                               fefam4 -8.705250e-01\nnatfare2                                           natfare2  3.533663e-01\nnatfare3                                           natfare3  2.991338e-01\nMult(., polviews, fefam).         Mult(., polviews, fefam).  2.141199e-03\nMult(1, ., fefam).polviews1     Mult(1, ., fefam).polviews1 -3.210925e+02\nMult(1, ., fefam).polviews2     Mult(1, ., fefam).polviews2 -8.676659e+02\nMult(1, ., fefam).polviews3     Mult(1, ., fefam).polviews3 -6.814113e+02\nMult(1, ., fefam).polviews4     Mult(1, ., fefam).polviews4  3.888269e+01\nMult(1, ., fefam).polviews5     Mult(1, ., fefam).polviews5 -6.278080e+01\nMult(1, ., fefam).polviews6     Mult(1, ., fefam).polviews6  9.267067e+02\nMult(1, ., fefam).polviews7     Mult(1, ., fefam).polviews7  1.424568e+03\nMult(1, polviews, .).fefam1     Mult(1, polviews, .).fefam1 -2.878256e-01\nMult(1, polviews, .).fefam2     Mult(1, polviews, .).fefam2 -6.393638e-02\nMult(1, polviews, .).fefam3     Mult(1, polviews, .).fefam3  1.663198e-01\nMult(1, polviews, .).fefam4     Mult(1, polviews, .).fefam4  3.066868e-01\nMult(., polviews, natfare).     Mult(., polviews, natfare).  4.028289e+00\nMult(1, ., natfare).polviews1 Mult(1, ., natfare).polviews1 -9.206738e-01\nMult(1, ., natfare).polviews2 Mult(1, ., natfare).polviews2 -4.461335e-01\nMult(1, ., natfare).polviews3 Mult(1, ., natfare).polviews3 -2.782515e-01\nMult(1, ., natfare).polviews4 Mult(1, ., natfare).polviews4  4.152177e-02\nMult(1, ., natfare).polviews5 Mult(1, ., natfare).polviews5 -1.236800e-01\nMult(1, ., natfare).polviews6 Mult(1, ., natfare).polviews6  6.829409e-01\nMult(1, ., natfare).polviews7 Mult(1, ., natfare).polviews7  6.859244e-01\nMult(1, polviews, .).natfare1 Mult(1, polviews, .).natfare1 -1.823527e-01\nMult(1, polviews, .).natfare2 Mult(1, polviews, .).natfare2 -6.352363e-02\nMult(1, polviews, .).natfare3 Mult(1, polviews, .).natfare3  1.926558e-01\n                              number\n(Intercept)                        1\npolviews2                          2\npolviews3                          3\npolviews4                          4\npolviews5                          5\npolviews6                          6\npolviews7                          7\nfefam2                             8\nfefam3                             9\nfefam4                            10\nnatfare2                          11\nnatfare3                          12\nMult(., polviews, fefam).         13\nMult(1, ., fefam).polviews1       14\nMult(1, ., fefam).polviews2       15\nMult(1, ., fefam).polviews3       16\nMult(1, ., fefam).polviews4       17\nMult(1, ., fefam).polviews5       18\nMult(1, ., fefam).polviews6       19\nMult(1, ., fefam).polviews7       20\nMult(1, polviews, .).fefam1       21\nMult(1, polviews, .).fefam2       22\nMult(1, polviews, .).fefam3       23\nMult(1, polviews, .).fefam4       24\nMult(., polviews, natfare).       25\nMult(1, ., natfare).polviews1     26\nMult(1, ., natfare).polviews2     27\nMult(1, ., natfare).polviews3     28\nMult(1, ., natfare).polviews4     29\nMult(1, ., natfare).polviews5     30\nMult(1, ., natfare).polviews6     31\nMult(1, ., natfare).polviews7     32\nMult(1, polviews, .).natfare1     33\nMult(1, polviews, .).natfare2     34\nMult(1, polviews, .).natfare3     35\n```\n:::\n:::\n\n\n各スコアの両端のカテゴリ，つまり上記推定値のリストの\n14,20,21,24,26,32,33,35番目の8つの値についてスコアを求め，固定する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# R POLVIEWS mu1[i], i = 1 to 7\nmu1 <- getContrasts(model = M6, \n                    set = pickCoef(M6, \"fefam)[.]polviews\"),\n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n# C FEFAM nu[j], j = 1 to 4\nnu <- getContrasts(model = M6, \n                   set = pickCoef(M6, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n# R POLVIEWS mu2[i], i = 1 to 7\nmu2 <- getContrasts(model = M6, \n                    set = pickCoef(M6, \"natfare)[.]polviews\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n# L NATFARE eta[k], k = 1 to 3\neta <- getContrasts(model = M6, \n                    set = pickCoef(M6, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\n# 確認 \nlist(mu1 = mu1, nu = nu, mu2 = mu2, eta = eta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$mu1\n                               Estimate Std. Error\nMult(1, ., fefam).polviews1 -0.18890704 0.17539812\nMult(1, ., fefam).polviews2 -0.45611586 0.11238050\nMult(1, ., fefam).polviews3 -0.36505971 0.11498236\nMult(1, ., fefam).polviews4 -0.01292237 0.08199631\nMult(1, ., fefam).polviews5 -0.06262362 0.11058185\nMult(1, ., fefam).polviews6  0.42111705 0.12367540\nMult(1, ., fefam).polviews7  0.66451154 0.10976226\n\n$nu\n                              Estimate Std. Error\nMult(1, polviews, .).fefam1 -0.7026886 0.06444123\nMult(1, polviews, .).fefam2 -0.2081705 0.09371704\nMult(1, polviews, .).fefam3  0.3004108 0.10956493\nMult(1, polviews, .).fefam4  0.6104483 0.09158453\n\n$mu2\n                                 Estimate Std. Error\nMult(1, ., natfare).polviews1 -0.60584367 0.12394769\nMult(1, ., natfare).polviews2 -0.27518966 0.11469790\nMult(1, ., natfare).polviews3 -0.15821154 0.11316687\nMult(1, ., natfare).polviews4  0.06460260 0.07187236\nMult(1, ., natfare).polviews5 -0.05050796 0.10030828\nMult(1, ., natfare).polviews6  0.51153570 0.10405220\nMult(1, ., natfare).polviews7  0.51361453 0.12512860\n\n$eta\n                                Estimate Std. Error\nMult(1, polviews, .).natfare1 -0.6073482 0.07616839\nMult(1, polviews, .).natfare2 -0.1689209 0.11149916\nMult(1, polviews, .).natfare3  0.7762692 0.03533078\n```\n:::\n:::\n\n\n正則化したスコアを求めることができたので，\n各スコアの両端のカテゴリを取り出し，`con`とする．\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon <- c(mu1$qvframe[,1][c(1,7)], \n         nu$qvframe[,1][c(1,4)],\n         mu2$qvframe[,1][c(1,7)], \n         eta$qvframe[,1][c(1,3)])\n```\n:::\n\n\n`con`を用いて制約を課す．制約を課す対象となるパラメータは`constrain`で指定する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM6_SE <- freq_tab_3.1 |>\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + Mult(1, polviews, natfare),\n      constrain = c(14,20,21,24,26,32,33,35), \n      constrainTo = con,\n      data = _, \n      family = poisson, \n      tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n```\n:::\n\n```{.r .cell-code}\nM6_SE_coef <- tidy(M6_SE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `tidy()` method for objects of class `gnm` is not maintained by the broom team, and is only supported through the `glm` tidier method. Please be cautious in interpreting and reporting broom output.\n\nThis warning is displayed once per session.\n```\n:::\n\n```{.r .cell-code}\nM6_SE_coef |> print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 5\n   term                          estimate std.error statistic   p.value\n   <chr>                            <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)                     0.491      0.271    1.81    7.07e- 2\n 2 polviews2                       1.03       0.229    4.52    6.06e- 6\n 3 polviews3                       0.993      0.226    4.39    1.12e- 5\n 4 polviews4                       2.33       0.212   11.0     3.35e-28\n 5 polviews5                       1.32       0.218    6.08    1.24e- 9\n 6 polviews6                       1.26       0.282    4.49    7.13e- 6\n 7 polviews7                      -0.0882     0.355   -0.248   8.04e- 1\n 8 fefam2                          1.01       0.188    5.40    6.70e- 8\n 9 fefam3                          0.498      0.340    1.46    1.43e- 1\n10 fefam4                         -0.787      0.449   -1.75    7.96e- 2\n11 natfare2                        0.329      0.127    2.60    9.35e- 3\n12 natfare3                        0.222      0.314    0.706   4.80e- 1\n13 Mult(., polviews, fefam).       1.98       0.744    2.66    7.73e- 3\n14 Mult(1, ., fefam).polviews1    -0.189     NA       NA      NA       \n15 Mult(1, ., fefam).polviews2    -0.456      0.308   -1.48    1.39e- 1\n16 Mult(1, ., fefam).polviews3    -0.365      0.285   -1.28    2.00e- 1\n17 Mult(1, ., fefam).polviews4    -0.0129     0.184   -0.0703  9.44e- 1\n18 Mult(1, ., fefam).polviews5    -0.0626     0.212   -0.296   7.67e- 1\n19 Mult(1, ., fefam).polviews6     0.421      0.205    2.06    3.98e- 2\n20 Mult(1, ., fefam).polviews7     0.665     NA       NA      NA       \n21 Mult(1, polviews, .).fefam1    -0.703     NA       NA      NA       \n22 Mult(1, polviews, .).fefam2    -0.208      0.152   -1.37    1.71e- 1\n23 Mult(1, polviews, .).fefam3     0.300      0.185    1.62    1.05e- 1\n24 Mult(1, polviews, .).fefam4     0.610     NA       NA      NA       \n25 Mult(., polviews, natfare).     1.57       0.405    3.87    1.10e- 4\n26 Mult(1, ., natfare).polviews1  -0.606     NA       NA      NA       \n27 Mult(1, ., natfare).polviews2  -0.275      0.200   -1.38    1.68e- 1\n28 Mult(1, ., natfare).polviews3  -0.158      0.191   -0.828   4.08e- 1\n29 Mult(1, ., natfare).polviews4   0.0646     0.156    0.414   6.79e- 1\n30 Mult(1, ., natfare).polviews5  -0.0505     0.177   -0.286   7.75e- 1\n31 Mult(1, ., natfare).polviews6   0.512      0.211    2.43    1.53e- 2\n32 Mult(1, ., natfare).polviews7   0.514     NA       NA      NA       \n33 Mult(1, polviews, .).natfare1  -0.607     NA       NA      NA       \n34 Mult(1, polviews, .).natfare2  -0.169      0.175   -0.967   3.34e- 1\n35 Mult(1, polviews, .).natfare3   0.776     NA       NA      NA       \n```\n:::\n:::\n\n\n\nモデル7は少し難しい．モデル7は一貫した制約を課している．このモデルからまず一貫した`polviews`について正則化した場合の値を求める．これが求まったら，次は一貫した制約を課していないモデルに，先ほどの正則化したスコアをRCとRLのそれぞれの部分に適用する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model 7\n\n# 変数と係数と係数の順番を表示\npickCoef(M7, \"[.]polviews\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, ., fefam + natfare).polviews1 Mult(1, ., fefam + natfare).polviews2 \n                                   14                                    15 \nMult(1, ., fefam + natfare).polviews3 Mult(1, ., fefam + natfare).polviews4 \n                                   16                                    17 \nMult(1, ., fefam + natfare).polviews5 Mult(1, ., fefam + natfare).polviews6 \n                                   18                                    19 \nMult(1, ., fefam + natfare).polviews7 \n                                   20 \n```\n:::\n\n```{.r .cell-code}\npickCoef(M7, \"[.]fefam\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, polviews, . + natfare).fefam1 Mult(1, polviews, . + natfare).fefam2 \n                                   21                                    22 \nMult(1, polviews, . + natfare).fefam3 Mult(1, polviews, . + natfare).fefam4 \n                                   23                                    24 \n```\n:::\n\n```{.r .cell-code}\npickCoef(M7, \"[.]natfare\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, polviews, fefam + .).natfare2 Mult(1, polviews, fefam + .).natfare3 \n                                   25                                    26 \n```\n:::\n\n```{.r .cell-code}\ndata.frame(var = names(M7$coefficients),\n           estimate = M7$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                                                        var\n(Intercept)                                                     (Intercept)\npolviews2                                                         polviews2\npolviews3                                                         polviews3\npolviews4                                                         polviews4\npolviews5                                                         polviews5\npolviews6                                                         polviews6\npolviews7                                                         polviews7\nfefam2                                                               fefam2\nfefam3                                                               fefam3\nfefam4                                                               fefam4\nnatfare2                                                           natfare2\nnatfare3                                                           natfare3\nMult(., polviews, fefam + natfare).     Mult(., polviews, fefam + natfare).\nMult(1, ., fefam + natfare).polviews1 Mult(1, ., fefam + natfare).polviews1\nMult(1, ., fefam + natfare).polviews2 Mult(1, ., fefam + natfare).polviews2\nMult(1, ., fefam + natfare).polviews3 Mult(1, ., fefam + natfare).polviews3\nMult(1, ., fefam + natfare).polviews4 Mult(1, ., fefam + natfare).polviews4\nMult(1, ., fefam + natfare).polviews5 Mult(1, ., fefam + natfare).polviews5\nMult(1, ., fefam + natfare).polviews6 Mult(1, ., fefam + natfare).polviews6\nMult(1, ., fefam + natfare).polviews7 Mult(1, ., fefam + natfare).polviews7\nMult(1, polviews, . + natfare).fefam1 Mult(1, polviews, . + natfare).fefam1\nMult(1, polviews, . + natfare).fefam2 Mult(1, polviews, . + natfare).fefam2\nMult(1, polviews, . + natfare).fefam3 Mult(1, polviews, . + natfare).fefam3\nMult(1, polviews, . + natfare).fefam4 Mult(1, polviews, . + natfare).fefam4\nMult(1, polviews, fefam + .).natfare2 Mult(1, polviews, fefam + .).natfare2\nMult(1, polviews, fefam + .).natfare3 Mult(1, polviews, fefam + .).natfare3\n                                         estimate number\n(Intercept)                            0.63925323      1\npolviews2                              1.05142057      2\npolviews3                              0.96769216      3\npolviews4                              2.15945782      4\npolviews5                              1.17902374      5\npolviews6                              0.89293079      6\npolviews7                             -0.53039315      7\nfefam2                                 1.00098936      8\nfefam3                                 0.46769320      9\nfefam4                                -0.82218138     10\nnatfare2                               0.35333421     11\nnatfare3                               0.32150773     12\nMult(., polviews, fefam + natfare).   -0.46121716     13\nMult(1, ., fefam + natfare).polviews1  1.66433285     14\nMult(1, ., fefam + natfare).polviews2  1.55926601     15\nMult(1, ., fefam + natfare).polviews3  1.10609842     16\nMult(1, ., fefam + natfare).polviews4 -0.04388897     17\nMult(1, ., fefam + natfare).polviews5  0.27821611     18\nMult(1, ., fefam + natfare).polviews6 -1.85555324     19\nMult(1, ., fefam + natfare).polviews7 -2.26909991     20\nMult(1, polviews, . + natfare).fefam1 -1.02373042     21\nMult(1, polviews, . + natfare).fefam2 -0.41815842     22\nMult(1, polviews, . + natfare).fefam3  0.09797991     23\nMult(1, polviews, . + natfare).fefam4  0.41277819     24\nMult(1, polviews, fefam + .).natfare2  0.29938283     25\nMult(1, polviews, fefam + .).natfare3  1.09843014     26\n```\n:::\n\n```{.r .cell-code}\n# mu[i], i = 1 to 7\nmu <- getContrasts(model = M7, \n                   set = pickCoef(M7, \"[.]polviews\")[1:7], \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1:7)], \n         mu$qvframe[,1][c(1:7)])\n```\n:::\n\n\n\nここでは一貫した制約を課さないモデルを用い，制約で一貫したスコアを割り当てる．そして，制約のない列スコアと層スコアを正則化する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM7_SE <- freq_tab_3.1 |>\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20, 26:32), \n      constrainTo = con,\n      data = _, \n      family = poisson, \n      tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n```\n:::\n\n```{.r .cell-code}\n# nu[j], j = 1 to 4\nnu <- getContrasts(model = M7_SE, \n                   set = pickCoef(M7_SE, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n# eta[k], k = 1 to 3\neta <- getContrasts(model = M7_SE, \n                    set = pickCoef(M7_SE, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1:7)], \n         nu$qvframe[,1][c(1,4)],\n         mu$qvframe[,1][c(1:7)], \n         eta$qvframe[,1][c(1,3)])\n```\n:::\n\n\n最後に一貫したスコア（行）と正則化したスコア（列と層）を用いて再度推定を行う．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM7_SE <- freq_tab_3.1 |>\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,21,24,26:32,33,35), \n      constrainTo = con,\n      data = _, \n      family = poisson, \n      trace = T, \n      tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nInitial Deviance = 175.356297\nRunning start-up iterations\nStart-up iteration 1. Deviance = 76.108001\nStart-up iteration 2. Deviance = 73.038088\nRunning main iterations\nIteration 1. Deviance = 72.774213\nIteration 2. Deviance = 72.773834\nIteration 3. Deviance = 72.773834\nIteration 4. Deviance = 72.773834\nDone\n```\n:::\n\n```{.r .cell-code}\nM7_SE_coef <- tidy(M7_SE)\nM7_SE_coef |> print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 5\n   term                          estimate std.error statistic   p.value\n   <chr>                            <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)                     0.497     0.200      2.49   1.28e- 2\n 2 polviews2                       1.06      0.184      5.78   7.52e- 9\n 3 polviews3                       1.03      0.190      5.42   5.91e- 8\n 4 polviews4                       2.34      0.200     11.7    1.01e-31\n 5 polviews5                       1.33      0.202      6.59   4.46e-11\n 6 polviews6                       1.27      0.287      4.42   9.73e- 6\n 7 polviews7                      -0.107     0.338     -0.317  7.51e- 1\n 8 fefam2                          0.983     0.0947    10.4    3.01e-25\n 9 fefam3                          0.435     0.104      4.19   2.73e- 5\n10 fefam4                         -0.864     0.150     -5.77   7.72e- 9\n11 natfare2                        0.345     0.0853     4.04   5.28e- 5\n12 natfare3                        0.290     0.0869     3.33   8.54e- 4\n13 Mult(., polviews, fefam).      -1.95      0.374     -5.21   1.92e- 7\n14 Mult(1, ., fefam).polviews1     0.413    NA         NA     NA       \n15 Mult(1, ., fefam).polviews2     0.386    NA         NA     NA       \n16 Mult(1, ., fefam).polviews3     0.269    NA         NA     NA       \n17 Mult(1, ., fefam).polviews4    -0.0275   NA         NA     NA       \n18 Mult(1, ., fefam).polviews5     0.0555   NA         NA     NA       \n19 Mult(1, ., fefam).polviews6    -0.494    NA         NA     NA       \n20 Mult(1, ., fefam).polviews7    -0.601    NA         NA     NA       \n21 Mult(1, polviews, .).fefam1    -0.726    NA         NA     NA       \n22 Mult(1, polviews, .).fefam2    -0.170     0.150     -1.14   2.55e- 1\n23 Mult(1, polviews, .).fefam3     0.304     0.189      1.61   1.08e- 1\n24 Mult(1, polviews, .).fefam4     0.593    NA         NA     NA       \n25 Mult(., polviews, natfare).    -1.44      0.226     -6.36   2.03e-10\n26 Mult(1, ., natfare).polviews1   0.413    NA         NA     NA       \n27 Mult(1, ., natfare).polviews2   0.386    NA         NA     NA       \n28 Mult(1, ., natfare).polviews3   0.269    NA         NA     NA       \n29 Mult(1, ., natfare).polviews4  -0.0275   NA         NA     NA       \n30 Mult(1, ., natfare).polviews5   0.0555   NA         NA     NA       \n31 Mult(1, ., natfare).polviews6  -0.494    NA         NA     NA       \n32 Mult(1, ., natfare).polviews7  -0.601    NA         NA     NA       \n33 Mult(1, polviews, .).natfare1  -0.580    NA         NA     NA       \n34 Mult(1, polviews, .).natfare2  -0.207     0.186     -1.12   2.64e- 1\n35 Mult(1, polviews, .).natfare3   0.788    NA         NA     NA       \n```\n:::\n:::\n\n\n\nモデル8は`1,1,2,3,3,4,5`という制約があり，結局は`1,2,3,4,5`の5つのパラメータを推定することになる．しかし，あくまで`1,1,2,3,3,4,5`という7つのパラメータにウェイトをかける必要がある．そこで`c(2,1,2,1,1)/7`とすることで，等値制約をかけている部分は平均を2倍にし，`c(2,1,2,1,1)`とすることでウェイトも2倍にしている．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model 8\n# mu[i], i = 1 to 7\nmu <- getContrasts(model = M8,\n                   set = pickCoef(M8, \"[.]polviews.c\"),\n                   ref = c(2, 1, 2, 1, 1) / 7,\n                   scaleRef = c(2, 1, 2, 1, 1) / 7,\n                   scaleWeights = c(2, 1, 2, 1, 1))\n\nmu <- getContrasts(model = M8,\n                   set = pickCoef(M8, \"[.]polviews.c\"),\n                   ref = c(2, 1, 2, 1, 1) / 7,\n                   scaleRef = c(2, 1, 2, 1, 1) / 7,\n                   scaleWeights = c(2, 1, 2, 1, 1))\nmu;mu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                            Estimate Std. Error\nMult(1, ., fefam + natfare).polviews.c1 -0.402725149 0.04298356\nMult(1, ., fefam + natfare).polviews.c2 -0.278981096 0.08172199\nMult(1, ., fefam + natfare).polviews.c3 -0.001961895 0.04688021\nMult(1, ., fefam + natfare).polviews.c4  0.491602614 0.08428340\nMult(1, ., fefam + natfare).polviews.c5  0.596752569 0.08715205\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n                                            Estimate Std. Error\nMult(1, ., fefam + natfare).polviews.c1 -0.402725149 0.04298356\nMult(1, ., fefam + natfare).polviews.c2 -0.278981096 0.08172199\nMult(1, ., fefam + natfare).polviews.c3 -0.001961895 0.04688021\nMult(1, ., fefam + natfare).polviews.c4  0.491602614 0.08428340\nMult(1, ., fefam + natfare).polviews.c5  0.596752569 0.08715205\n```\n:::\n\n```{.r .cell-code}\ncon <- c(mu$qvframe[, 1][c(1, 1, 2, 3, 3, 4, 5)], \n         mu$qvframe[, 1][c(1, 1, 2, 3, 3, 4, 5)])\n```\n:::\n\n\n一貫した行スコア（等値制約あり）を指定して再推定．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM8 <- freq_tab_3.1 |> \n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,26:32),\n      constrainTo = con,\n      data = _, \n      family = poisson, \n      tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n```\n:::\n\n```{.r .cell-code}\ntidy(M8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 5\n   term        estimate std.error statistic   p.value\n   <chr>          <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)   0.481    NA          NA    NA       \n 2 polviews2     1.05      0.184       5.70  1.20e- 8\n 3 polviews3     1.02     NA          NA    NA       \n 4 polviews4     2.34     NA          NA    NA       \n 5 polviews5     1.33     NA          NA    NA       \n 6 polviews6     1.28     NA          NA    NA       \n 7 polviews7    -0.0922   NA          NA    NA       \n 8 fefam2        0.993     0.0956     10.4   2.62e-25\n 9 fefam3        0.451     0.104       4.33  1.52e- 5\n10 fefam4       -0.840     0.149      -5.64  1.72e- 8\n# ℹ 25 more rows\n```\n:::\n\n```{.r .cell-code}\nglance(M8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 8\n  null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs\n          <dbl>   <dbl>  <dbl> <dbl> <dbl>    <dbl>       <int> <int>\n1            NA      NA  -189.  412.  453.     73.6          67    84\n```\n:::\n:::\n\n\n次は列スコアと層スコアの正則化をおこなう．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# nu[j], j = 1 to 4\nnu <- getContrasts(model = M8, \n                   set = pickCoef(M8, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# eta[k], k = 1 to 3\neta <- getContrasts(model = M8, \n                    set = pickCoef(M8, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1,1,2,3,3,4,5)], \n         nu$qvframe[,1][c(1,4)],\n         mu$qvframe[,1][c(1,1,2,3,3,4,5)], \n         eta$qvframe[,1][c(1,3)])\n```\n:::\n\n\n一貫した行スコア（等値制約あり）のすべて，列スコア（最初と最後），層スコア（最初と最後）を指定して再推定．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM8_SE <- freq_tab_3.1 |> \n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,21,24,26:32,33,35), \n      constrainTo = con,\n      data = _, \n      family = poisson, \n      tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n```\n:::\n\n```{.r .cell-code}\nM8_SE_coef <- tidy(M8_SE)\nM8_SE_coef |> print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 5\n   term                          estimate std.error statistic   p.value\n   <chr>                            <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept)                    0.494      0.199      2.49   1.29e- 2\n 2 polviews2                      1.05       0.184      5.70   1.20e- 8\n 3 polviews3                      1.02       0.189      5.38   7.41e- 8\n 4 polviews4                      2.33       0.195     12.0    6.32e-33\n 5 polviews5                      1.32       0.207      6.39   1.62e-10\n 6 polviews6                      1.25       0.286      4.39   1.12e- 5\n 7 polviews7                     -0.123      0.337     -0.366  7.14e- 1\n 8 fefam2                         0.993      0.0956    10.4    2.62e-25\n 9 fefam3                         0.451      0.104      4.33   1.52e- 5\n10 fefam4                        -0.840      0.149     -5.64   1.72e- 8\n11 natfare2                       0.346      0.0856     4.04   5.36e- 5\n12 natfare3                       0.302      0.0868     3.48   5.01e- 4\n13 Mult(., polviews, fefam).     -1.94       0.374     -5.19   2.16e- 7\n14 Mult(1, ., fefam).polviews1   -0.403     NA         NA     NA       \n15 Mult(1, ., fefam).polviews2   -0.403     NA         NA     NA       \n16 Mult(1, ., fefam).polviews3   -0.279     NA         NA     NA       \n17 Mult(1, ., fefam).polviews4   -0.00196   NA         NA     NA       \n18 Mult(1, ., fefam).polviews5   -0.00196   NA         NA     NA       \n19 Mult(1, ., fefam).polviews6    0.492     NA         NA     NA       \n20 Mult(1, ., fefam).polviews7    0.597     NA         NA     NA       \n21 Mult(1, polviews, .).fefam1    0.733     NA         NA     NA       \n22 Mult(1, polviews, .).fefam2    0.162      0.150      1.08   2.78e- 1\n23 Mult(1, polviews, .).fefam3   -0.313      0.191     -1.64   1.01e- 1\n24 Mult(1, polviews, .).fefam4   -0.582     NA         NA     NA       \n25 Mult(., polviews, natfare).   -1.41       0.226     -6.25   4.03e-10\n26 Mult(1, ., natfare).polviews1 -0.403     NA         NA     NA       \n27 Mult(1, ., natfare).polviews2 -0.403     NA         NA     NA       \n28 Mult(1, ., natfare).polviews3 -0.279     NA         NA     NA       \n29 Mult(1, ., natfare).polviews4 -0.00196   NA         NA     NA       \n30 Mult(1, ., natfare).polviews5 -0.00196   NA         NA     NA       \n31 Mult(1, ., natfare).polviews6  0.492     NA         NA     NA       \n32 Mult(1, ., natfare).polviews7  0.597     NA         NA     NA       \n33 Mult(1, polviews, .).natfare1  0.569     NA         NA     NA       \n34 Mult(1, polviews, .).natfare2  0.222      0.190      1.17   2.42e- 1\n35 Mult(1, polviews, .).natfare3 -0.791     NA         NA     NA       \n```\n:::\n:::\n\n\n\n\nすべてのスコアを列方向に合併し，表3.3を再現．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_cols(\n  M6_SE_coef |> dplyr::select(term, Model6 = estimate),\n  M7_SE_coef |> dplyr::select(Model7 = estimate),\n  M8_SE_coef |> dplyr::select(Model8 = estimate)) |>\n  dplyr::filter(grepl(\"Mult\", term)) |> \n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 4\n   term                           Model6  Model7   Model8\n   <chr>                           <dbl>   <dbl>    <dbl>\n 1 Mult(., polviews, fefam).      1.98   -1.95   -1.94   \n 2 Mult(1, ., fefam).polviews1   -0.189   0.413  -0.403  \n 3 Mult(1, ., fefam).polviews2   -0.456   0.386  -0.403  \n 4 Mult(1, ., fefam).polviews3   -0.365   0.269  -0.279  \n 5 Mult(1, ., fefam).polviews4   -0.0129 -0.0275 -0.00196\n 6 Mult(1, ., fefam).polviews5   -0.0626  0.0555 -0.00196\n 7 Mult(1, ., fefam).polviews6    0.421  -0.494   0.492  \n 8 Mult(1, ., fefam).polviews7    0.665  -0.601   0.597  \n 9 Mult(1, polviews, .).fefam1   -0.703  -0.726   0.733  \n10 Mult(1, polviews, .).fefam2   -0.208  -0.170   0.162  \n11 Mult(1, polviews, .).fefam3    0.300   0.304  -0.313  \n12 Mult(1, polviews, .).fefam4    0.610   0.593  -0.582  \n13 Mult(., polviews, natfare).    1.57   -1.44   -1.41   \n14 Mult(1, ., natfare).polviews1 -0.606   0.413  -0.403  \n15 Mult(1, ., natfare).polviews2 -0.275   0.386  -0.403  \n16 Mult(1, ., natfare).polviews3 -0.158   0.269  -0.279  \n17 Mult(1, ., natfare).polviews4  0.0646 -0.0275 -0.00196\n18 Mult(1, ., natfare).polviews5 -0.0505  0.0555 -0.00196\n19 Mult(1, ., natfare).polviews6  0.512  -0.494   0.492  \n20 Mult(1, ., natfare).polviews7  0.514  -0.601   0.597  \n21 Mult(1, polviews, .).natfare1 -0.607  -0.580   0.569  \n22 Mult(1, polviews, .).natfare2 -0.169  -0.207   0.222  \n23 Mult(1, polviews, .).natfare3  0.776   0.788  -0.791  \n```\n:::\n:::\n\n\n\n## 表3.4\n\n表3.4のデータを入力する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 表3.1\nFreq <- c(76, 14, 15,  4,\n        32, 17,  7,  3,\n        64, 23, 28, 15,\n        41, 11, 27, 16,\n        15,  2,  7,  4,\n        27, 20,  9,  5,\n        57, 31, 24, 15,\n        27,  9, 22, 16,\n        13,  6, 13,  5,\n        12, 13, 10,  6,\n        46, 32, 75, 20,\n        54, 26, 58, 55,\n        7,  6,  7,  6,\n        7,  2,  3,  6,\n        12, 11, 31, 15,\n        52, 36, 80,101)\n```\n:::\n\n\n行，列，層のカテゴリを入力し，`matrix`で確認する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL <- gl(4, 16, 64)\nR <- gl(4, 4, 64)\nC <- gl(4, 1, 64)\n\n# 確認する\nL |> matrix(nrow = 16, ncol = 4, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"1\"  \"1\"  \"1\" \n [2,] \"1\"  \"1\"  \"1\"  \"1\" \n [3,] \"1\"  \"1\"  \"1\"  \"1\" \n [4,] \"1\"  \"1\"  \"1\"  \"1\" \n [5,] \"2\"  \"2\"  \"2\"  \"2\" \n [6,] \"2\"  \"2\"  \"2\"  \"2\" \n [7,] \"2\"  \"2\"  \"2\"  \"2\" \n [8,] \"2\"  \"2\"  \"2\"  \"2\" \n [9,] \"3\"  \"3\"  \"3\"  \"3\" \n[10,] \"3\"  \"3\"  \"3\"  \"3\" \n[11,] \"3\"  \"3\"  \"3\"  \"3\" \n[12,] \"3\"  \"3\"  \"3\"  \"3\" \n[13,] \"4\"  \"4\"  \"4\"  \"4\" \n[14,] \"4\"  \"4\"  \"4\"  \"4\" \n[15,] \"4\"  \"4\"  \"4\"  \"4\" \n[16,] \"4\"  \"4\"  \"4\"  \"4\" \n```\n:::\n\n```{.r .cell-code}\nR |> matrix(nrow = 16, ncol = 4, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"1\"  \"1\"  \"1\" \n [2,] \"2\"  \"2\"  \"2\"  \"2\" \n [3,] \"3\"  \"3\"  \"3\"  \"3\" \n [4,] \"4\"  \"4\"  \"4\"  \"4\" \n [5,] \"1\"  \"1\"  \"1\"  \"1\" \n [6,] \"2\"  \"2\"  \"2\"  \"2\" \n [7,] \"3\"  \"3\"  \"3\"  \"3\" \n [8,] \"4\"  \"4\"  \"4\"  \"4\" \n [9,] \"1\"  \"1\"  \"1\"  \"1\" \n[10,] \"2\"  \"2\"  \"2\"  \"2\" \n[11,] \"3\"  \"3\"  \"3\"  \"3\" \n[12,] \"4\"  \"4\"  \"4\"  \"4\" \n[13,] \"1\"  \"1\"  \"1\"  \"1\" \n[14,] \"2\"  \"2\"  \"2\"  \"2\" \n[15,] \"3\"  \"3\"  \"3\"  \"3\" \n[16,] \"4\"  \"4\"  \"4\"  \"4\" \n```\n:::\n\n```{.r .cell-code}\nC |> matrix(nrow = 16, ncol = 4, byrow = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"2\"  \"3\"  \"4\" \n [2,] \"1\"  \"2\"  \"3\"  \"4\" \n [3,] \"1\"  \"2\"  \"3\"  \"4\" \n [4,] \"1\"  \"2\"  \"3\"  \"4\" \n [5,] \"1\"  \"2\"  \"3\"  \"4\" \n [6,] \"1\"  \"2\"  \"3\"  \"4\" \n [7,] \"1\"  \"2\"  \"3\"  \"4\" \n [8,] \"1\"  \"2\"  \"3\"  \"4\" \n [9,] \"1\"  \"2\"  \"3\"  \"4\" \n[10,] \"1\"  \"2\"  \"3\"  \"4\" \n[11,] \"1\"  \"2\"  \"3\"  \"4\" \n[12,] \"1\"  \"2\"  \"3\"  \"4\" \n[13,] \"1\"  \"2\"  \"3\"  \"4\" \n[14,] \"1\"  \"2\"  \"3\"  \"4\" \n[15,] \"1\"  \"2\"  \"3\"  \"4\" \n[16,] \"1\"  \"2\"  \"3\"  \"4\" \n```\n:::\n:::\n\n\n\n以上を`tibble`でまとめ，データを作成する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq_tab_3.1 <- tibble(Freq, L, R, C) |> arrange(L, R, C)\nfreq_tab_3.1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 4\n    Freq L     R     C    \n   <dbl> <fct> <fct> <fct>\n 1    76 1     1     1    \n 2    14 1     1     2    \n 3    15 1     1     3    \n 4     4 1     1     4    \n 5    32 1     2     1    \n 6    17 1     2     2    \n 7     7 1     2     3    \n 8     3 1     2     4    \n 9    64 1     3     1    \n10    23 1     3     2    \n# ℹ 54 more rows\n```\n:::\n:::\n\n\n行，列，層について整数スコアを作成する．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq_tab_3.1 <- freq_tab_3.1 |> \n  mutate(Rscore = as.numeric(R),\n         Cscore = as.numeric(C),\n         Lscore = as.numeric(L))\nfreq_tab_3.1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 7\n    Freq L     R     C     Rscore Cscore Lscore\n   <dbl> <fct> <fct> <fct>  <dbl>  <dbl>  <dbl>\n 1    76 1     1     1          1      1      1\n 2    14 1     1     2          1      2      1\n 3    15 1     1     3          1      3      1\n 4     4 1     1     4          1      4      1\n 5    32 1     2     1          2      1      1\n 6    17 1     2     2          2      2      1\n 7     7 1     2     3          2      3      1\n 8     3 1     2     4          2      4      1\n 9    64 1     3     1          3      1      1\n10    23 1     3     2          3      2      1\n# ℹ 54 more rows\n```\n:::\n:::\n\n\n\nそれではモデル1から15までを用いた推定を行う．ただし`gnm`ではモデル3と5の推定はできない．\nまた\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Model 1 - Complete Independence\nmodel1 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 2 - Unrestricted RC(1)+RL(1)+CL(1)\nmodel2 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L + Mult(1, R, C) + Mult(1, R, L) + Mult(1, C, L),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..............................\nDone\n```\n:::\n\n```{.r .cell-code}\n# Model 3 - Restricted RC(1)+RL(1)+CL(1) with consistent score\n# It may not be fitted with gnm package!\n\n# Model 4 - Model 2 with consistent cells fitted exactly\nfreq_tab_3.1 <- freq_tab_3.1 |>\n  mutate(consistent.cells = factor(ifelse((R == C) & (C == L), R, 0)))\nmodel4 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L + consistent.cells +\n      Mult(1, R, C) + Mult(1, R, L) + Mult(1, C, L),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................................\nDone\n```\n:::\n\n```{.r .cell-code}\n# Model 5 - Model 3 with consistent cells fitted exactly\n# It may not be fitted with gnm package!\n\n# Model 6 - Full Two-way interaction\nmodel6 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R * C + R * L + C * L,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\nsummary(model6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R * C + R * L + C * L, family = poisson, \n    data = freq_tab_3.1, tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-1.685582  -0.504109  -0.008581   0.460359   1.299438  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.26029    0.11066  38.499  < 2e-16 ***\nR2          -0.79606    0.18519  -4.299 1.72e-05 ***\nR3          -0.09579    0.14996  -0.639  0.52299    \nR4          -0.43476    0.16083  -2.703  0.00687 ** \nC2          -1.63953    0.22829  -7.182 6.89e-13 ***\nC3          -1.39351    0.20261  -6.878 6.08e-12 ***\nC4          -2.33707    0.28019  -8.341  < 2e-16 ***\nR2:C2        0.90120    0.28232   3.192  0.00141 ** \nR3:C2        0.63274    0.25192   2.512  0.01202 *  \nR4:C2        0.33707    0.26138   1.290  0.19719    \nR2:C3       -0.06534    0.29098  -0.225  0.82232    \nR3:C3        0.66917    0.22004   3.041  0.00236 ** \nR4:C3        0.60286    0.22215   2.714  0.00665 ** \nR2:C4        0.34284    0.36220   0.947  0.34388    \nR3:C4        0.56412    0.29673   1.901  0.05729 .  \nR4:C4        1.27643    0.28261   4.517 6.29e-06 ***\nL2          -1.48502    0.22186  -6.694 2.18e-11 ***\nL3          -1.52970    0.20833  -7.343 2.10e-13 ***\nL4          -2.08728    0.24553  -8.501  < 2e-16 ***\nR2:L2        1.34634    0.28170   4.779 1.76e-06 ***\nR3:L2        1.28703    0.24739   5.203 1.97e-07 ***\nR4:L2        1.03853    0.26517   3.916 8.99e-05 ***\nR2:L3        0.67005    0.28444   2.356  0.01849 *  \nR3:L3        1.21742    0.22757   5.350 8.81e-08 ***\nR4:L3        1.59671    0.23321   6.847 7.56e-12 ***\nR2:L4        0.17240    0.35528   0.485  0.62750    \nR3:L4        0.61348    0.27149   2.260  0.02384 *  \nR4:L4        2.16906    0.25643   8.459  < 2e-16 ***\nC2:L2        0.35033    0.21463   1.632  0.10263    \nC3:L2        0.22827    0.20862   1.094  0.27389    \nC4:L2        0.49174    0.25839   1.903  0.05703 .  \nC2:L3        0.65539    0.20819   3.148  0.00164 ** \nC3:L3        1.09826    0.18400   5.969 2.39e-09 ***\nC4:L3        1.11150    0.23123   4.807 1.53e-06 ***\nC2:L4        0.87747    0.23892   3.673  0.00024 ***\nC3:L4        1.29956    0.20753   6.262 3.80e-10 ***\nC4:L4        1.79692    0.23862   7.530 5.06e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 28.998 on 27 degrees of freedom\nAIC: 397.32\n\nNumber of iterations: 5\n```\n:::\n\n```{.r .cell-code}\n# Model 7 - Model 6 with consistent cells fitted exactly\nmodel7 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R * C + R * L + C * L + consistent.cells,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\nsummary(model7)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R * C + R * L + C * L + consistent.cells, \n    family = poisson, data = freq_tab_3.1, tolerance = 1e-12,     trace = F)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-1.505e+00  -4.123e-01  -1.490e-08   3.008e-01   1.562e+00  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        3.70806    0.31642  11.719  < 2e-16 ***\nR2                -0.26471    0.33752  -0.784 0.432870    \nR3                 0.43595    0.31473   1.385 0.166007    \nR4                 0.04506    0.31538   0.143 0.886401    \nC2                -1.23787    0.31573  -3.921 8.83e-05 ***\nC3                -0.95472    0.29544  -3.232 0.001231 ** \nC4                -2.00687    0.35086  -5.720 1.07e-08 ***\nR2:C2              0.49806    0.36012   1.383 0.166653    \nR3:C2              0.33263    0.30439   1.093 0.274482    \nR4:C2              0.02956    0.30915   0.096 0.923826    \nR2:C3             -0.37252    0.33538  -1.111 0.266684    \nR3:C3              0.21202    0.29412   0.721 0.470997    \nR4:C3              0.33724    0.27290   1.236 0.216553    \nR2:C4              0.06257    0.39636   0.158 0.874574    \nR3:C4              0.29993    0.33550   0.894 0.371334    \nR4:C4              1.06332    0.33951   3.132 0.001737 ** \nL2                -1.05809    0.31923  -3.314 0.000918 ***\nL3                -1.09080    0.29894  -3.649 0.000263 ***\nL4                -1.74115    0.32163  -5.413 6.18e-08 ***\nR2:L2              0.91597    0.36361   2.519 0.011766 *  \nR3:L2              0.93125    0.31450   2.961 0.003066 ** \nR4:L2              0.67771    0.32813   2.065 0.038888 *  \nR2:L3              0.33649    0.33467   1.005 0.314694    \nR3:L3              0.75119    0.30376   2.473 0.013399 *  \nR4:L3              1.28290    0.29072   4.413 1.02e-05 ***\nR2:L4             -0.12414    0.39162  -0.317 0.751243    \nR3:L4              0.33826    0.31651   1.069 0.285199    \nR4:L4              1.91005    0.31369   6.089 1.14e-09 ***\nC2:L2              0.17440    0.24791   0.704 0.481744    \nC3:L2              0.12343    0.21731   0.568 0.570049    \nC4:L2              0.38519    0.26377   1.460 0.144196    \nC2:L3              0.54622    0.21620   2.526 0.011522 *  \nC3:L3              0.78217    0.22762   3.436 0.000590 ***\nC4:L3              0.98203    0.23833   4.120 3.78e-05 ***\nC2:L4              0.75925    0.24670   3.078 0.002087 ** \nC3:L4              1.14125    0.21839   5.226 1.73e-07 ***\nC4:L4              1.79914    0.31902   5.640 1.70e-08 ***\nconsistent.cells1  0.62268    0.33657   1.850 0.064303 .  \nconsistent.cells2  0.25993    0.39723   0.654 0.512891    \nconsistent.cells3  0.47364    0.26552   1.784 0.074458 .  \nconsistent.cells4 -0.16248    0.31471  -0.516 0.605666    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 21.934 on 23 degrees of freedom\nAIC: 398.25\n\nNumber of iterations: 5\n```\n:::\n\n```{.r .cell-code}\n# Model 8 - Unrestricted uniform and log-multiplicative association in all partial\n# association\nmodel8 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), family = poisson, data = freq_tab_3.1, tolerance = 1e-12,     trace = F)\n\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.64348  -0.68031  -0.02712   0.48954   2.01814  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.590743         NA      NA       NA    \nR2               -0.991567         NA      NA       NA    \nR3               -0.763856         NA      NA       NA    \nR4               -1.580632         NA      NA       NA    \nC2               -1.612551         NA      NA       NA    \nC3               -2.082971         NA      NA       NA    \nC4               -3.431885         NA      NA       NA    \nL2               -1.455875         NA      NA       NA    \nL3               -2.230158         NA      NA       NA    \nL4               -3.822177         NA      NA       NA    \nRscore:Cscore     0.129644   0.027279   4.752 2.01e-06 ***\nMult(., R, C).    0.075910         NA      NA       NA    \nMult(1, ., C).R1 -5.577630         NA      NA       NA    \nMult(1, ., C).R2 12.601686         NA      NA       NA    \nMult(1, ., C).R3  5.650575         NA      NA       NA    \nMult(1, ., C).R4 -7.081580         NA      NA       NA    \nMult(1, R, .).C1 -0.081030         NA      NA       NA    \nMult(1, R, .).C2  0.419357         NA      NA       NA    \nMult(1, R, .).C3  0.020033         NA      NA       NA    \nMult(1, R, .).C4 -0.344509         NA      NA       NA    \nRscore:Lscore     0.254496   0.028029   9.080  < 2e-16 ***\nMult(., R, L).   -0.995362         NA      NA       NA    \nMult(1, ., L).R1  1.445327         NA      NA       NA    \nMult(1, ., L).R2 -1.384262         NA      NA       NA    \nMult(1, ., L).R3 -1.078949         NA      NA       NA    \nMult(1, ., L).R4  0.885502         NA      NA       NA    \nMult(1, R, .).L1 -0.021719         NA      NA       NA    \nMult(1, R, .).L2  0.310587         NA      NA       NA    \nMult(1, R, .).L3  0.064651         NA      NA       NA    \nMult(1, R, .).L4 -0.346728         NA      NA       NA    \nCscore:Lscore     0.201725   0.025855   7.802  < 2e-16 ***\nMult(., C, L).   -0.841663         NA      NA       NA    \nMult(1, ., L).C1  0.317343         NA      NA       NA    \nMult(1, ., L).C2 -0.015405         NA      NA       NA    \nMult(1, ., L).C3 -0.923813         NA      NA       NA    \nMult(1, ., L).C4  0.389693         NA      NA       NA    \nMult(1, C, .).L1 -0.021271         NA      NA       NA    \nMult(1, C, .).L2 -0.172056         NA      NA       NA    \nMult(1, C, .).L3  0.275629         NA      NA       NA    \nMult(1, C, .).L4  0.003443         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 45.854 on 36 degrees of freedom\nAIC: 396.17\n\nNumber of iterations: 68\n```\n:::\n\n```{.r .cell-code}\npickCoef(model8, \"[.]R\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, ., C).R1 Mult(1, ., C).R2 Mult(1, ., C).R3 Mult(1, ., C).R4 \n              13               14               15               16 \nMult(1, ., L).R1 Mult(1, ., L).R2 Mult(1, ., L).R3 Mult(1, ., L).R4 \n              23               24               25               26 \n```\n:::\n\n```{.r .cell-code}\npickCoef(model8, \"[.]C\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, R, .).C1 Mult(1, R, .).C2 Mult(1, R, .).C3 Mult(1, R, .).C4 \n              17               18               19               20 \nMult(1, ., L).C1 Mult(1, ., L).C2 Mult(1, ., L).C3 Mult(1, ., L).C4 \n              33               34               35               36 \n```\n:::\n\n```{.r .cell-code}\npickCoef(model8, \"[.]L\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMult(1, R, .).L1 Mult(1, R, .).L2 Mult(1, R, .).L3 Mult(1, R, .).L4 \n              27               28               29               30 \nMult(1, C, .).L1 Mult(1, C, .).L2 Mult(1, C, .).L3 Mult(1, C, .).L4 \n              37               38               39               40 \n```\n:::\n\n```{.r .cell-code}\ndata.frame(var = names(model8$coefficients),\n           estimate = model8$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                              var     estimate number\n(Intercept)           (Intercept)  3.590743429      1\nR2                             R2 -0.991567406      2\nR3                             R3 -0.763856054      3\nR4                             R4 -1.580631731      4\nC2                             C2 -1.612551384      5\nC3                             C3 -2.082970787      6\nC4                             C4 -3.431884554      7\nL2                             L2 -1.455875023      8\nL3                             L3 -2.230157570      9\nL4                             L4 -3.822176830     10\nRscore:Cscore       Rscore:Cscore  0.129643997     11\nMult(., R, C).     Mult(., R, C).  0.075909798     12\nMult(1, ., C).R1 Mult(1, ., C).R1 -5.577630260     13\nMult(1, ., C).R2 Mult(1, ., C).R2 12.601686366     14\nMult(1, ., C).R3 Mult(1, ., C).R3  5.650575245     15\nMult(1, ., C).R4 Mult(1, ., C).R4 -7.081580455     16\nMult(1, R, .).C1 Mult(1, R, .).C1 -0.081030259     17\nMult(1, R, .).C2 Mult(1, R, .).C2  0.419357311     18\nMult(1, R, .).C3 Mult(1, R, .).C3  0.020033266     19\nMult(1, R, .).C4 Mult(1, R, .).C4 -0.344508928     20\nRscore:Lscore       Rscore:Lscore  0.254496389     21\nMult(., R, L).     Mult(., R, L). -0.995361682     22\nMult(1, ., L).R1 Mult(1, ., L).R1  1.445327445     23\nMult(1, ., L).R2 Mult(1, ., L).R2 -1.384262170     24\nMult(1, ., L).R3 Mult(1, ., L).R3 -1.078948612     25\nMult(1, ., L).R4 Mult(1, ., L).R4  0.885501714     26\nMult(1, R, .).L1 Mult(1, R, .).L1 -0.021718891     27\nMult(1, R, .).L2 Mult(1, R, .).L2  0.310587013     28\nMult(1, R, .).L3 Mult(1, R, .).L3  0.064650970     29\nMult(1, R, .).L4 Mult(1, R, .).L4 -0.346727933     30\nCscore:Lscore       Cscore:Lscore  0.201724868     31\nMult(., C, L).     Mult(., C, L). -0.841663144     32\nMult(1, ., L).C1 Mult(1, ., L).C1  0.317343382     33\nMult(1, ., L).C2 Mult(1, ., L).C2 -0.015404811     34\nMult(1, ., L).C3 Mult(1, ., L).C3 -0.923812849     35\nMult(1, ., L).C4 Mult(1, ., L).C4  0.389692768     36\nMult(1, C, .).L1 Mult(1, C, .).L1 -0.021270934     37\nMult(1, C, .).L2 Mult(1, C, .).L2 -0.172055801     38\nMult(1, C, .).L3 Mult(1, C, .).L3  0.275628694     39\nMult(1, C, .).L4 Mult(1, C, .).L4  0.003442546     40\n```\n:::\n\n```{.r .cell-code}\n# mu1: 13-16\nmu1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]R\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nmu1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Estimate Std. Error\nMult(1, ., C).R1 -0.4291986 0.18120993\nMult(1, ., C).R2  0.6893016 0.09977232\nMult(1, ., C).R3  0.2616277 0.15931019\nMult(1, ., C).R4 -0.5217306 0.15976113\n```\n:::\n\n```{.r .cell-code}\n# nu1: 17-20\nnu1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).C1 -0.15388700 0.15383900\nMult(1, R, .).C2  0.75746716 0.08227847\nMult(1, R, .).C3  0.03017965 0.15480459\nMult(1, R, .).C4 -0.63375980 0.11651692\n```\n:::\n\n```{.r .cell-code}\n# mu2: 23-26\nmu2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]R\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nmu2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Estimate Std. Error\nMult(1, ., L).R1  0.6061444 0.08512883\nMult(1, ., L).R2 -0.5539702 0.08877502\nMult(1, ., L).R3 -0.4287935 0.09713147\nMult(1, ., L).R4  0.3766193 0.10554742\n```\n:::\n\n```{.r .cell-code}\n# eta1: 27-30\neta1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]L\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\neta1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).L1 -0.04977493 0.08992116\nMult(1, R, .).L2  0.65658058 0.06234704\nMult(1, R, .).L3  0.13381443 0.08765352\nMult(1, R, .).L4 -0.74062008 0.04970264\n```\n:::\n\n```{.r .cell-code}\n# nu2: 33-36\nnu2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]C\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, ., L).C1  0.35910324  0.2995712\nMult(1, ., L).C2  0.04079069  0.3606231\nMult(1, ., L).C3 -0.82820782  0.1075525\nMult(1, ., L).C4  0.42831389  0.3177968\n```\n:::\n\n```{.r .cell-code}\n# eta2: 37-40\neta2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]L\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\neta2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, C, .).L1 -0.13230141  0.3592002\nMult(1, C, .).L2 -0.59941504  0.2494518\nMult(1, C, .).L3  0.78745843  0.1409196\nMult(1, C, .).L4 -0.05574198  0.3241035\n```\n:::\n\n```{.r .cell-code}\ncon <- c(mu1$qvframe[, 1][c(1,4)],\n         nu1$qvframe[, 1][c(1,4)],\n         mu2$qvframe[, 1][c(1,4)],\n         eta1$qvframe[, 1][c(1,4)],\n         nu2$qvframe[, 1][c(1,4)],\n         eta2$qvframe[, 1][c(1,4)])\n\n\nmodel8_se <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n#    constrain = c(13,16,17,20,23,26,27,30,33,36,37,40),\n#    constrainTo = con,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-15\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n...........................................\nDone\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n```\n:::\n\n```{.r .cell-code}\nsummary(model8_se)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), family = poisson, data = freq_tab_3.1, tolerance = 1e-15,     trace = F)\n\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.64348  -0.68031  -0.02712   0.48954   2.01814  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.59106         NA      NA       NA    \nR2               -0.99397         NA      NA       NA    \nR3               -0.76234         NA      NA       NA    \nR4               -1.57736         NA      NA       NA    \nC2               -1.59829         NA      NA       NA    \nC3               -2.05832         NA      NA       NA    \nC4               -3.43749         NA      NA       NA    \nL2               -1.45800         NA      NA       NA    \nL3               -2.28389         NA      NA       NA    \nL4               -3.80067         NA      NA       NA    \nRscore:Cscore     0.12964    0.02728   4.752 2.01e-06 ***\nMult(., R, C).   -0.57198         NA      NA       NA    \nMult(1, ., C).R1  0.69389         NA      NA       NA    \nMult(1, ., C).R2 -1.48451         NA      NA       NA    \nMult(1, ., C).R3 -0.65157         NA      NA       NA    \nMult(1, ., C).R4  0.87411         NA      NA       NA    \nMult(1, R, .).C1 -0.07903         NA      NA       NA    \nMult(1, R, .).C2  0.47516         NA      NA       NA    \nMult(1, R, .).C3  0.03290         NA      NA       NA    \nMult(1, R, .).C4 -0.37084         NA      NA       NA    \nRscore:Lscore     0.25450    0.02803   9.080  < 2e-16 ***\nMult(., R, L).    0.47237         NA      NA       NA    \nMult(1, ., L).R1  2.33804         NA      NA       NA    \nMult(1, ., L).R2 -2.50239         NA      NA       NA    \nMult(1, ., L).R3 -1.98010         NA      NA       NA    \nMult(1, ., L).R4  1.38037         NA      NA       NA    \nMult(1, R, .).L1  0.03154         NA      NA       NA    \nMult(1, R, .).L2 -0.37780         NA      NA       NA    \nMult(1, R, .).L3 -0.07485         NA      NA       NA    \nMult(1, R, .).L4  0.43189         NA      NA       NA    \nCscore:Lscore     0.20172    0.02585   7.802  < 2e-16 ***\nMult(., C, L).    1.58760         NA      NA       NA    \nMult(1, ., L).C1  0.05794         NA      NA       NA    \nMult(1, ., L).C2 -0.09111         NA      NA       NA    \nMult(1, ., L).C3 -0.49802         NA      NA       NA    \nMult(1, ., L).C4  0.09035         NA      NA       NA    \nMult(1, C, .).L1  0.05125         NA      NA       NA    \nMult(1, C, .).L2  0.22971         NA      NA       NA    \nMult(1, C, .).L3 -0.30014         NA      NA       NA    \nMult(1, C, .).L4  0.02200         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 45.854 on 36 degrees of freedom\nAIC: 396.17\n\nNumber of iterations: 500\n```\n:::\n\n```{.r .cell-code}\noptions(contrasts = c(factor=\"contr.treatment\",\n                      ordered=\"contr.treatment\"))\n# Model 9 - Model 8 with consistent row scores\nmodel9 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C + L) +\n      Rscore:Lscore +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n......\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model9)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + \n    L) + Rscore:Lscore + Cscore:Lscore + Mult(1, C, L), family = poisson, \n    data = freq_tab_3.1, tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)           3.596389         NA      NA       NA    \nR2                   -1.004503         NA      NA       NA    \nR3                   -0.765933         NA      NA       NA    \nR4                   -1.561400         NA      NA       NA    \nC2                   -1.627278         NA      NA       NA    \nC3                   -2.042905         NA      NA       NA    \nC4                   -3.458409         NA      NA       NA    \nL2                   -1.445451         NA      NA       NA    \nL3                   -2.260385         NA      NA       NA    \nL4                   -3.756951         NA      NA       NA    \nRscore:Cscore         0.133527   0.025355   5.266 1.39e-07 ***\nMult(., R, C + L).    4.354566         NA      NA       NA    \nMult(1, ., C + L).R1  0.222588         NA      NA       NA    \nMult(1, ., C + L).R2 -0.302676         NA      NA       NA    \nMult(1, ., C + L).R3 -0.210934         NA      NA       NA    \nMult(1, ., C + L).R4  0.159931         NA      NA       NA    \nMult(1, R, . + L).C1  0.069850         NA      NA       NA    \nMult(1, R, . + L).C2 -0.229224         NA      NA       NA    \nMult(1, R, . + L).C3 -0.008935         NA      NA       NA    \nMult(1, R, . + L).C4  0.234547         NA      NA       NA    \nMult(1, R, C + .).L2 -0.408601         NA      NA       NA    \nMult(1, R, C + .).L3 -0.101523         NA      NA       NA    \nMult(1, R, C + .).L4  0.394132         NA      NA       NA    \nRscore:Lscore         0.248478   0.027223   9.127  < 2e-16 ***\nCscore:Lscore         0.202702   0.025617   7.913  < 2e-16 ***\nMult(., C, L).        1.414373         NA      NA       NA    \nMult(1, ., L).C1     -0.028655         NA      NA       NA    \nMult(1, ., L).C2      0.066846         NA      NA       NA    \nMult(1, ., L).C3      0.426234         NA      NA       NA    \nMult(1, ., L).C4     -0.058806         NA      NA       NA    \nMult(1, C, .).L1     -0.123987         NA      NA       NA    \nMult(1, C, .).L2     -0.399571         NA      NA       NA    \nMult(1, C, .).L3      0.325158         NA      NA       NA    \nMult(1, C, .).L4     -0.110972         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 38 degrees of freedom\nAIC: 393.45\n\nNumber of iterations: 63\n```\n:::\n\n```{.r .cell-code}\nmu <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]C\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta2 <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]L\")[4:7],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmodel9.extended <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    constrain = c(13:16, 23:26),\n    constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.....\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model9.extended)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), constrain = c(13:16, 23:26), constrainTo = c(mu$qvframe[, \n    1], mu$qvframe[, 1]), family = poisson, data = freq_tab_3.1, \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.60528         NA      NA       NA    \nR2               -1.02405         NA      NA       NA    \nR3               -0.78206         NA      NA       NA    \nR4               -1.56373         NA      NA       NA    \nC2               -1.58255         NA      NA       NA    \nC3               -2.02192         NA      NA       NA    \nC4               -3.48256         NA      NA       NA    \nL2               -1.36739         NA      NA       NA    \nL3               -2.27808         NA      NA       NA    \nL4               -3.81413         NA      NA       NA    \nRscore:Cscore     0.13353    0.02520   5.300 1.16e-07 ***\nMult(., R, C).   -0.13728         NA      NA       NA    \nMult(1, ., C).R1  0.56136         NA      NA       NA    \nMult(1, ., C).R2 -0.59333         NA      NA       NA    \nMult(1, ., C).R3 -0.39165         NA      NA       NA    \nMult(1, ., C).R4  0.42362         NA      NA       NA    \nMult(1, R, .).C1 -0.70068         NA      NA       NA    \nMult(1, R, .).C2  3.61489         NA      NA       NA    \nMult(1, R, .).C3  0.43616         NA      NA       NA    \nMult(1, R, .).C4 -3.07723         NA      NA       NA    \nRscore:Lscore     0.24848    0.02521   9.856  < 2e-16 ***\nMult(., R, L).   -0.16932         NA      NA       NA    \nMult(1, ., L).R1  0.56136         NA      NA       NA    \nMult(1, ., L).R2 -0.59333         NA      NA       NA    \nMult(1, ., L).R3 -0.39165         NA      NA       NA    \nMult(1, ., L).R4  0.42362         NA      NA       NA    \nMult(1, R, .).L1 -0.14912         NA      NA       NA    \nMult(1, R, .).L2  4.63099         NA      NA       NA    \nMult(1, R, .).L3  1.03857         NA      NA       NA    \nMult(1, R, .).L4 -4.75997         NA      NA       NA    \nCscore:Lscore     0.20270    0.02560   7.919  < 2e-16 ***\nMult(., C, L).    1.44393         NA      NA       NA    \nMult(1, ., L).C1  0.03056         NA      NA       NA    \nMult(1, ., L).C2  0.16317         NA      NA       NA    \nMult(1, ., L).C3  0.66223         NA      NA       NA    \nMult(1, ., L).C4 -0.01131         NA      NA       NA    \nMult(1, C, .).L1 -0.09814         NA      NA       NA    \nMult(1, C, .).L2 -0.29254         NA      NA       NA    \nMult(1, C, .).L3  0.21868         NA      NA       NA    \nMult(1, C, .).L4 -0.08896         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 40 degrees of freedom\nAIC: 389.45\n\nNumber of iterations: 62\n```\n:::\n\n```{.r .cell-code}\nnu1 <- getContrasts(\n  model9.extended,\n  pickCoef(model9.extended, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta1 <- getContrasts(\n    model9.extended,\n    pickCoef(model9.extended, \"[.]L\")[1:4],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel9.phis <-\n  freq_tab_3.1 |>  gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) +\n      Rscore:Lscore + \n      Mult(1, R, L) + \n      Cscore:Lscore + \n      Mult(1, C, L),\n    constrain = c(13:20, 23:30, 33:40),\n    constrainTo = c(\n      mu$qvframe[, 1],\n      nu1$qvframe[, 1],\n      mu$qvframe[, 1],\n      eta1$qvframe[, 1],\n      nu2$qvframe[, 1],\n      eta2$qvframe[, 1]\n    ),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning main iterations.............\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model9.phis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), constrain = c(13:20, 23:30, 33:40), constrainTo = c(mu$qvframe[, \n    1], nu1$qvframe[, 1], mu$qvframe[, 1], eta1$qvframe[, 1], \n    nu2$qvframe[, 1], eta2$qvframe[, 1]), family = poisson, data = freq_tab_3.1, \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.56903    0.08137  43.862  < 2e-16 ***\nR2               -0.97605    0.11881  -8.215  < 2e-16 ***\nR3               -0.74245    0.14810  -5.013 5.36e-07 ***\nR4               -1.55801    0.22175  -7.026 2.13e-12 ***\nC2               -1.59504    0.10577 -15.081  < 2e-16 ***\nC3               -2.08142    0.17240 -12.073  < 2e-16 ***\nC4               -3.47861    0.26841 -12.960  < 2e-16 ***\nL2               -1.42666    0.10739 -13.285  < 2e-16 ***\nL3               -2.18148    0.17791 -12.262  < 2e-16 ***\nL4               -3.81133    0.27937 -13.643  < 2e-16 ***\nRscore:Cscore     0.13353    0.02486   5.371 7.83e-08 ***\nMult(., R, C).   -0.66121    0.14008  -4.720 2.36e-06 ***\nMult(1, ., C).R1  0.56136         NA      NA       NA    \nMult(1, ., C).R2 -0.59333         NA      NA       NA    \nMult(1, ., C).R3 -0.39165         NA      NA       NA    \nMult(1, ., C).R4  0.42362         NA      NA       NA    \nMult(1, R, .).C1 -0.15965         NA      NA       NA    \nMult(1, R, .).C2  0.73633         NA      NA       NA    \nMult(1, R, .).C3  0.07638         NA      NA       NA    \nMult(1, R, .).C4 -0.65306         NA      NA       NA    \nRscore:Lscore     0.24848    0.02515   9.879  < 2e-16 ***\nMult(., R, L).   -1.13662    0.13964  -8.140  < 2e-16 ***\nMult(1, ., L).R1  0.56136         NA      NA       NA    \nMult(1, ., L).R2 -0.59333         NA      NA       NA    \nMult(1, ., L).R3 -0.39165         NA      NA       NA    \nMult(1, ., L).R4  0.42362         NA      NA       NA    \nMult(1, R, .).L1 -0.05054         NA      NA       NA    \nMult(1, R, .).L2  0.66157         NA      NA       NA    \nMult(1, R, .).L3  0.12640         NA      NA       NA    \nMult(1, R, .).L4 -0.73743         NA      NA       NA    \nCscore:Lscore     0.20270    0.02315   8.756  < 2e-16 ***\nMult(., C, L).    0.28351    0.10068   2.816  0.00486 ** \nMult(1, ., L).C1 -0.33661         NA      NA       NA    \nMult(1, ., L).C2 -0.08944         NA      NA       NA    \nMult(1, ., L).C3  0.84069         NA      NA       NA    \nMult(1, ., L).C4 -0.41464         NA      NA       NA    \nMult(1, C, .).L1 -0.08991         NA      NA       NA    \nMult(1, C, .).L2 -0.62111         NA      NA       NA    \nMult(1, C, .).L3  0.77584         NA      NA       NA    \nMult(1, C, .).L4 -0.06482         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 48 degrees of freedom\nAIC: 373.45\n\nNumber of iterations: 13\n```\n:::\n\n```{.r .cell-code}\nmu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       Estimate Std. Error\nMult(1, ., C + L).R1  0.5613577 0.07946201\nMult(1, ., C + L).R2 -0.5933253 0.06976100\nMult(1, ., C + L).R3 -0.3916506 0.08375491\nMult(1, ., C + L).R4  0.4236182 0.08896023\n```\n:::\n\n```{.r .cell-code}\nnu1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).C1 -0.15964986 0.14637516\nMult(1, R, .).C2  0.73633460 0.08871449\nMult(1, R, .).C3  0.07637713 0.15684115\nMult(1, R, .).C4 -0.65306187 0.10868144\n```\n:::\n\n```{.r .cell-code}\neta1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).L1 -0.05053742 0.08981862\nMult(1, R, .).L2  0.66156822 0.06038098\nMult(1, R, .).L3  0.12639555 0.08679365\nMult(1, R, .).L4 -0.73742635 0.04940126\n```\n:::\n\n```{.r .cell-code}\nnu2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, ., L).C1 -0.33661004 0.30087703\nMult(1, ., L).C2 -0.08944163 0.36058729\nMult(1, ., L).C3  0.84069369 0.08936905\nMult(1, ., L).C4 -0.41464201 0.32252708\n```\n:::\n\n```{.r .cell-code}\neta2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, C, .).L1 -0.08990831  0.3610226\nMult(1, C, .).L2 -0.62111332  0.2399524\nMult(1, C, .).L3  0.77584334  0.1519881\nMult(1, C, .).L4 -0.06482171  0.3227342\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model9)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model9                 38  47.1 -231.  6.25 0.147\n```\n:::\n\n```{.r .cell-code}\n# Model 10 - Model 8 with consistent col scores\nmodel10 <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, C, R + L) +\n      Rscore:Lscore + \n      Mult(1, R, L) + \n      Cscore:Lscore,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n................................................................................\n...\nDone\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta      p\n  <chr>               <int> <dbl> <dbl> <dbl>  <dbl>\n1 model10                38  54.8 -223.  7.50 0.0384\n```\n:::\n\n```{.r .cell-code}\n# Model 11 - Model 8 with consistent layer scores\nmodel11 <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, L, R + C) +\n      Rscore:Lscore +\n      Mult(1, R, C) +\n      Cscore:Lscore,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..................................................\nDone\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model11)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta      p\n  <chr>               <int> <dbl> <dbl> <dbl>  <dbl>\n1 model11                38  53.6 -225.  6.58 0.0477\n```\n:::\n\n```{.r .cell-code}\n# Model 12 - Modek 9 + U(RL)=U(CL)\n# To impose equality constraint on U(RL) & U(CL),\n# a covariate is created in following manner:\n\nfreq_tab_3.1 <- freq_tab_3.1|> \n  mutate(cov_rcl = Rscore * Lscore + Cscore * Lscore)\nmodel12 <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C + L) +\n      cov_rcl + \n      Mult(1, C, L),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.....................................................\nDone\n```\n:::\n\n```{.r .cell-code}\n#summary(model12)\nmodel.summary(model12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12                39  48.6 -237.  6.57 0.140\n```\n:::\n\n```{.r .cell-code}\nmu <- getContrasts(\n  model12,\n  pickCoef(model12, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <-\n  getContrasts(\n    model12,\n    pickCoef(model12, \"[.]C\")[5:8],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\neta2 <-\n  getContrasts(\n    model12,\n    pickCoef(model12, \"[.]L\")[4:7],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel12.extended <-\n  freq_tab_3.1 |>\n  gnm(Freq ~ R + C + L + \n        Rscore:Cscore + \n        Mult(1, R, C) +\n        cov_rcl + \n        Mult(1, R, L) + \n        Mult(1, C, L),\n      constrain = c(13:16, 23:26),\n      constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n      data = _,\n      family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n............................................\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model12.extended)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L) + Mult(1, C, L), constrain = c(13:16, \n    23:26), constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]), \n    family = poisson, data = freq_tab_3.1, tolerance = 1e-12,     trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.58844  -0.76809   0.02278   0.56330   1.92999  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.606872         NA      NA       NA    \nR2               -1.018864         NA      NA       NA    \nR3               -0.715523         NA      NA       NA    \nR4               -1.400273         NA      NA       NA    \nC2               -1.638854         NA      NA       NA    \nC3               -2.192352         NA      NA       NA    \nC4               -3.651863         NA      NA       NA    \nL2               -1.472419         NA      NA       NA    \nL3               -2.050283         NA      NA       NA    \nL4               -3.763081         NA      NA       NA    \nRscore:Cscore     0.133358   0.025419   5.246 1.55e-07 ***\nMult(., R, C).   -1.019483         NA      NA       NA    \nMult(1, ., C).R1  0.538271         NA      NA       NA    \nMult(1, ., C).R2 -0.597665         NA      NA       NA    \nMult(1, ., C).R3 -0.389408         NA      NA       NA    \nMult(1, ., C).R4  0.448801         NA      NA       NA    \nMult(1, R, .).C1 -0.095643         NA      NA       NA    \nMult(1, R, .).C2  0.483560         NA      NA       NA    \nMult(1, R, .).C3  0.068694         NA      NA       NA    \nMult(1, R, .).C4 -0.384423         NA      NA       NA    \ncov_rcl           0.224229   0.017087  13.123  < 2e-16 ***\nMult(., R, L).   -3.291040         NA      NA       NA    \nMult(1, ., L).R1  0.538271         NA      NA       NA    \nMult(1, ., L).R2 -0.597665         NA      NA       NA    \nMult(1, ., L).R3 -0.389408         NA      NA       NA    \nMult(1, ., L).R4  0.448801         NA      NA       NA    \nMult(1, R, .).L1  0.002683         NA      NA       NA    \nMult(1, R, .).L2  0.247632         NA      NA       NA    \nMult(1, R, .).L3  0.060718         NA      NA       NA    \nMult(1, R, .).L4 -0.237336         NA      NA       NA    \nMult(., C, L).    0.149858         NA      NA       NA    \nMult(1, ., L).C1 -4.886750         NA      NA       NA    \nMult(1, ., L).C2 -3.899505         NA      NA       NA    \nMult(1, ., L).C3  3.156698         NA      NA       NA    \nMult(1, ., L).C4 -5.977152         NA      NA       NA    \nMult(1, C, .).L1  0.014088         NA      NA       NA    \nMult(1, C, .).L2 -0.158522         NA      NA       NA    \nMult(1, C, .).L3  0.202710         NA      NA       NA    \nMult(1, C, .).L4 -0.019891         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 48.569 on 41 degrees of freedom\nAIC: 388.89\n\nNumber of iterations: 101\n```\n:::\n\n```{.r .cell-code}\nnu1 <- getContrasts(\n  model12.extended,\n  pickCoef(model12.extended, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta1 <-\n  getContrasts(\n    model12.extended,\n    pickCoef(model12.extended, \"[.]L\")[1:4],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel12.phis <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) +\n      cov_rcl + Mult(1, R, L) + Mult(1, C, L),\n    constrain = c(13:20, 23:30, 32:39),\n    constrainTo = c(mu$qvframe[, 1], nu1$qvframe[, 1],\n                    mu$qvframe[, 1], eta1$qvframe[, 1], \n                    nu2$qvframe[, 1], eta2$qvframe[, 1]),\n    data = _,\n    family = poisson, \n    trace = F, \n    tolerance = 1e-12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning main iterations............\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model12.phis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L) + Mult(1, C, L), constrain = c(13:20, \n    23:30, 32:39), constrainTo = c(mu$qvframe[, 1], nu1$qvframe[, \n    1], mu$qvframe[, 1], eta1$qvframe[, 1], nu2$qvframe[, 1], \n    eta2$qvframe[, 1]), family = poisson, data = freq_tab_3.1, \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.58844  -0.76809   0.02278   0.56330   1.92999  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.55535    0.08106  43.859  < 2e-16 ***\nR2               -0.92909    0.11339  -8.194  < 2e-16 ***\nR3               -0.64221    0.12609  -5.093 3.52e-07 ***\nR4               -1.39320    0.17746  -7.851  < 2e-16 ***\nC2               -1.63743    0.10043 -16.304  < 2e-16 ***\nC3               -2.18079    0.15608 -13.973  < 2e-16 ***\nC4               -3.65343    0.23846 -15.321  < 2e-16 ***\nL2               -1.39736    0.10537 -13.261  < 2e-16 ***\nL3               -2.13230    0.17235 -12.372  < 2e-16 ***\nL4               -3.74831    0.27154 -13.804  < 2e-16 ***\nRscore:Cscore     0.13336    0.02490   5.357 8.48e-08 ***\nMult(., R, C).   -0.64007    0.13725  -4.663 3.11e-06 ***\nMult(1, ., C).R1  0.53827         NA      NA       NA    \nMult(1, ., C).R2 -0.59766         NA      NA       NA    \nMult(1, ., C).R3 -0.38941         NA      NA       NA    \nMult(1, ., C).R4  0.44880         NA      NA       NA    \nMult(1, R, .).C1 -0.18108         NA      NA       NA    \nMult(1, R, .).C2  0.74146         NA      NA       NA    \nMult(1, R, .).C3  0.08067         NA      NA       NA    \nMult(1, R, .).C4 -0.64105         NA      NA       NA    \ncov_rcl           0.22423    0.01636  13.707  < 2e-16 ***\nMult(., R, L).   -1.13998    0.13669  -8.340  < 2e-16 ***\nMult(1, ., L).R1  0.53827         NA      NA       NA    \nMult(1, ., L).R2 -0.59766         NA      NA       NA    \nMult(1, ., L).R3 -0.38941         NA      NA       NA    \nMult(1, ., L).R4  0.44880         NA      NA       NA    \nMult(1, R, .).L1 -0.04544         NA      NA       NA    \nMult(1, R, .).L2  0.66170         NA      NA       NA    \nMult(1, R, .).L3  0.12210         NA      NA       NA    \nMult(1, R, .).L4 -0.73836         NA      NA       NA    \nMult(., C, L).    0.27613    0.10158   2.718  0.00656 ** \nMult(1, ., L).C1  0.27770         NA      NA       NA    \nMult(1, ., L).C2  0.13959         NA      NA       NA    \nMult(1, ., L).C3 -0.84752         NA      NA       NA    \nMult(1, ., L).C4  0.43024         NA      NA       NA    \nMult(1, C, .).L1 -0.01743         NA      NA       NA    \nMult(1, C, .).L2  0.65220         NA      NA       NA    \nMult(1, C, .).L3 -0.74916         NA      NA       NA    \nMult(1, C, .).L4  0.11439         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 48.569 on 49 degrees of freedom\nAIC: 372.89\n\nNumber of iterations: 12\n```\n:::\n\n```{.r .cell-code}\nmu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       Estimate Std. Error\nMult(1, ., C + L).R1  0.5382715 0.07940991\nMult(1, ., C + L).R2 -0.5976649 0.06869502\nMult(1, ., C + L).R3 -0.3894076 0.08390695\nMult(1, ., C + L).R4  0.4488010 0.08495489\n```\n:::\n\n```{.r .cell-code}\nnu1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).C1 -0.18108336  0.1505749\nMult(1, R, .).C2  0.74145909  0.0888159\nMult(1, R, .).C3  0.08066998  0.1598862\nMult(1, R, .).C4 -0.64104571  0.1141041\n```\n:::\n\n```{.r .cell-code}\neta1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Estimate Std. Error\nMult(1, R, .).L1 -0.0454423 0.08895571\nMult(1, R, .).L2  0.6617033 0.05943373\nMult(1, R, .).L3  0.1220991 0.08507409\nMult(1, R, .).L4 -0.7383601 0.04862532\n```\n:::\n\n```{.r .cell-code}\nnu2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   Estimate Std. Error\nMult(1, ., L).C1  0.2776974 0.30818568\nMult(1, ., L).C2  0.1395889 0.36977790\nMult(1, ., L).C3 -0.8475231 0.08001496\nMult(1, ., L).C4  0.4302368 0.32326672\n```\n:::\n\n```{.r .cell-code}\neta2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, C, .).L1 -0.01742597  0.3681779\nMult(1, C, .).L2  0.65219849  0.2296758\nMult(1, C, .).L3 -0.74916478  0.1797929\nMult(1, C, .).L4  0.11439226  0.3321123\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12                39  48.6 -237.  6.57 0.140\n```\n:::\n\n```{.r .cell-code}\n# Model 15\nfreq_tab_3.1 <-\n  freq_tab_3.1 |> mutate(cov_rcl = Rscore * Lscore + Cscore * Lscore)\nmodel15 <- freq_tab_3.1 |>\n  gnm(\n    Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + L) + cov_rcl,\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations............................................\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + \n    L) + cov_rcl, family = poisson, data = freq_tab_3.1, tolerance = 1e-12, \n    trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)           3.58870         NA      NA       NA    \nR2                   -0.99273         NA      NA       NA    \nR3                   -0.70424         NA      NA       NA    \nR4                   -1.42534         NA      NA       NA    \nC2                   -1.68748         NA      NA       NA    \nC3                   -2.18127         NA      NA       NA    \nC4                   -3.67502         NA      NA       NA    \nL2                   -1.46985         NA      NA       NA    \nL3                   -2.17261         NA      NA       NA    \nL4                   -3.76610         NA      NA       NA    \nRscore:Cscore         0.13307    0.02552   5.215 1.84e-07 ***\nMult(., R, C + L).   -6.48968         NA      NA       NA    \nMult(1, ., C + L).R1  0.18027         NA      NA       NA    \nMult(1, ., C + L).R2 -0.25223         NA      NA       NA    \nMult(1, ., C + L).R3 -0.17283         NA      NA       NA    \nMult(1, ., C + L).R4  0.14201         NA      NA       NA    \nMult(1, R, . + L).C1 -0.04750         NA      NA       NA    \nMult(1, R, . + L).C2  0.19171         NA      NA       NA    \nMult(1, R, . + L).C3  0.01507         NA      NA       NA    \nMult(1, R, . + L).C4 -0.17007         NA      NA       NA    \nMult(1, R, C + .).L2  0.32692         NA      NA       NA    \nMult(1, R, C + .).L3  0.08250         NA      NA       NA    \nMult(1, R, C + .).L4 -0.32041         NA      NA       NA    \ncov_rcl               0.22862    0.01709  13.377  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 44 degrees of freedom\nAIC: 390.3\n\nNumber of iterations: 44\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model15                44  56.0 -266.  6.83 0.106\n```\n:::\n\n```{.r .cell-code}\nmu <- getContrasts(\n  model15,\n  pickCoef(model15, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu <- getContrasts(\n  model15,\n  pickCoef(model15, \"[.]C\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmodel15.extended <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) +\n      cov_rcl + \n      Mult(1, R, L),\n    constrain = c(13:16, 23:26),\n    constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model15.extended)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L), constrain = c(13:16, 23:26), constrainTo = c(mu$qvframe[, \n    1], mu$qvframe[, 1]), family = poisson, data = freq_tab_3.1, \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.58638         NA      NA       NA    \nR2               -1.00448         NA      NA       NA    \nR3               -0.71383         NA      NA       NA    \nR4               -1.42638         NA      NA       NA    \nC2               -1.64759    0.10152  -16.23  < 2e-16 ***\nC3               -2.17084    0.15843  -13.70  < 2e-16 ***\nC4               -3.69546    0.24129  -15.32  < 2e-16 ***\nL2               -1.41533    0.10612  -13.34  < 2e-16 ***\nL3               -2.15885    0.17266  -12.50  < 2e-16 ***\nL4               -3.81953    0.27268  -14.01  < 2e-16 ***\nRscore:Cscore     0.13307    0.02539    5.24  1.6e-07 ***\nMult(., R, C).    0.11895         NA      NA       NA    \nMult(1, ., C).R1  0.54368         NA      NA       NA    \nMult(1, ., C).R2 -0.59799         NA      NA       NA    \nMult(1, ., C).R3 -0.38839         NA      NA       NA    \nMult(1, ., C).R4  0.44270         NA      NA       NA    \nMult(1, R, .).C1  0.66600         NA      NA       NA    \nMult(1, R, .).C2 -4.27814         NA      NA       NA    \nMult(1, R, .).C3 -0.62719         NA      NA       NA    \nMult(1, R, .).C4  3.19929         NA      NA       NA    \ncov_rcl           0.22862    0.01643   13.91  < 2e-16 ***\nMult(., R, L).    1.78079         NA      NA       NA    \nMult(1, ., L).R1  0.54368         NA      NA       NA    \nMult(1, ., L).R2 -0.59799         NA      NA       NA    \nMult(1, ., L).R3 -0.38839         NA      NA       NA    \nMult(1, ., L).R4  0.44270         NA      NA       NA    \nMult(1, R, .).L1  0.01531         NA      NA       NA    \nMult(1, R, .).L2 -0.43602         NA      NA       NA    \nMult(1, R, .).L3 -0.09858         NA      NA       NA    \nMult(1, R, .).L4  0.45765         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 46 degrees of freedom\nAIC: 386.3\n\nNumber of iterations: 8\n```\n:::\n\n```{.r .cell-code}\neta <-\n  getContrasts(\n    model15.extended,\n    pickCoef(model15.extended, \"[.]L\"),\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel15.phis <-\n  freq_tab_3.1 |> gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) + \n      cov_rcl + \n      Mult(1, R, L),\n    constrain = c(13:20, 23:30),\n    constrainTo = c(mu$qvframe[, 1], \n                    nu$qvframe[, 1], \n                    mu$qvframe[, 1], \n                    eta$qvframe[, 1]),\n    data = _,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nInitialising\nRunning main iterations.\nDone\n```\n:::\n\n```{.r .cell-code}\nsummary(model15.phis)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L), constrain = c(13:20, 23:30), constrainTo = c(mu$qvframe[, \n    1], nu$qvframe[, 1], mu$qvframe[, 1], eta$qvframe[, 1]), \n    family = poisson, data = freq_tab_3.1, tolerance = 1e-12,     trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.55464    0.08091  43.935  < 2e-16 ***\nR2               -0.93784    0.11339  -8.271  < 2e-16 ***\nR3               -0.65943    0.12613  -5.228 1.71e-07 ***\nR4               -1.42048    0.17754  -8.001  < 2e-16 ***\nC2               -1.64759    0.10044 -16.404  < 2e-16 ***\nC3               -2.17084    0.15588 -13.927  < 2e-16 ***\nC4               -3.69546    0.23861 -15.488  < 2e-16 ***\nL2               -1.41533    0.10551 -13.414  < 2e-16 ***\nL3               -2.15885    0.17245 -12.519  < 2e-16 ***\nL4               -3.81953    0.27221 -14.032  < 2e-16 ***\nRscore:Cscore     0.13307    0.02492   5.341 9.24e-08 ***\nMult(., R, C).   -0.64172    0.13829  -4.641 3.48e-06 ***\nMult(1, ., C).R1  0.54368         NA      NA       NA    \nMult(1, ., C).R2 -0.59799         NA      NA       NA    \nMult(1, ., C).R3 -0.38839         NA      NA       NA    \nMult(1, ., C).R4  0.44270         NA      NA       NA    \nMult(1, R, .).C1 -0.17165         NA      NA       NA    \nMult(1, R, .).C2  0.74481         NA      NA       NA    \nMult(1, R, .).C3  0.06806         NA      NA       NA    \nMult(1, R, .).C4 -0.64122         NA      NA       NA    \ncov_rcl           0.22862    0.01640  13.939  < 2e-16 ***\nMult(., R, L).    1.13826    0.13726   8.293  < 2e-16 ***\nMult(1, ., L).R1  0.54368         NA      NA       NA    \nMult(1, ., L).R2 -0.59799         NA      NA       NA    \nMult(1, ., L).R3 -0.38839         NA      NA       NA    \nMult(1, ., L).R4  0.44270         NA      NA       NA    \nMult(1, R, .).L1  0.04806         NA      NA       NA    \nMult(1, R, .).L2 -0.65804         NA      NA       NA    \nMult(1, R, .).L3 -0.13012         NA      NA       NA    \nMult(1, R, .).L4  0.74010         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 50 degrees of freedom\nAIC: 378.3\n\nNumber of iterations: 1\n```\n:::\n\n```{.r .cell-code}\nmu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       Estimate Std. Error\nMult(1, ., C + L).R1  0.5436794 0.07818382\nMult(1, ., C + L).R2 -0.5979869 0.06871974\nMult(1, ., C + L).R3 -0.3883879 0.08391754\nMult(1, ., C + L).R4  0.4426954 0.08454001\n```\n:::\n\n```{.r .cell-code}\nnu\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        Estimate Std. Error\nMult(1, R, . + L).C1 -0.17164747 0.14998137\nMult(1, R, . + L).C2  0.74480785 0.08583798\nMult(1, R, . + L).C3  0.06806188 0.15421719\nMult(1, R, . + L).C4 -0.64122226 0.11322236\n```\n:::\n\n```{.r .cell-code}\neta\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Estimate Std. Error\nMult(1, R, .).L1  0.04806244 0.08932196\nMult(1, R, .).L2 -0.65804171 0.05969167\nMult(1, R, .).L3 -0.13011596 0.08427834\nMult(1, R, .).L4  0.74009523 0.04837401\n```\n:::\n\n```{.r .cell-code}\nmodel.summary(model15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model15                44  56.0 -266.  6.83 0.106\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(model.summary(model1, \"Model 1\"),\n          model.summary(model2, \"Model 2\"),\n          model.summary(model4, \"Model 4\"),\n          model.summary(model6, \"Model 6\"),\n          model.summary(model7, \"Model 7\"),\n          model.summary(model8, \"Model 8\"),\n          model.summary(model9, \"Model 9\"),\n          model.summary(model10, \"Model 10\"),\n          model.summary(model11, \"Model 11\"),\n          model.summary(model12, \"Model 12\"),\n          model.summary(model15, \"Model 15\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 6\n   `Model Description`    df    L2   BIC Delta        p\n   <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n 1 Model 1                54 544.   149. 23.7  3.44e-82\n 2 Model 2                39 109.  -176.  9.81 1.42e- 8\n 3 Model 4                35  37.7 -218.  4.63 3.47e- 1\n 4 Model 6                27  29.0 -169.  4.86 3.61e- 1\n 5 Model 7                23  21.9 -146.  3.70 5.24e- 1\n 6 Model 8                36  45.9 -218.  6.25 1.26e- 1\n 7 Model 9                38  47.1 -231.  6.25 1.47e- 1\n 8 Model 10               38  54.8 -223.  7.50 3.84e- 2\n 9 Model 11               38  53.6 -225.  6.58 4.77e- 2\n10 Model 12               39  48.6 -237.  6.57 1.40e- 1\n11 Model 15               44  56.0 -266.  6.83 1.06e- 1\n```\n:::\n:::\n\n\n\n## 練習問題 {-}\n\n**問題1.1** せっかくデータを入力したので，このデータを使って @goodman1979a の表5A，表5B，表5Cの結果を再現しよう．使用するデータは`mentalHealth`のデータである．\n\n- 問題1.1 問題\n- 問題1.1.1：@goodman1979a の表5Bの分析（全体効果の分解）を再現する．表5Bではまずモデル (1) と (2) の比較から一般的な効果（General Effect）を求めている．次に，モデル (2) と (5) の比較から，行・列効果を求めている． 他の効果はモデル (5) で示され，全体効果はモデル (1) となる．\n- 問題1.1.1：@goodman1979a の表5Cの分析（行と列効果の分割）を再現する．モデル  (2) と (3) から行効果が，さらにモデル (3) と (5) から行効果が，そして，モデル (2) と (5) から行・列効果の要素を取り出すことができる．\n\n## 参考文献 {-}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}