[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "『カテゴリカルデータのための連関モデル』",
    "section": "",
    "text": "このページは\nRaymond Wong著・藤原翔訳．2021．『カテゴリカルデータの連関分析』共立出版．\nのためのサポートページです．本書の付録や補遺とすることも検討しましたが，Association Modelsは他のQASSに比べて分量が多いため（156ページ！），そしてRのバージョンアップやパッケージの更新などに備えるため，正誤表もあわせて公開するためにオンラインで公開することにしました．本書と関連した連関モデルの適用例の情報についても，このサポートページで補うことができればと思います．\nこのサポートページでは，特にRの基本的な操作方法と，Rを用いた連関分析の方法を紹介します．各章ごとにRの実行方法をまとめています．モデルの意味や結果の解釈などについては本書を参考にしてください．\nなおこのサポートページの内容は英語版のサポートページ https://studysites.sagepub.com/wongstudy/ が元になっています．そちらもぜひ参考にしてください．\n\n\n\n本サポートページのスクリプトはそのままコピー・アンド・ペーストすることが可能です． スクリプトを選択してコピーしても良いですし，各スクリプトの右上の図をクリックしてもコピーされます．\n\nなおRのスクリプトについては https://github.com/ShoFujihara/Association_Models_Japanese の scripts というフォルダに保存されているので，そちらを参照してください．Googleドライブにもスクリプトを保存しておきます． https://drive.google.com/drive/folders/1oP0EURmoD8-dIkC6MCqDS3_0ysOz7t-0?usp=sharing\n\n\n\n\n\n\n2022年4月25日"
  },
  {
    "objectID": "1-Introduction.html",
    "href": "1-Introduction.html",
    "title": "シリーズ編者による序文",
    "section": "",
    "text": "「シリーズ編者による序文」の分析は短いが，Rによるカテゴリカルデータ分析の方法の基礎を身につける上ではよい例である．少し長くなるが，基本的な操作方法の説明やクロス表の分析方法について説明したい．\nパッケージはtidyverse（データセットの処理のため），DescTools（記述統計を求めるため），vcdパッケージ（カテゴリカルデータの分析のため），gnm（連関分析の処理のため）を使用する．"
  },
  {
    "objectID": "1-Introduction.html#度数行変数列変数のデータからクロス表を作成",
    "href": "1-Introduction.html#度数行変数列変数のデータからクロス表を作成",
    "title": "シリーズ編者による序文",
    "section": "度数，行変数，列変数のデータからクロス表を作成",
    "text": "度数，行変数，列変数のデータからクロス表を作成\n\n度数，行変数，列変数のデータからクロス表を作成するにはxtabs関数を用いる．\n\n\nd |> xtabs(Freq ~ PSES + MHS, data = _)\n\n    MHS\nPSES   1   2   3   4\n   1  64  94  58  46\n   2  57  94  54  40\n   3  57 105  65  60\n   4  72 141  77  94\n   5  36  97  54  78\n   6  21  71  54  71\n\n\n\nRに初めから準備されているTitanicデータは，多少特殊な集計がされているが，これにdata.frame関数を適用すると，集計データになる．これに対してxtabs関数を用いればクロス表を簡単に作成できる．\n\n\ndata.frame(Titanic) |> xtabs(Freq ~ Class + Survived, data = _)\n\n      Survived\nClass   No Yes\n  1st  122 203\n  2nd  167 118\n  3rd  528 178\n  Crew 673 212\n\ndata.frame(Titanic) |> xtabs(Freq ~ Sex + Survived, data = _)\n\n        Survived\nSex        No  Yes\n  Male   1364  367\n  Female  126  344\n\ndata.frame(Titanic) |> xtabs(Freq ~ Age + Survived, data = _)\n\n       Survived\nAge       No  Yes\n  Child   52   57\n  Adult 1438  654"
  },
  {
    "objectID": "1-Introduction.html#個票データから集計データを作成",
    "href": "1-Introduction.html#個票データから集計データを作成",
    "title": "シリーズ編者による序文",
    "section": "個票データから集計データを作成",
    "text": "個票データから集計データを作成\n\n個票データから集計データを作成する方法はいくつか考えられるが，ここではcount関数を用いる．\n\n\n# スターウォーズデータ\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\n# 1つの変数にcount関数を適用\nstarwars |> \n  count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  <chr>          <int>\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 <NA>               4\n\n# 2つの変数にcount関数を適用し，集計レベルのデータを作成\nstarwars |> \n  count(sex, gender)\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\n# 欠損値を処理し，nをFreqと名前を変更し，df_dstarwarsとしてデータを保存\ndf_dstarwars <- starwars |> \n  count(sex, gender) |> \n  drop_na() |>\n  rename(Freq = n)\n\n# 確認\ndf_dstarwars\n\n# A tibble: 5 × 3\n  sex            gender     Freq\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5"
  },
  {
    "objectID": "1-Introduction.html#集計データを個票データに変換",
    "href": "1-Introduction.html#集計データを個票データに変換",
    "title": "シリーズ編者による序文",
    "section": "集計データを個票データに変換",
    "text": "集計データを個票データに変換\n集計データを個票データに変換したいときにはvcdExtraパッケージのexpand.dftを用いる．\n\nlibrary(vcdExtra)\nd_ind <- expand.dft(d, dreq = \"Freq\")\nd_ind\n\n# A tibble: 1,660 × 4\n    PSES   MHS Rscore Cscore\n   <int> <int>  <int>  <int>\n 1     1     1      1      1\n 2     1     1      1      1\n 3     1     1      1      1\n 4     1     1      1      1\n 5     1     1      1      1\n 6     1     1      1      1\n 7     1     1      1      1\n 8     1     1      1      1\n 9     1     1      1      1\n10     1     1      1      1\n# ℹ 1,650 more rows"
  },
  {
    "objectID": "1-Introduction.html#元クロス分類表の入力",
    "href": "1-Introduction.html#元クロス分類表の入力",
    "title": "シリーズ編者による序文",
    "section": "3元クロス分類表の入力",
    "text": "3元クロス分類表の入力\n\ndata <- c(2,5,1,\n  2,4,7,\n  \n  4,7,5,\n  8,0,1,\n  \n  10,11,5,\n  1,3,4,\n  \n  1,1,1,\n  2,3,4)\n\narray(data, dim = c(2,3,4))\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    2    1    4\n[2,]    5    2    7\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    4    5    0\n[2,]    7    8    1\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   10    5    3\n[2,]   11    1    4\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]    1    1    3\n[2,]    1    2    4\n\ntab1 <- c(2,5,1,\n          2,4,7) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\n\ntab2 <- c(4,7,5,\n          8,0,1) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab3 <- c(10,11,5,\n          1,3,4) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab4 <- c(1,1,1,\n          2,3,4) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab_merge <- array(c(tab1,tab2,tab3,tab4), dim = c(2,3,4))\ntab_merge\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    2    5    1\n[2,]    2    4    7\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    4    7    5\n[2,]    8    0    1\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   10   11    5\n[2,]    1    3    4\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]    1    1    1\n[2,]    2    3    4\n\ndimnames(tab_merge) <- list(R = c(\"men\",\"women\"),\n                            C = c(\"blue\",\"red\",\"green\"),\n                            L = c(\"north\",\"south\",\"east\",\"west\"))\ntab_merge\n\n, , L = north\n\n       C\nR       blue red green\n  men      2   5     1\n  women    2   4     7\n\n, , L = south\n\n       C\nR       blue red green\n  men      4   7     5\n  women    8   0     1\n\n, , L = east\n\n       C\nR       blue red green\n  men     10  11     5\n  women    1   3     4\n\n, , L = west\n\n       C\nR       blue red green\n  men      1   1     1\n  women    2   3     4\n\n# フラットな形式で3元表を表示\nftable(tab_merge)\n\n            L north south east west\nR     C                            \nmen   blue        2     4   10    1\n      red         5     7   11    1\n      green       1     5    5    1\nwomen blue        2     8    1    2\n      red         4     0    3    3\n      green       7     1    4    4\n\n\nFriendly and Meyer (2016) を参考に表を作成．\n\n\n\n元のデータ形式\n変換後のデータ形式\n方法\n\n\n\n\nケース形式\n度数形式\ndata.frame(table(d$A,d$B))\n\n\nケース形式\n表形式\ntable(d$A,d$B)\n\n\n度数形式\nケース形式\nexpand.dfr(X)\n\n\n度数形式\n表形式\nxtabs(Freq ~ A + B)\n\n\n表形式\nケース形式\nexpand.dfr(X)\n\n\n表形式\n度数形式\ndata.frame(tab)"
  },
  {
    "objectID": "1-Introduction.html#練習問題",
    "href": "1-Introduction.html#練習問題",
    "title": "シリーズ編者による序文",
    "section": "練習問題",
    "text": "練習問題\n\nせっかくデータを入力したので，このデータを使ってGoodman（1979）の表5A，表5B，表5Cの結果を再現しよう．\n分析方法については第2章のプログラムを参考にしてほしい．"
  },
  {
    "objectID": "1-Introduction.html#参考文献",
    "href": "1-Introduction.html#参考文献",
    "title": "シリーズ編者による序文",
    "section": "参考文献",
    "text": "参考文献\n\nGoodman, Leo A. 1979. “Simple Models for the Analysis of Association in Cross-Classifications Having Ordered Categories.” Journal of the American Statistical Association 74(367):537–52."
  },
  {
    "objectID": "2-Chapter_1.html",
    "href": "2-Chapter_1.html",
    "title": "1  第1章",
    "section": "",
    "text": "特になし．"
  },
  {
    "objectID": "3-Chapter_2.html",
    "href": "3-Chapter_2.html",
    "title": "2  第2章",
    "section": "",
    "text": "第2章では2元表の連関モデルが紹介されている．制約のかけかたは少し複雑なのでプログラムとテキストをみながら手順を確認して欲しい．\nパッケージはtidyverse（データセットの処理のため），magrittr（パイプ演算子），DescTools（記述統計を求めるため），vcdパッケージ（カテゴリカルデータの分析のため），broom（回帰係数の整理），gnm（連関分析の処理のため），logmult（連関モデルのため）を使用する．"
  },
  {
    "objectID": "3-Chapter_2.html#対比について",
    "href": "3-Chapter_2.html#対比について",
    "title": "2  第2章",
    "section": "2.1 対比について",
    "text": "2.1 対比について\n回帰モデルにおけるカテゴリカル変数の係数を解釈する上では対比 （contrasts）が重要である．まず，デフォルトでのcontrastsを確認したい．factor変数についてはcontr.treatment，ordered変数についてはcontr.polyという対比が用いられている．contr.treatmentは基準となっている水準とそれぞれの水準を対比する．これはダミーコーディングと呼ばれる． contr.polyは直交多項式（orthogonal polynomials）に基づいた対比を行う（気にしなくてよい）．\n\n# デフォルトのcontrastsを確認\noptions('contrasts')\n\n$contrasts\n        unordered           ordered \n\"contr.treatment\"      \"contr.poly\" \n\n\n\n# defaultのcontrastsの設定（ここでは特に意味はない．constrastをいじった後にデフォルトに戻す）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\n\n具体的に何をしているのかを以下のプログラムで確認する． ダミーコーディングのcontr.treatment以外にも効果コーディングのcontr.sumがある．両者を比較してみたい．\n\nx <- c(\"A\",\"B\",\"C\",\"D\",\"E\")\nx\n\n[1] \"A\" \"B\" \"C\" \"D\" \"E\"\n\n# 基準カテゴリが0となるような対比\ncontr.treatment(x)\n\n  B C D E\nA 0 0 0 0\nB 1 0 0 0\nC 0 1 0 0\nD 0 0 1 0\nE 0 0 0 1\n\n# 合計が0となるような対比\ncontr.sum(x)\n\n  [,1] [,2] [,3] [,4]\nA    1    0    0    0\nB    0    1    0    0\nC    0    0    1    0\nD    0    0    0    1\nE   -1   -1   -1   -1\n\n\n実際に回帰分析を例にcontr.treatmentとcontr.sumの違いを確認する．データはmpg（Fuel economy data from 1999 to 2008 for 38 popular models of cars）である．従属変数はhwy（highway miles per gallon）であり，独立変数はclass（“type” of car）とする．\n\nmpg %>% count(class)\n\n# A tibble: 7 × 2\n  class          n\n  <chr>      <int>\n1 2seater        5\n2 compact       47\n3 midsize       41\n4 minivan       11\n5 pickup        33\n6 subcompact    35\n7 suv           62\n\nmpg %>% \n  group_by(class) %>% \n  dplyr::summarise(n = n(),\n                   Mean = mean(hwy, na.rm = TRUE))\n\n# A tibble: 7 × 3\n  class          n  Mean\n  <chr>      <int> <dbl>\n1 2seater        5  24.8\n2 compact       47  28.3\n3 midsize       41  27.3\n4 minivan       11  22.4\n5 pickup        33  16.9\n6 subcompact    35  28.1\n7 suv           62  18.1\n\n\nまずダミーコーディング（dummy coding）の結果を確認する．\n\n# 回帰分析の例（contr.treatmentを使用）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\nfit_ct <- lm(hwy ~ class, data = mpg)\nsummary(fit_ct)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       24.800      1.507  16.454  < 2e-16 ***\nclasscompact       3.498      1.585   2.206   0.0284 *  \nclassmidsize       2.493      1.596   1.561   0.1198    \nclassminivan      -2.436      1.818  -1.340   0.1815    \nclasspickup       -7.921      1.617  -4.898 1.84e-06 ***\nclasssubcompact    3.343      1.611   2.075   0.0391 *  \nclasssuv          -6.671      1.567  -4.258 3.03e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\nmodel.matrix(fit_ct) %>% unique()\n\n   (Intercept) classcompact classmidsize classminivan classpickup\n1            1            1            0            0           0\n16           1            0            1            0           0\n19           1            0            0            0           0\n24           1            0            0            0           0\n38           1            0            0            1           0\n49           1            0            0            0           1\n91           1            0            0            0           0\n   classsubcompact classsuv\n1                0        0\n16               0        0\n19               0        1\n24               0        0\n38               0        0\n49               0        0\n91               1        0\n\n\n出力される係数は6つである．classはfactorによって水準が設定されているわけではないので，2seaterが基準カテゴリとなっており，出力からは省略されている．つまり，2seaterの係数は0であり，(Intercept)の値は2seaterの平均値を示している．\n次に効果コーディングの結果を確認する．\n\n# 回帰分析の例（contr.sumを使用）\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.poly\"))\nfit_cs <- lm(hwy ~ class, data = mpg)\nsummary(fit_cs)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  23.7007     0.3089  76.730  < 2e-16 ***\nclass1        1.0993     1.3108   0.839    0.403    \nclass2        4.5972     0.5177   8.880  < 2e-16 ***\nclass3        3.5920     0.5416   6.633 2.39e-10 ***\nclass4       -1.3371     0.9127  -1.465    0.144    \nclass5       -6.8219     0.5842 -11.678  < 2e-16 ***\nclass6        4.4422     0.5720   7.766 2.77e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\nmodel.matrix(fit_cs) %>% unique()\n\n   (Intercept) class1 class2 class3 class4 class5 class6\n1            1      0      1      0      0      0      0\n16           1      0      0      1      0      0      0\n19           1     -1     -1     -1     -1     -1     -1\n24           1      1      0      0      0      0      0\n38           1      0      0      0      1      0      0\n49           1      0      0      0      0      1      0\n91           1      0      0      0      0      0      1\n\n\nここでも出力される係数は6つであるが，ここでは最後のカテゴリが省略されている．しかし，最後のカテゴリであるclasssuvの係数は0ではない．すべての係数の和が0になるという制約を与えているので，classsuvの係数は他の係数の値の和を0から引いたものとなる．\n\n# classという文字が含まれる係数を取り出し，係数の番号を調べる（2から7）\npickCoef(fit_cs, \"class\")\n\nclass1 class2 class3 class4 class5 class6 \n     2      3      4      5      6      7 \n\n# 係数の2から7までを取り出し，その和を求める．\nfit_cs$coefficients[2:7] %>% sum()\n\n[1] 5.571663\n\n# 和を0から引く\n0 - (fit_cs$coefficients[2:7] %>% sum())\n\n[1] -5.571663\n\n\nしたがって，classsuvの係数は-5.571663となる．\ncontrastsの設定を変更して分析を終えたら必ずもとに戻しておく．\n\n# デフォルトに戻す\noptions(contrasts = c(factor = \"contr.treatment\", ordered = \"contr.poly\"))\n\nlmではモデルの中でcontrastsを指定することもできる．\n\nfit_cs2 <- lm(hwy ~ class, data = mpg)\nsummary(fit_cs2)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       24.800      1.507  16.454  < 2e-16 ***\nclasscompact       3.498      1.585   2.206   0.0284 *  \nclassmidsize       2.493      1.596   1.561   0.1198    \nclassminivan      -2.436      1.818  -1.340   0.1815    \nclasspickup       -7.921      1.617  -4.898 1.84e-06 ***\nclasssubcompact    3.343      1.611   2.075   0.0391 *  \nclasssuv          -6.671      1.567  -4.258 3.03e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\nfit_cs2 <- lm(hwy ~ class, data = mpg,\n              contrasts = list(class = \"contr.sum\"))\nsummary(fit_cs2)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg, contrasts = list(class = \"contr.sum\"))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  23.7007     0.3089  76.730  < 2e-16 ***\nclass1        1.0993     1.3108   0.839    0.403    \nclass2        4.5972     0.5177   8.880  < 2e-16 ***\nclass3        3.5920     0.5416   6.633 2.39e-10 ***\nclass4       -1.3371     0.9127  -1.465    0.144    \nclass5       -6.8219     0.5842 -11.678  < 2e-16 ***\nclass6        4.4422     0.5720   7.766 2.77e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "3-Chapter_2.html#表2.1-p.8",
    "href": "3-Chapter_2.html#表2.1-p.8",
    "title": "2  第2章",
    "section": "2.2 表2.1 (p.8)",
    "text": "2.2 表2.1 (p.8)\n\np.8の表2.1を再現する．\nクロス表に周辺度数を追加する場合は，addmarginsを用いる．\n\n\n# 度数\nFreq <- c( 40, 250,\n          160,3000)\nFreq\n\n[1]   40  250  160 3000\n\n\nベクトルを表にする．ここではas.tableでクラスをtableとしている．\n\n# 行列を作成し，表とする．\ntab_2.1 <- matrix(\n  Freq,\n  nrow = 2,\n  ncol = 2,\n  byrow = TRUE,\n  dimnames = c(list(\n    Member = c(\"Member\", \"Nonmember\"),\n    Position = c(\"Have subordinates\",\n            \"No subordinates\")\n  ))\n) %>% as.table()\n\n周辺分布とモザイクプロットも確認する．\n\nMargins(tab_2.1)\n\n$Member\n       level   freq   perc  cumfreq  cumperc\n1     Member    290   8.4%      290     8.4%\n2  Nonmember  3'160  91.6%    3'450   100.0%\n\n$Position\n               level   freq   perc  cumfreq  cumperc\n1  Have subordinates    200   5.8%      200     5.8%\n2    No subordinates  3'250  94.2%    3'450   100.0%\n\nmosaic(tab_2.1, shade = TRUE, keep_aspect_ratio = FALSE)\n\n\n\n\n\n# A. 度数（周辺度数の追加）\ntab_2.1 %>% addmargins()\n\n           Position\nMember      Have subordinates No subordinates  Sum\n  Member                   40             250  290\n  Nonmember               160            3000 3160\n  Sum                     200            3250 3450\n\n\n表の数字を用いてオッズ比を計算する．\n\n# B. Odds \n40/250\n\n[1] 0.16\n\n160/3000\n\n[1] 0.05333333\n\n# C. Odds ratio\n(40 * 3000) / (250 * 160)\n\n[1] 3\n\n\nDescToolsパッケージのOddsRatio関数を用いてオッズ比を求める．conf.level = 0.95とすることで信頼区間を求めることもできる．\n\nOddsRatio(tab_2.1, conf.level = 0.95)\n\nodds ratio     lwr.ci     upr.ci \n  3.000000   2.072786   4.341982 \n\n\nさらに詳細な結果をみたければDescToolsパッケージのDescを用いる．\n\nDesc(tab_2.1)\n\n------------------------------------------------------------------------------ \ntab_2.1 (table)\n\nSummary: \nn: 3'450, rows: 2, columns: 2\n\nPearson's Chi-squared test (cont. adj):\n  X-squared = 35.487, df = 1, p-value = 2.568e-09\nFisher's exact test p-value = 9.541e-08\nMcNemar's chi-squared = 19.32, df = 1, p-value = 1.106e-05\n\n                    estimate lwr.ci upr.ci'\n                                          \nodds ratio             3.000  2.073  4.342\nrel. risk (col1)       2.724  1.968  3.770\nrel. risk (col2)       0.908  0.867  0.951\n\n\nContingency Coeff.     0.103\nCramer's V             0.104\nKendall Tau-b          0.104\n\n                                                                 \n            Position   Have subordinates   No subordinates    Sum\nMember                                                           \n                                                                 \nMember      freq                      40               250    290\n            perc                    1.2%              7.2%   8.4%\n            p.row                  13.8%             86.2%      .\n            p.col                  20.0%              7.7%      .\n                                                                 \nNonmember   freq                     160             3'000  3'160\n            perc                    4.6%             87.0%  91.6%\n            p.row                   5.1%             94.9%      .\n            p.col                  80.0%             92.3%      .\n                                                                 \nSum         freq                     200             3'250  3'450\n            perc                    5.8%             94.2% 100.0%\n            p.row                      .                 .      .\n            p.col                      .                 .      .\n                                                                 \n\n----------\n' 95% conf. level\n\n\n\n\n\n\n次にセルの組み合わせを単位とした集計データを作成し，gnmを適用することでオッズ比を求めてみたい．\n\n\n# 度数のベクトル\nFreq\n\n[1]   40  250  160 3000\n\n# 行変数\nCOMM <- gl(n = 2, k = 2)\nCOMM\n\n[1] 1 1 2 2\nLevels: 1 2\n\n# 列変数\nSUP  <- gl(n = 2, k = 1, length = 4)\nSUP\n\n[1] 1 2 1 2\nLevels: 1 2\n\n# 度数，行変数，列変数からなるデータを作成\nfreq_tab_2.1 <- tibble(Freq, COMM, SUP)\n# データの確認\nfreq_tab_2.1\n\n# A tibble: 4 × 3\n   Freq COMM  SUP  \n  <dbl> <fct> <fct>\n1    40 1     1    \n2   250 1     2    \n3   160 2     1    \n4  3000 2     2    \n\n\n分析には通常はglmを用いるが，後の分析とあわせてgnmによって推定する．結果は異ならない．family = poissonという指定を忘れないようにすること．\n\n# gnmで推定\nfit <- freq_tab_2.1 %>% \n  gnm(Freq ~ COMM + SUP + COMM*SUP, data = ., family = poisson)\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ COMM + SUP + COMM * SUP, family = poisson, \n    data = .)\n\nDeviance Residuals: \n[1]  0  0  0  0\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   3.6889     0.1581  23.331  < 2e-16 ***\nCOMM2         1.3863     0.1768   7.842  < 2e-16 ***\nSUP2          1.8326     0.1703  10.761  < 2e-16 ***\nCOMM2:SUP2    1.0986     0.1886   5.824 5.75e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: -5.3113e-13 on 0 degrees of freedom\nAIC: 37.649\n\nNumber of iterations: 2\n\n\nCOMM2:SUP2の係数は1.0986である．これは対数オッズなので，指数関数expを適用してオッズ比を求める．\n\n# Odds ratios fit$coefficientsのCOMM2:SUP2の要素のみを取り出し，指数関数expを適用\nfit$coefficients[\"COMM2:SUP2\"] %>% exp()\n\nCOMM2:SUP2 \n         3"
  },
  {
    "objectID": "3-Chapter_2.html#表2.3a-p.32",
    "href": "3-Chapter_2.html#表2.3a-p.32",
    "title": "2  第2章",
    "section": "2.3 表2.3A (p.32)",
    "text": "2.3 表2.3A (p.32)\nまずは表2.3Aを作成する．値をベクトルの形で入力する．\n\nFreq <- c( 39, 50, 18,  4,\n          140,178, 85, 23,\n          108,195, 97, 23,\n          238,598,363,111,\n           78,250,150, 55,\n           50,200,208, 74,\n            8, 29, 46, 21)\n\nベクトルのデータをmatrixで行列にし，最終的にはas.tableでtable形式にする．\n\n# データを表形式に変換\ntab_2.3A <- matrix(\n  Freq,\n  nrow = 7,\n  ncol = 4,\n  byrow = TRUE,\n  dimnames = c(list(\n    polviews =  c(\n      \"Strongly liberal\",\n      \"Liberal\",\n      \"Slightly liberal\",\n      \"Moderate\",\n      \"Slightly conservative\",\n      \"Conservative\",\n      \"Strongly conservative\"),\n    fefam = c(\"Strongly Disagree\",\n                               \"Disagree\",\n                               \"Agree\",\n                               \"Strongly agree\")\n  ))) %>% as.table()\ntab_2.3A\n\n                       fefam\npolviews                Strongly Disagree Disagree Agree Strongly agree\n  Strongly liberal                     39       50    18              4\n  Liberal                             140      178    85             23\n  Slightly liberal                    108      195    97             23\n  Moderate                            238      598   363            111\n  Slightly conservative                78      250   150             55\n  Conservative                         50      200   208             74\n  Strongly conservative                 8       29    46             21\n\n\n\n# 度数，行変数，列変数からなる集計データを作成\npolviews <- gl(n = 7, k = 4)\nfefam <- gl(n = 4, k = 1, length = 28)\nfreq_tab_2.3A <- tibble(Freq, polviews, fefam)\nfreq_tab_2.3A\n\n# A tibble: 28 × 3\n    Freq polviews fefam\n   <dbl> <fct>    <fct>\n 1    39 1        1    \n 2    50 1        2    \n 3    18 1        3    \n 4     4 1        4    \n 5   140 2        1    \n 6   178 2        2    \n 7    85 2        3    \n 8    23 2        4    \n 9   108 3        1    \n10   195 3        2    \n# ℹ 18 more rows\n\n\n\nなおtab_2.3Aに対して，data.frameを適用しても集計データは作成される．tableの行変数と列変数が指定されていないと，行変数はVar1，列変数はVar2となるので，必要に応じて名前をrenameで修正する ．\n\n\ndata.frame(tab_2.3A) %>% \n  tibble()\n\n# A tibble: 28 × 3\n   polviews              fefam              Freq\n   <fct>                 <fct>             <dbl>\n 1 Strongly liberal      Strongly Disagree    39\n 2 Liberal               Strongly Disagree   140\n 3 Slightly liberal      Strongly Disagree   108\n 4 Moderate              Strongly Disagree   238\n 5 Slightly conservative Strongly Disagree    78\n 6 Conservative          Strongly Disagree    50\n 7 Strongly conservative Strongly Disagree     8\n 8 Strongly liberal      Disagree             50\n 9 Liberal               Disagree            178\n10 Slightly liberal      Disagree            195\n# ℹ 18 more rows\n\n\n以下では複数のモデルの適合度を比較する．そこで，モデル適合度を表示するための関数を作成する．モデルはすべてgnmによって推定されることを前提としている．glmの場合はエラーが出るので注意すること．\n\n# 引数となるobjはgnmの結果\nmodel.summary <- function(obj, Model = NULL){\n  if (sum(class(obj) == \"gnm\") != 1)\n    stop(\"estimate with gnm\")\n  aic <- obj$deviance - obj$df * 2 # AIC(L2)\n  bic <- obj$deviance - obj$df * log(sum(obj$y)) #BIC(L2)\n  delta <- 100 * sum(abs(obj$y - obj$fitted.values)) / (2 * sum(obj$y))\n  p <- pchisq(obj$deviance, obj$df, lower.tail = FALSE)     #p<-ifelse(p<0.001,\"<0.001\",p)\n  result <- matrix(0, 1, 7)\n  if (is.null(Model)){ \n  Model <- deparse(substitute(obj))\n  }\n  result <- tibble(\n    \"Model Description\" = Model,\n    \"df\" = obj$df,\n    \"L2\" = obj$deviance,\n    #\"AIC(L2)\" = aic,\n    \"BIC\" = bic,\n    \"Delta\" = delta,\n    \"p\" = p\n  )\n  return(result)\n  }\n\nコントラストがデフォルトのfactor = \"contr.treatment\"とordered = \"contr.poly\"になっているのかを確認する．\n\n# デフォルトのcontrasts\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n\"contr.treatment\"      \"contr.poly\" \n\n# defaultのcontrastsの設定（ここでは特に意味はない．constrastをいじった後にデフォルトに戻す）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\n\n行スコアと列スコアを用いるので，まずas.integerを用いて行スコア（Rscore）と列スコア（Cscore）の変数を作成する．\n\n# 行変数と列変数の整数値を作成\nfreq_tab_2.3A <- freq_tab_2.3A %>% \n  mutate(Rscore = as.integer(polviews),\n         Cscore = as.integer(fefam))\nfreq_tab_2.3A\n\n# A tibble: 28 × 5\n    Freq polviews fefam Rscore Cscore\n   <dbl> <fct>    <fct>  <int>  <int>\n 1    39 1        1          1      1\n 2    50 1        2          1      2\n 3    18 1        3          1      3\n 4     4 1        4          1      4\n 5   140 2        1          2      1\n 6   178 2        2          2      2\n 7    85 2        3          2      3\n 8    23 2        4          2      4\n 9   108 3        1          3      1\n10   195 3        2          3      2\n# ℹ 18 more rows\n\n\n\n2.3.1 独立モデル\n独立モデルは次のようになる．\n\n#  1. O: Independence/Null Association Model\nO <- freq_tab_2.3A %>%\n  gnm(Freq ~ polviews + fefam,\n      family = poisson,\n      data = .,\n      tolerance = 1e-12\n      )\n# 結果\nsummary(O)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam, family = poisson, data = ., \n    tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-5.7415  -2.5344  -0.4283   1.5557   5.8265  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  3.06035    0.10115  30.256  < 2e-16 ***\npolviews2    1.34491    0.10657  12.620  < 2e-16 ***\npolviews3    1.33784    0.10664  12.545  < 2e-16 ***\npolviews4    2.46825    0.09886  24.968  < 2e-16 ***\npolviews5    1.56899    0.10433  15.038  < 2e-16 ***\npolviews6    1.56711    0.10435  15.018  < 2e-16 ***\npolviews7   -0.06514    0.13647  -0.477    0.633    \nfefam2       0.81947    0.04669  17.553  < 2e-16 ***\nfefam3       0.38044    0.05047   7.538 4.76e-14 ***\nfefam4      -0.75396    0.06876 -10.965  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 211.7 on 18 degrees of freedom\nAIC: 403.05\n\nNumber of iterations: 5\n\n\n先ほど作成した適合度の関数を用いる．2つめの引数はモデルの名前の詳細を記述可能だが，これは省略してもよい．\n\n# モデル適合度\nmodel.summary(O, \"O:Independent\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 O:Independent          18  212.  65.1  8.09 4.54e-35\n\n\nテキストの表2.4と同じ結果になっているのかを確認してみる．\n\n\n2.3.2 一様連関モデル\n一様連関モデルでは先ほど作成した行変数と列変数の整数スコアの積であるRscore:Cscoreを加える．Rscore*CscoreあるいはI(Rscore*Cscore)でもよい．\n\n# 2. U: Uniform Association Model\nU <- freq_tab_2.3A %>%\n  gnm(Freq ~ polviews + fefam + Rscore:Cscore,\n    family = poisson,\n    data = .,\n    tolerance = 1e-12)\n\n\n# 結果\nsummary(U)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.62563  -0.41050  -0.06989   0.53746   1.67998  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    3.47979    0.10109  34.422  < 2e-16 ***\npolviews2      0.95906    0.10934   8.771  < 2e-16 ***\npolviews3      0.53993    0.11884   4.543 5.54e-06 ***\npolviews4      1.23013    0.12993   9.468  < 2e-16 ***\npolviews5     -0.13911    0.15936  -0.873 0.382733    \npolviews6     -0.64184    0.19196  -3.344 0.000827 ***\npolviews7     -2.80636    0.24740 -11.344  < 2e-16 ***\nfefam2         0.05148    0.07139   0.721 0.470857    \nfefam3        -1.23188    0.12922  -9.533  < 2e-16 ***\nfefam4        -3.28436    0.20609 -15.936  < 2e-16 ***\nRscore:Cscore  0.20211    0.01520  13.299  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 20.125 on 17 degrees of freedom\nAIC: 213.48\n\nNumber of iterations: 4\n\n\n表2.4Aと同じ結果になっているのかを確認する．\n\n# モデル適合度\nmodel.summary(U, \"U:Uniform\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 U:Uniform              17  20.1 -118.  2.77 0.268\n\n\nモデル行列を確認するのもよいだろう．\n\n# model.matrixを適用し，ユニークな値だけを表示\nmodel.matrix(U) %>% unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Rscore:Cscore\n1       0      0      0             1\n2       1      0      0             2\n3       0      1      0             3\n4       0      0      1             4\n5       0      0      0             2\n6       1      0      0             4\n7       0      1      0             6\n8       0      0      1             8\n9       0      0      0             3\n10      1      0      0             6\n11      0      1      0             9\n12      0      0      1            12\n13      0      0      0             4\n14      1      0      0             8\n15      0      1      0            12\n16      0      0      1            16\n17      0      0      0             5\n18      1      0      0            10\n19      0      1      0            15\n20      0      0      1            20\n21      0      0      0             6\n22      1      0      0            12\n23      0      1      0            18\n24      0      0      1            24\n25      0      0      0             7\n26      1      0      0            14\n27      0      1      0            21\n28      0      0      1            28\n\n\n\n\n2.3.3 行効果モデル\ncontrastを修正し，polviewsの係数のすべてを足すと0になるように効果コーディングを行ってる．なお行変数と列スコアの積についてはCscore*polviewsとし，Cscore:polviewsとしない．\n\n# 3. R: Row Effect Model\n# contrastを修正している．\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.treatment\"))\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n      \"contr.sum\" \"contr.treatment\" \n\nR <- freq_tab_2.3A %>%\n  gnm(Freq ~ polviews + fefam + Cscore*polviews, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n# 結果\nsummary(R)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Cscore * polviews, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.5962  -0.4603   0.0477   0.3840   1.5700  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       4.262045   0.029618 143.902  < 2e-16 ***\npolviews1         0.040378   0.222896   0.181   0.8562    \npolviews2         1.088684   0.130977   8.312  < 2e-16 ***\npolviews3         0.763635   0.132427   5.766 8.09e-09 ***\npolviews4         1.335170   0.096565  13.827  < 2e-16 ***\npolviews5         0.197587   0.127059   1.555   0.1199    \npolviews6        -0.558409   0.134998  -4.136 3.53e-05 ***\nfefam1           -0.112887   0.046238  -2.441   0.0146 *  \nfefam2            0.758505   0.030086  25.211  < 2e-16 ***\nfefam3            0.295555   0.032630   9.058  < 2e-16 ***\nCscore            0.000000         NA      NA       NA    \npolviews1:Cscore -0.558727   0.107668  -5.189 2.11e-07 ***\npolviews2:Cscore -0.405076   0.059149  -6.848 7.47e-12 ***\npolviews3:Cscore -0.248459   0.057741  -4.303 1.69e-05 ***\npolviews4:Cscore  0.008764   0.039709   0.221   0.8253    \npolviews5:Cscore  0.112245   0.051284   2.189   0.0286 *  \npolviews6:Cscore  0.419079   0.051434   8.148  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 15.906 on 12 degrees of freedom\nAIC: 219.26\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(R, \"R:Row effect\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 R:Row effect           12  15.9 -81.8  2.47 0.196\n\n# モデル行列の確認\nmodel.matrix(R) %>% unique()\n\n   (Intercept) polviews1 polviews2 polviews3 polviews4 polviews5 polviews6\n1            1         1         0         0         0         0         0\n2            1         1         0         0         0         0         0\n3            1         1         0         0         0         0         0\n4            1         1         0         0         0         0         0\n5            1         0         1         0         0         0         0\n6            1         0         1         0         0         0         0\n7            1         0         1         0         0         0         0\n8            1         0         1         0         0         0         0\n9            1         0         0         1         0         0         0\n10           1         0         0         1         0         0         0\n11           1         0         0         1         0         0         0\n12           1         0         0         1         0         0         0\n13           1         0         0         0         1         0         0\n14           1         0         0         0         1         0         0\n15           1         0         0         0         1         0         0\n16           1         0         0         0         1         0         0\n17           1         0         0         0         0         1         0\n18           1         0         0         0         0         1         0\n19           1         0         0         0         0         1         0\n20           1         0         0         0         0         1         0\n21           1         0         0         0         0         0         1\n22           1         0         0         0         0         0         1\n23           1         0         0         0         0         0         1\n24           1         0         0         0         0         0         1\n25           1        -1        -1        -1        -1        -1        -1\n26           1        -1        -1        -1        -1        -1        -1\n27           1        -1        -1        -1        -1        -1        -1\n28           1        -1        -1        -1        -1        -1        -1\n   fefam1 fefam2 fefam3 Cscore polviews1:Cscore polviews2:Cscore\n1       1      0      0      1                1                0\n2       0      1      0      2                2                0\n3       0      0      1      3                3                0\n4      -1     -1     -1      4                4                0\n5       1      0      0      1                0                1\n6       0      1      0      2                0                2\n7       0      0      1      3                0                3\n8      -1     -1     -1      4                0                4\n9       1      0      0      1                0                0\n10      0      1      0      2                0                0\n11      0      0      1      3                0                0\n12     -1     -1     -1      4                0                0\n13      1      0      0      1                0                0\n14      0      1      0      2                0                0\n15      0      0      1      3                0                0\n16     -1     -1     -1      4                0                0\n17      1      0      0      1                0                0\n18      0      1      0      2                0                0\n19      0      0      1      3                0                0\n20     -1     -1     -1      4                0                0\n21      1      0      0      1                0                0\n22      0      1      0      2                0                0\n23      0      0      1      3                0                0\n24     -1     -1     -1      4                0                0\n25      1      0      0      1               -1               -1\n26      0      1      0      2               -2               -2\n27      0      0      1      3               -3               -3\n28     -1     -1     -1      4               -4               -4\n   polviews3:Cscore polviews4:Cscore polviews5:Cscore polviews6:Cscore\n1                 0                0                0                0\n2                 0                0                0                0\n3                 0                0                0                0\n4                 0                0                0                0\n5                 0                0                0                0\n6                 0                0                0                0\n7                 0                0                0                0\n8                 0                0                0                0\n9                 1                0                0                0\n10                2                0                0                0\n11                3                0                0                0\n12                4                0                0                0\n13                0                1                0                0\n14                0                2                0                0\n15                0                3                0                0\n16                0                4                0                0\n17                0                0                1                0\n18                0                0                2                0\n19                0                0                3                0\n20                0                0                4                0\n21                0                0                0                1\n22                0                0                0                2\n23                0                0                0                3\n24                0                0                0                4\n25               -1               -1               -1               -1\n26               -2               -2               -2               -2\n27               -3               -3               -3               -3\n28               -4               -4               -4               -4\n\n\n表2.4の適合度を確認しよう．また，パラメータ推定値については，表2.5のBから確認する． Rの結果では，polviews1からpolviews6までの結果が表示されているが，polviews7は示されていない．パラメータのすべての値を足すと0となることから(\\(\\sum \\tau_i^A=0\\))，polviews7の係数は0-(-0.6721737)=0.6721737となる．これをRで計算するためには係数を取り出し，それらを足したものを0から引けばよい．\n\n# R\n# 取り出す係数を探す\npickCoef(R, \":Cscore\")\n\npolviews1:Cscore polviews2:Cscore polviews3:Cscore polviews4:Cscore \n              12               13               14               15 \npolviews5:Cscore polviews6:Cscore \n              16               17 \n\n# 12から17番目の係数を取り出し，足す\nR$coefficients[12:17] %>% sum()\n\n[1] -0.6721737\n\n# 0から足したものを引く\n0 - (R$coefficients[12:17] %>% sum())\n\n[1] 0.6721737\n\n\ncontrastsをもとに戻して同様の分析を行う． 今度はpolviews1:Cscoreの係数が省略されているが，この値は0である（\\(\\tau_1^A=0\\)）．\n\n# alternative (default)\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\nRalt <- freq_tab_2.3A %>%\n  gnm(Freq ~ polviews + fefam + Cscore*polviews, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\n結果は表2.5Bの「他の正規化」の行を確認して欲しい．\n\n# 結果\nsummary(Ralt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Cscore * polviews, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.5962  -0.4603   0.0477   0.3840   1.5700  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        3.6308     0.1443  25.160  < 2e-16 ***\npolviews2          1.0483     0.2801   3.742 0.000182 ***\npolviews3          0.7233     0.2818   2.567 0.010258 *  \npolviews4          1.2948     0.2617   4.947 7.52e-07 ***\npolviews5          0.1572     0.2798   0.562 0.574154    \npolviews6         -0.5988     0.2859  -2.094 0.036244 *  \npolviews7         -2.9074     0.4145  -7.015 2.30e-12 ***\nfefam2             0.3127     0.1265   2.471 0.013455 *  \nfefam3            -0.7090     0.2447  -2.897 0.003763 ** \nfefam4            -2.5045     0.3703  -6.763 1.36e-11 ***\nCscore             0.0000         NA      NA       NA    \npolviews2:Cscore   0.1537     0.1362   1.128 0.259246    \npolviews3:Cscore   0.3103     0.1357   2.287 0.022191 *  \npolviews4:Cscore   0.5675     0.1268   4.477 7.58e-06 ***\npolviews5:Cscore   0.6710     0.1326   5.059 4.21e-07 ***\npolviews6:Cscore   0.9778     0.1331   7.346 2.04e-13 ***\npolviews7:Cscore   1.2309     0.1678   7.335 2.22e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 15.906 on 12 degrees of freedom\nAIC: 219.26\n\nNumber of iterations: 4\n\n\nモデルの適合度は全く同じであることがわかる．\n\n# モデル適合度\nmodel.summary(R, \"R: Row effect (effect coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`              df    L2   BIC Delta     p\n  <chr>                         <int> <dbl> <dbl> <dbl> <dbl>\n1 R: Row effect (effect coding)    12  15.9 -81.8  2.47 0.196\n\nmodel.summary(Ralt, \"R: Row effect (dummy coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`             df    L2   BIC Delta     p\n  <chr>                        <int> <dbl> <dbl> <dbl> <dbl>\n1 R: Row effect (dummy coding)    12  15.9 -81.8  2.47 0.196\n\n\n\n# モデル行列の確認\nmodel.matrix(Ralt) %>% unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Cscore polviews2:Cscore polviews3:Cscore\n1       0      0      0      1                0                0\n2       1      0      0      2                0                0\n3       0      1      0      3                0                0\n4       0      0      1      4                0                0\n5       0      0      0      1                1                0\n6       1      0      0      2                2                0\n7       0      1      0      3                3                0\n8       0      0      1      4                4                0\n9       0      0      0      1                0                1\n10      1      0      0      2                0                2\n11      0      1      0      3                0                3\n12      0      0      1      4                0                4\n13      0      0      0      1                0                0\n14      1      0      0      2                0                0\n15      0      1      0      3                0                0\n16      0      0      1      4                0                0\n17      0      0      0      1                0                0\n18      1      0      0      2                0                0\n19      0      1      0      3                0                0\n20      0      0      1      4                0                0\n21      0      0      0      1                0                0\n22      1      0      0      2                0                0\n23      0      1      0      3                0                0\n24      0      0      1      4                0                0\n25      0      0      0      1                0                0\n26      1      0      0      2                0                0\n27      0      1      0      3                0                0\n28      0      0      1      4                0                0\n   polviews4:Cscore polviews5:Cscore polviews6:Cscore polviews7:Cscore\n1                 0                0                0                0\n2                 0                0                0                0\n3                 0                0                0                0\n4                 0                0                0                0\n5                 0                0                0                0\n6                 0                0                0                0\n7                 0                0                0                0\n8                 0                0                0                0\n9                 0                0                0                0\n10                0                0                0                0\n11                0                0                0                0\n12                0                0                0                0\n13                1                0                0                0\n14                2                0                0                0\n15                3                0                0                0\n16                4                0                0                0\n17                0                1                0                0\n18                0                2                0                0\n19                0                3                0                0\n20                0                4                0                0\n21                0                0                1                0\n22                0                0                2                0\n23                0                0                3                0\n24                0                0                4                0\n25                0                0                0                1\n26                0                0                0                2\n27                0                0                0                3\n28                0                0                0                4"
  },
  {
    "objectID": "3-Chapter_2.html#列効果モデル",
    "href": "3-Chapter_2.html#列効果モデル",
    "title": "2  第2章",
    "section": "2.4 列効果モデル",
    "text": "2.4 列効果モデル\n列効果モデルは行効果モデルと同様の方法で推定すればよい．まずは効果コーディングで推定し，その後にダミーコーディングで推定する．\n\n# 4. C: Column Effect Model\n# contrast\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.treatment\"))\nC <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Rscore*fefam, family = poisson, \n      data = ., \n      tolerance = 1e-12)\n# 結果\nsummary(C)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore * fefam, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7572  -0.4920   0.1628   0.4922   1.4247  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    4.26735    0.02842 150.161  < 2e-16 ***\npolviews1     -1.34764    0.08885 -15.167  < 2e-16 ***\npolviews2      0.10725    0.05058   2.120 0.033978 *  \npolviews3      0.17817    0.04852   3.672 0.000241 ***\npolviews4      1.35465    0.03449  39.280  < 2e-16 ***\npolviews5      0.47060    0.04547  10.349  < 2e-16 ***\npolviews6      0.45489    0.04714   9.650  < 2e-16 ***\nfefam1         1.16938    0.10545  11.089  < 2e-16 ***\nfefam2         1.01794    0.08835  11.521  < 2e-16 ***\nfefam3        -0.27421    0.10365  -2.646 0.008155 ** \nRscore         0.00000         NA      NA       NA    \nfefam1:Rscore -0.32183    0.02601 -12.373  < 2e-16 ***\nfefam2:Rscore -0.06518    0.02013  -3.238 0.001203 ** \nfefam3:Rscore  0.13740    0.02282   6.021 1.73e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 14.237 on 15 degrees of freedom\nAIC: 211.59\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(C, \"C:Column effect\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect        15  14.2 -108.  2.32 0.508\n\n# モデル行列の確認\nmodel.matrix(C) %>% unique()\n\n   (Intercept) polviews1 polviews2 polviews3 polviews4 polviews5 polviews6\n1            1         1         0         0         0         0         0\n2            1         1         0         0         0         0         0\n3            1         1         0         0         0         0         0\n4            1         1         0         0         0         0         0\n5            1         0         1         0         0         0         0\n6            1         0         1         0         0         0         0\n7            1         0         1         0         0         0         0\n8            1         0         1         0         0         0         0\n9            1         0         0         1         0         0         0\n10           1         0         0         1         0         0         0\n11           1         0         0         1         0         0         0\n12           1         0         0         1         0         0         0\n13           1         0         0         0         1         0         0\n14           1         0         0         0         1         0         0\n15           1         0         0         0         1         0         0\n16           1         0         0         0         1         0         0\n17           1         0         0         0         0         1         0\n18           1         0         0         0         0         1         0\n19           1         0         0         0         0         1         0\n20           1         0         0         0         0         1         0\n21           1         0         0         0         0         0         1\n22           1         0         0         0         0         0         1\n23           1         0         0         0         0         0         1\n24           1         0         0         0         0         0         1\n25           1        -1        -1        -1        -1        -1        -1\n26           1        -1        -1        -1        -1        -1        -1\n27           1        -1        -1        -1        -1        -1        -1\n28           1        -1        -1        -1        -1        -1        -1\n   fefam1 fefam2 fefam3 Rscore fefam1:Rscore fefam2:Rscore fefam3:Rscore\n1       1      0      0      1             1             0             0\n2       0      1      0      1             0             1             0\n3       0      0      1      1             0             0             1\n4      -1     -1     -1      1            -1            -1            -1\n5       1      0      0      2             2             0             0\n6       0      1      0      2             0             2             0\n7       0      0      1      2             0             0             2\n8      -1     -1     -1      2            -2            -2            -2\n9       1      0      0      3             3             0             0\n10      0      1      0      3             0             3             0\n11      0      0      1      3             0             0             3\n12     -1     -1     -1      3            -3            -3            -3\n13      1      0      0      4             4             0             0\n14      0      1      0      4             0             4             0\n15      0      0      1      4             0             0             4\n16     -1     -1     -1      4            -4            -4            -4\n17      1      0      0      5             5             0             0\n18      0      1      0      5             0             5             0\n19      0      0      1      5             0             0             5\n20     -1     -1     -1      5            -5            -5            -5\n21      1      0      0      6             6             0             0\n22      0      1      0      6             0             6             0\n23      0      0      1      6             0             0             6\n24     -1     -1     -1      6            -6            -6            -6\n25      1      0      0      7             7             0             0\n26      0      1      0      7             0             7             0\n27      0      0      1      7             0             0             7\n28     -1     -1     -1      7            -7            -7            -7\n\n\nすべてを足すと0となることから(\\(\\sum \\tau_j^B=0\\))，polviews7の係数は0-(-0.2496118)=0.2496118となる\n\npickCoef(C, \":Rscore\")\n\nfefam1:Rscore fefam2:Rscore fefam3:Rscore \n           12            13            14 \n\nC$coefficients[12:14] %>% sum()\n\n[1] -0.2496118\n\n0 - (C$coefficients[12:14] %>% sum())\n\n[1] 0.2496118\n\n\n以下はダミーコーディングを用いている．\n\n# alternative (default)\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\nCalt <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Rscore*fefam, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\n推定値は表2.5Cを確認せよ．\n\n# 結果\nsummary(Calt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore * fefam, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7572  -0.4920   0.1628   0.4922   1.4247  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    3.76726    0.11222  33.571  < 2e-16 ***\npolviews2      1.13306    0.10785  10.506  < 2e-16 ***\npolviews3      0.88215    0.11310   7.800  < 2e-16 ***\npolviews4      1.73680    0.11708  14.834  < 2e-16 ***\npolviews5      0.53092    0.13848   3.834 0.000126 ***\npolviews6      0.19337    0.16048   1.205 0.228239    \npolviews7     -1.80128    0.20632  -8.730  < 2e-16 ***\nfefam2        -0.15144    0.13618  -1.112 0.266095    \nfefam3        -1.44359    0.15929  -9.063  < 2e-16 ***\nfefam4        -3.08249    0.23741 -12.984  < 2e-16 ***\nRscore         0.00000         NA      NA       NA    \nfefam2:Rscore  0.25665    0.03459   7.421 1.17e-13 ***\nfefam3:Rscore  0.45924    0.03851  11.926  < 2e-16 ***\nfefam4:Rscore  0.57144    0.05297  10.788  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 14.237 on 15 degrees of freedom\nAIC: 211.59\n\nNumber of iterations: 4\n\n\n適合度は効果コーディングとダミーコーディングで変化しない．\n\n# モデル適合度\nmodel.summary(C, \"C:Column effect (effect coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`                df    L2   BIC Delta     p\n  <chr>                           <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect (effect coding)    15  14.2 -108.  2.32 0.508\n\nmodel.summary(Calt, \"C:Column effect (dummy coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`               df    L2   BIC Delta     p\n  <chr>                          <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect (dummy coding)    15  14.2 -108.  2.32 0.508\n\n\n\n# モデル行列の確認\nmodel.matrix(Calt) %>% unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Rscore fefam2:Rscore fefam3:Rscore fefam4:Rscore\n1       0      0      0      1             0             0             0\n2       1      0      0      1             1             0             0\n3       0      1      0      1             0             1             0\n4       0      0      1      1             0             0             1\n5       0      0      0      2             0             0             0\n6       1      0      0      2             2             0             0\n7       0      1      0      2             0             2             0\n8       0      0      1      2             0             0             2\n9       0      0      0      3             0             0             0\n10      1      0      0      3             3             0             0\n11      0      1      0      3             0             3             0\n12      0      0      1      3             0             0             3\n13      0      0      0      4             0             0             0\n14      1      0      0      4             4             0             0\n15      0      1      0      4             0             4             0\n16      0      0      1      4             0             0             4\n17      0      0      0      5             0             0             0\n18      1      0      0      5             5             0             0\n19      0      1      0      5             0             5             0\n20      0      0      1      5             0             0             5\n21      0      0      0      6             0             0             0\n22      1      0      0      6             6             0             0\n23      0      1      0      6             0             6             0\n24      0      0      1      6             0             0             6\n25      0      0      0      7             0             0             0\n26      1      0      0      7             7             0             0\n27      0      1      0      7             0             7             0\n28      0      0      1      7             0             0             7"
  },
  {
    "objectID": "3-Chapter_2.html#行列効果モデルrc",
    "href": "3-Chapter_2.html#行列効果モデルrc",
    "title": "2  第2章",
    "section": "2.5 行・列効果モデル（\\(R+C\\)）",
    "text": "2.5 行・列効果モデル（\\(R+C\\)）\n\n# コントラスト\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.treatment\"))\n\n# 5. R+C: Row and Column Effect Model\n# 収束しない\nRplusCno <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\n係数を確認する．この場合，制約は3つ必要であるが2つしかNAとなっていない．テキストや表2.5Dを参照し，どのような制約を課すのかをきめる．ここでは表2.5Dのような制約を課す．\n\nRplusCno\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    family = poisson, data = ., tolerance = 1e-12)\n\nCoefficients:\n     (Intercept)         polviews2         polviews3         polviews4  \n          4.5899            1.4543            1.5167            2.4534  \n       polviews5         polviews6         polviews7            fefam2  \n          1.6458            1.1561           -0.9443            0.6009  \n          fefam3            fefam4  polviews1:Cscore  polviews2:Cscore  \n          0.1389           -0.6167           -0.6101           -0.5942  \npolviews3:Cscore  polviews4:Cscore  polviews5:Cscore  polviews6:Cscore  \n         -0.5660           -0.4267           -0.4258           -0.1962  \npolviews7:Cscore     fefam1:Rscore     fefam2:Rscore     fefam3:Rscore  \n              NA           -0.2808           -0.1031                NA  \n   fefam4:Rscore  \n              NA  \n\nDeviance:            7.678265 \nPearson chi-squared: 7.790921 \nResidual df:         10 \n\npickCoef(RplusCno, \":Cscore\")  # 行効果\n\npolviews1:Cscore polviews2:Cscore polviews3:Cscore polviews4:Cscore \n              11               12               13               14 \npolviews5:Cscore polviews6:Cscore polviews7:Cscore \n              15               16               17 \n\npickCoef(RplusCno, \":Rscore\")  # 列効果\n\nfefam1:Rscore fefam2:Rscore fefam3:Rscore fefam4:Rscore \n           18            19            20            21 \n\n\nあるいは次のように一覧にしてもよい．\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(RplusCno$coefficients),\n           estimate = RplusCno$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                              var   estimate number\n(Intercept)           (Intercept)  4.5899015      1\npolviews2               polviews2  1.4543053      2\npolviews3               polviews3  1.5166866      3\npolviews4               polviews4  2.4534277      4\npolviews5               polviews5  1.6457919      5\npolviews6               polviews6  1.1561295      6\npolviews7               polviews7 -0.9442830      7\nfefam2                     fefam2  0.6009497      8\nfefam3                     fefam3  0.1389105      9\nfefam4                     fefam4 -0.6166671     10\npolviews1:Cscore polviews1:Cscore -0.6101464     11\npolviews2:Cscore polviews2:Cscore -0.5942374     12\npolviews3:Cscore polviews3:Cscore -0.5659952     13\npolviews4:Cscore polviews4:Cscore -0.4267150     14\npolviews5:Cscore polviews5:Cscore -0.4258108     15\npolviews6:Cscore polviews6:Cscore -0.1962125     16\npolviews7:Cscore polviews7:Cscore         NA     17\nfefam1:Rscore       fefam1:Rscore -0.2807905     18\nfefam2:Rscore       fefam2:Rscore -0.1031243     19\nfefam3:Rscore       fefam3:Rscore         NA     20\nfefam4:Rscore       fefam4:Rscore         NA     21\n\n\n制約を課すのは11番目，17番目，18番目の係数であり，これらを0にする．対象となる係数はconstrain = c(11,17,18)で指定し，制約はconstrainTo = c(0, 0, 0)とする．あとは同じである．\n\n# polviews1:Cscore(11) = polviews7:Cscore(17) = fefam1:Rscore(18) = 0\nRplusC <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      constrain = c(11, 17, 18), \n      constrainTo = c(0, 0, 0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n# 結果\nsummary(RplusC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    constrain = c(11, 17, 18), constrainTo = c(0, 0, 0), family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.69896    0.14301  25.866  < 2e-16 ***\npolviews2         1.27521    0.25278   5.045 4.54e-07 ***\npolviews3         1.15849    0.24328   4.762 1.92e-06 ***\npolviews4         1.91613    0.21048   9.104  < 2e-16 ***\npolviews5         0.92939    0.22891   4.060 4.91e-05 ***\npolviews6         0.26063    0.24331   1.071   0.2841    \npolviews7        -2.01888    0.30512  -6.617 3.67e-11 ***\nfefam2           -0.11089    0.17635  -0.629   0.5295    \nfefam3           -1.28476    0.28350  -4.532 5.85e-06 ***\nfefam4           -2.75218    0.43313  -6.354 2.10e-10 ***\npolviews1:Cscore  0.00000         NA      NA       NA    \npolviews2:Cscore -0.08578    0.11437  -0.750   0.4532    \npolviews3:Cscore -0.15923    0.10585  -1.504   0.1325    \npolviews4:Cscore -0.12164    0.09246  -1.316   0.1883    \npolviews5:Cscore -0.22243    0.10510  -2.116   0.0343 *  \npolviews6:Cscore -0.09452    0.11454  -0.825   0.4092    \npolviews7:Cscore  0.00000         NA      NA       NA    \nfefam1:Rscore     0.00000         NA      NA       NA    \nfefam2:Rscore     0.27936    0.04372   6.389 1.67e-10 ***\nfefam3:Rscore     0.48417    0.06239   7.761  < 2e-16 ***\nfefam4:Rscore     0.58586    0.08655   6.769 1.30e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusC                 10  7.68 -73.8  1.77 0.660\n\n\n11番目，18番目，21番目の係数を0にして推定する．\n\n# polviews1:Cscore(11) = polviews7:Cscore(17) = fefam1:Rscore(18) = 0\nRplusC_2 <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      constrain = c(11, 18, 21), \n      constrainTo = c(0, 0, 0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n# 結果\nsummary(RplusC_2)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    constrain = c(11, 18, 21), constrainTo = c(0, 0, 0), family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.69896    0.14301  25.866  < 2e-16 ***\npolviews2         1.07992    0.26750   4.037 5.41e-05 ***\npolviews3         0.76791    0.27072   2.837 0.004560 ** \npolviews4         1.33027    0.25273   5.264 1.41e-07 ***\npolviews5         0.14824    0.27598   0.537 0.591164    \npolviews6        -0.71581    0.29336  -2.440 0.014688 *  \npolviews7        -3.19061    0.44608  -7.153 8.52e-13 ***\nfefam2            0.08440    0.15987   0.528 0.597543    \nfefam3           -0.89419    0.24903  -3.591 0.000330 ***\nfefam4           -2.16632    0.36822  -5.883 4.03e-09 ***\npolviews1:Cscore  0.00000         NA      NA       NA    \npolviews2:Cscore  0.10951    0.12956   0.845 0.397978    \npolviews3:Cscore  0.23134    0.13130   1.762 0.078073 .  \npolviews4:Cscore  0.46422    0.12511   3.711 0.000207 ***\npolviews5:Cscore  0.55872    0.13347   4.186 2.84e-05 ***\npolviews6:Cscore  0.88192    0.13507   6.529 6.61e-11 ***\npolviews7:Cscore  1.17173    0.17310   6.769 1.30e-11 ***\nfefam1:Rscore     0.00000         NA      NA       NA    \nfefam2:Rscore     0.08407    0.03224   2.607 0.009124 ** \nfefam3:Rscore     0.09360    0.03861   2.424 0.015346 *  \nfefam4:Rscore     0.00000         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusC_2)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusC_2               10  7.68 -73.8  1.77 0.660\n\n\nRscore:Cscoreを含めて推定すれば，制約は自動的に課されており（polviewsの1番目と7番目，fefamの1 番目と4番目），特に指定する必要はない．\n\n# 5. R+C: Row and Column Effect Model (Alternative)\nRplusCalt <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + Rscore:fefam,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\nRplusCalt\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + \n    Rscore:fefam, family = poisson, data = ., tolerance = 1e-12)\n\nCoefficients:\n     (Intercept)         polviews2         polviews3         polviews4  \n         3.50368           1.07992           0.76791           1.33027  \n       polviews5         polviews6         polviews7            fefam2  \n         0.14824          -0.71581          -3.19061          -0.11089  \n          fefam3            fefam4     Rscore:Cscore  polviews2:Cscore  \n        -1.28476          -2.75218           0.19529          -0.08578  \npolviews3:Cscore  polviews4:Cscore  polviews5:Cscore  polviews6:Cscore  \n        -0.15923          -0.12164          -0.22243          -0.09452  \npolviews7:Cscore     fefam2:Rscore     fefam3:Rscore     fefam4:Rscore  \n              NA           0.08407           0.09360                NA  \n\nDeviance:            7.678265 \nPearson chi-squared: 7.790921 \nResidual df:         10 \n\n# 結果\nsummary(RplusCalt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + \n    Rscore:fefam, family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.50368    0.13171  26.601  < 2e-16 ***\npolviews2         1.07992    0.26750   4.037 5.41e-05 ***\npolviews3         0.76791    0.27072   2.837  0.00456 ** \npolviews4         1.33027    0.25273   5.264 1.41e-07 ***\npolviews5         0.14824    0.27598   0.537  0.59116    \npolviews6        -0.71581    0.29336  -2.440  0.01469 *  \npolviews7        -3.19061    0.44608  -7.153 8.52e-13 ***\nfefam2           -0.11089    0.17635  -0.629  0.52949    \nfefam3           -1.28476    0.28350  -4.532 5.85e-06 ***\nfefam4           -2.75218    0.43313  -6.354 2.10e-10 ***\nRscore:Cscore     0.19529    0.02885   6.769 1.30e-11 ***\npolviews2:Cscore -0.08578    0.11437  -0.750  0.45321    \npolviews3:Cscore -0.15923    0.10585  -1.504  0.13250    \npolviews4:Cscore -0.12164    0.09246  -1.316  0.18831    \npolviews5:Cscore -0.22243    0.10510  -2.116  0.03431 *  \npolviews6:Cscore -0.09452    0.11454  -0.825  0.40923    \npolviews7:Cscore  0.00000         NA      NA       NA    \nfefam2:Rscore     0.08407    0.03224   2.607  0.00912 ** \nfefam3:Rscore     0.09360    0.03861   2.424  0.01535 *  \nfefam4:Rscore     0.00000         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusCalt)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusCalt              10  7.68 -73.8  1.77 0.660"
  },
  {
    "objectID": "3-Chapter_2.html#行列効果モデルrc1",
    "href": "3-Chapter_2.html#行列効果モデルrc1",
    "title": "2  第2章",
    "section": "2.6 行・列効果モデル（\\(RC(1)\\)）",
    "text": "2.6 行・列効果モデル（\\(RC(1)\\)）\nRC(1)についてはMult(1,polviews,fefam)を含んだモデルで推定する．結果をみると係数は表示されているものの，標準誤差はNAとなっている．\n\n# 6. RC: RC(1) model\nRC.un <- freq_tab_2.3A %>%\n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................\nDone\n\n# 結果\nsummary(RC.un)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  2.91395         NA      NA       NA\npolviews2                    1.39080         NA      NA       NA\npolviews3                    1.42773         NA      NA       NA\npolviews4                    2.58770         NA      NA       NA\npolviews5                    1.68731         NA      NA       NA\npolviews6                    1.62798         NA      NA       NA\npolviews7                   -0.11146         NA      NA       NA\nfefam2                       0.87859         NA      NA       NA\nfefam3                       0.39538         NA      NA       NA\nfefam4                      -0.79025         NA      NA       NA\nMult(., polviews, fefam).   -0.79275         NA      NA       NA\nMult(1, ., fefam).polviews1 -1.89323         NA      NA       NA\nMult(1, ., fefam).polviews2 -1.45576         NA      NA       NA\nMult(1, ., fefam).polviews3 -0.87154         NA      NA       NA\nMult(1, ., fefam).polviews4  0.02985         NA      NA       NA\nMult(1, ., fefam).polviews5  0.41751         NA      NA       NA\nMult(1, ., fefam).polviews6  1.68524         NA      NA       NA\nMult(1, ., fefam).polviews7  2.76888         NA      NA       NA\nMult(1, polviews, .).fefam1  0.50733         NA      NA       NA\nMult(1, polviews, .).fefam2  0.06751         NA      NA       NA\nMult(1, polviews, .).fefam3 -0.27534         NA      NA       NA\nMult(1, polviews, .).fefam4 -0.43797         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 35\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\n\nまずは「重みづけのないまたは単位標準化した解」を求める．scaleWeights = \"unit\"とする．RC.unから.polviewsのある変数をpickCoef(RC.un, \"[.]polviews\")によって取り出す．\n\n# mu[i], i = 1 to 7\nmu <- getContrasts(RC.un, pickCoef(RC.un,\n                                   \"[.]polviews\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# 合計が0，2乗和が1となっていること確認する．\nlist(\"和\" = sum(mu$qvframe[,1]), \n     \"2乗和\" = sum(mu$qvframe[,1]^2))\n\n$和\n[1] 0\n\n$`2乗和`\n[1] 1\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(RC.un, pickCoef(RC.un, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\",\n                   scaleWeights = \"unit\")\n\n# 合計が0，2乗和が1となっていること確認する．\nlist(\"和\" = sum(nu$qvframe[,1]), \n     \"2乗和\" = sum(nu$qvframe[,1]^2))\n\n$和\n[1] 0\n\n$`2乗和`\n[1] 1\n\n# muの1番目と7番目，nuの1番目と4番目の値を取り出し保存する．\ncon <- c(mu$qvframe[,1][c(1,7)],\n         nu$qvframe[,1][c(1,4)])\n\n\n#保存した値で制約を課した上で，再推定する．\nset.seed(1234)\nRC <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam), \n      constrain = c(12,18,19,22),\n      constrainTo = con, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................\nDone\n\n\nDeviance is not finite 警告メッセージ: Algorithm failed - no model could be estimatedと表示されたらもう一度推定する．set.seedの値をいくつか変えて実行するのがよい．\n表2.5Eの値と一致しているのかを確認する．\n\n# 結果\nsummary(RC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    constrain = c(12, 18, 19, 22), constrainTo = con, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  2.82020    0.14578  19.346  < 2e-16 ***\npolviews2                    1.40280    0.12442  11.275  < 2e-16 ***\npolviews3                    1.45577    0.12746  11.421  < 2e-16 ***\npolviews4                    2.64048    0.13143  20.090  < 2e-16 ***\npolviews5                    1.75073    0.14175  12.351  < 2e-16 ***\npolviews6                    1.72618    0.16727  10.320  < 2e-16 ***\npolviews7                    0.01648    0.21938   0.075 0.940107    \nfefam2                       0.91251    0.12222   7.466 8.25e-14 ***\nfefam3                       0.45574    0.20388   2.235 0.025396 *  \nfefam4                      -0.71735    0.24913  -2.879 0.003985 ** \nMult(., polviews, fefam).   -2.37331    0.34813  -6.817 9.27e-12 ***\nMult(1, ., fefam).polviews1 -0.48165         NA      NA       NA    \nMult(1, ., fefam).polviews2 -0.37580    0.10049  -3.740 0.000184 ***\nMult(1, ., fefam).polviews3 -0.23443    0.09461  -2.478 0.013216 *  \nMult(1, ., fefam).polviews4 -0.01632    0.08366  -0.195 0.845376    \nMult(1, ., fefam).polviews5  0.07749    0.09263   0.837 0.402872    \nMult(1, ., fefam).polviews6  0.38425    0.10926   3.517 0.000437 ***\nMult(1, ., fefam).polviews7  0.64646         NA      NA       NA    \nMult(1, polviews, .).fefam1  0.74812         NA      NA       NA    \nMult(1, polviews, .).fefam2  0.14098    0.07469   1.888 0.059090 .  \nMult(1, polviews, .).fefam3 -0.33229    0.09162  -3.627 0.000287 ***\nMult(1, polviews, .).fefam4 -0.55680         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 35\n\n\n先ほどの単位標準化した解と推定の結果が一致しているのかを確認する．\n\n# 指定したmuとnuの値と結果が一致しているかを確認\nlist(mu = mu, nu = nu)\n\n$mu\n                               Estimate Std. Error\nMult(1, ., fefam).polviews1 -0.48165420 0.06776575\nMult(1, ., fefam).polviews2 -0.37579722 0.05016783\nMult(1, ., fefam).polviews3 -0.23443020 0.04842778\nMult(1, ., fefam).polviews4 -0.01631519 0.03689088\nMult(1, ., fefam).polviews5  0.07748893 0.04931050\nMult(1, ., fefam).polviews6  0.38424697 0.06009815\nMult(1, ., fefam).polviews7  0.64646091 0.06145462\n\n$nu\n                              Estimate Std. Error\nMult(1, polviews, .).fefam1  0.7481178 0.02662158\nMult(1, polviews, .).fefam2  0.1409760 0.04671343\nMult(1, polviews, .).fefam3 -0.3322937 0.05164241\nMult(1, polviews, .).fefam4 -0.5568002 0.04821776\n\n\n適合度は変化していない．\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC                     10  8.07 -73.4  1.77 0.622"
  },
  {
    "objectID": "3-Chapter_2.html#周辺重みづけ",
    "href": "3-Chapter_2.html#周辺重みづけ",
    "title": "2  第2章",
    "section": "2.7 周辺重みづけ",
    "text": "2.7 周辺重みづけ\n\n# 行の周辺確率\nrp <- prop.table(apply(tab_2.3A, 1, sum, na.rm = TRUE))\nrp\n\n     Strongly liberal               Liberal      Slightly liberal \n           0.03227682            0.12387322            0.12300087 \n             Moderate Slightly conservative          Conservative \n           0.38092469            0.15498691            0.15469613 \nStrongly conservative \n           0.03024135 \n\nsum(rp)\n\n[1] 1\n\n# 列の周辺確率\ncp <- prop.table(apply(tab_2.3A, 2, sum, na.rm = TRUE))\ncp\n\nStrongly Disagree          Disagree             Agree    Strongly agree \n       0.19220704        0.43617331        0.28118639        0.09043327 \n\nsum(cp)\n\n[1] 1\n\n# mu[i], i = 1 to 7\nmu <- getContrasts(RC.un, pickCoef(RC.un,\n                                   \"[.]polviews\"),\n                   ref = rp,\n                   scaleRef = rp, \n                   scaleWeights = rp)\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(RC.un, pickCoef(RC.un, \"[.]fefam\"), \n                   ref = cp,\n                   scaleRef = cp,\n                   scaleWeights = cp)\n\n# muの1番目と7番目，nuの1番目と4番目の値を取り出し保存する．\ncon <- c(mu$qvframe[,1][c(1,7)],\n         nu$qvframe[,1][c(1,4)])\n\n\n#保存した値で制約を課した上で，再推定する．\nset.seed(1234)\nRC_mw <- freq_tab_2.3A %>% \n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam), \n      constrain = c(12,18,19,22),\n      constrainTo = con, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........................................\nDone\n\n\n\n# 結果\nsummary(RC_mw)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    constrain = c(12, 18, 19, 22), constrainTo = con, family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  2.90051    0.14144  20.507  < 2e-16 ***\npolviews2                    1.38735    0.11722  11.835  < 2e-16 ***\npolviews3                    1.41969    0.12024  11.807  < 2e-16 ***\npolviews4                    2.57257    0.12376  20.787  < 2e-16 ***\npolviews5                    1.66913    0.13414  12.443  < 2e-16 ***\npolviews6                    1.59981    0.16013   9.991  < 2e-16 ***\npolviews7                   -0.14816    0.21832  -0.679 0.497376    \nfefam2                       0.90365    0.12173   7.423 1.14e-13 ***\nfefam3                       0.43998    0.20350   2.162 0.030615 *  \nfefam4                      -0.73638    0.24896  -2.958 0.003098 ** \nMult(., polviews, fefam).   -0.25673    0.03766  -6.817 9.27e-12 ***\nMult(1, ., fefam).polviews1 -1.82062         NA      NA       NA    \nMult(1, ., fefam).polviews2 -1.41532    0.38476  -3.678 0.000235 ***\nMult(1, ., fefam).polviews3 -0.87405    0.36224  -2.413 0.015825 *  \nMult(1, ., fefam).polviews4 -0.03893    0.32031  -0.122 0.903253    \nMult(1, ., fefam).polviews5  0.32022    0.35468   0.903 0.366604    \nMult(1, ., fefam).polviews6  1.49474    0.41835   3.573 0.000353 ***\nMult(1, ., fefam).polviews7  2.49870         NA      NA       NA    \nMult(1, polviews, .).fefam1  1.65778         NA      NA       NA    \nMult(1, polviews, .).fefam2  0.19190    0.18033   1.064 0.287244    \nMult(1, polviews, .).fefam3 -0.95076    0.22120  -4.298 1.72e-05 ***\nMult(1, polviews, .).fefam4 -1.49281         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 43\n\n\n内在的連関パラメータが0.25673となっている．\n適合度は変化していない．\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC                     10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC_mw)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC_mw                  10  8.07 -73.4  1.77 0.622"
  },
  {
    "objectID": "3-Chapter_2.html#表2.4a",
    "href": "3-Chapter_2.html#表2.4a",
    "title": "2  第2章",
    "section": "2.8 表2.4A",
    "text": "2.8 表2.4A\n表2.4Aを再現する．\n\nmodels <- list()\nmodels[[1]] <- model.summary(O)\nmodels[[2]] <- model.summary(U)\nmodels[[3]] <- model.summary(R)\nmodels[[4]] <- model.summary(C)\nmodels[[5]] <- model.summary(RplusC)\nmodels[[6]] <- model.summary(RC)\nmodels %>% bind_rows() %>% kable(digit = 3)\n\n\n\n\nModel Description\ndf\nL2\nBIC\nDelta\np\n\n\n\n\nO\n18\n211.695\n65.122\n8.092\n0.000\n\n\nU\n17\n20.125\n-118.305\n2.766\n0.268\n\n\nR\n12\n15.906\n-81.809\n2.466\n0.196\n\n\nC\n15\n14.237\n-107.907\n2.321\n0.508\n\n\nRplusC\n10\n7.678\n-73.751\n1.772\n0.660\n\n\nRC\n10\n8.072\n-73.358\n1.767\n0.622"
  },
  {
    "objectID": "3-Chapter_2.html#表2.4b",
    "href": "3-Chapter_2.html#表2.4b",
    "title": "2  第2章",
    "section": "2.9 表2.4B",
    "text": "2.9 表2.4B\nモデルの比較のための関数を作成する．引数は2つであり，1つめのモデルと2つめのモデルの比較を行う．2つめが指定されていなければ比較ではなくそのモデルの適合度を示す．\n\nmodel_comparison <- function(x, y = 0) {\n  models %>% \n    bind_rows() %>%\n    summarise(`Model Used` = \n                ifelse(y == 0,\n                       paste0(x),\n                       paste0(x,\"-\",y)),\n              df = ifelse(y == 0, \n                          df[x], \n                          df[x] - df[y]),\n              L2 = ifelse(y == 0, \n                          L2[x], \n                          L2[x] - L2[y]))\n}\n\n表2.4Bは次のように再現できる．\n\n# Table 2.4 Panel B\nbind_rows(model_comparison(1,2),\n          model_comparison(2,6),\n          model_comparison(6),\n          model_comparison(1))\n\n# A tibble: 4 × 3\n  `Model Used`    df     L2\n  <chr>        <int>  <dbl>\n1 1-2              1 192.  \n2 2-6              7  12.1 \n3 6               10   8.07\n4 1               18 212.  \n\n\n表2.4Cも再現できる．\n\n# Table 2.4 Panel C\nbind_rows(model_comparison(2,4),\n          model_comparison(4,6),\n          model_comparison(2,6))\n\n# A tibble: 3 × 3\n  `Model Used`    df    L2\n  <chr>        <int> <dbl>\n1 2-4              2  5.89\n2 4-6              5  6.17\n3 2-6              7 12.1"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5a",
    "href": "3-Chapter_2.html#表2.5a",
    "title": "2  第2章",
    "section": "2.10 表2.5A",
    "text": "2.10 表2.5A\n係数を取り出して表2.5Aを再現する．\n\nsummary(U)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore:Cscore\", Variable))\n\n       Variable  Estimate Std..Error  z.value     Pr...z..\n1 Rscore:Cscore 0.2021125 0.01519706 13.29945 2.331718e-40"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5b",
    "href": "3-Chapter_2.html#表2.5b",
    "title": "2  第2章",
    "section": "2.11 表2.5B",
    "text": "2.11 表2.5B\n省略された係数について，値を標準誤差を求める方法は次の通り．\n\n# Table 2.5 Panel B \nsummary(R)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\":Cscore\", Variable))\n\n          Variable     Estimate Std..Error    z.value     Pr...z..\n1 polviews1:Cscore -0.558726563 0.10766840 -5.1893275 2.110549e-07\n2 polviews2:Cscore -0.405075736 0.05914888 -6.8484091 7.467575e-12\n3 polviews3:Cscore -0.248458921 0.05774110 -4.3029822 1.685144e-05\n4 polviews4:Cscore  0.008763861 0.03970853  0.2207048 8.253223e-01\n5 polviews5:Cscore  0.112245001 0.05128383  2.1887016 2.861853e-02\n6 polviews6:Cscore  0.419078627 0.05143368  8.1479420 3.701697e-16\n\n# polviews7:Cscoreを求める\nmycontrast <- numeric(length(coef(R)))\nterms <- pickCoef(R,\"[:]Cscore\")\nmycontrast[terms] <- rep(-1,6)\nmycontrast <- cbind(mycontrast)\ncolnames(mycontrast) <- \"polviews7:Cscore\"\ngnm::se(R, mycontrast)\n\n                  Estimate Std. Error\npolviews7:Cscore 0.6721737  0.1003211"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5b他の正規化",
    "href": "3-Chapter_2.html#表2.5b他の正規化",
    "title": "2  第2章",
    "section": "2.12 表2.5B（他の正規化）",
    "text": "2.12 表2.5B（他の正規化）\n\n# Table 2.5 Panel B Alternative\nsummary(Ralt)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\":Cscore\", Variable))\n\n          Variable  Estimate Std..Error  z.value     Pr...z..\n1 polviews2:Cscore 0.1536508  0.1361941 1.128176 2.592458e-01\n2 polviews3:Cscore 0.3102676  0.1356609 2.287082 2.219102e-02\n3 polviews4:Cscore 0.5674904  0.1267654 4.476699 7.580590e-06\n4 polviews5:Cscore 0.6709716  0.1326215 5.059297 4.208051e-07\n5 polviews6:Cscore 0.9778052  0.1331060 7.346062 2.041319e-13\n6 polviews7:Cscore 1.2309003  0.1678130 7.334954 2.217982e-13"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5c",
    "href": "3-Chapter_2.html#表2.5c",
    "title": "2  第2章",
    "section": "2.13 表2.5C",
    "text": "2.13 表2.5C\n同様に列効果の最後のカテゴリの推定値と標準誤差を求める．\n\n# Table 2.5 Panel C\nsummary(C)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\":Rscore\", Variable))\n\n       Variable    Estimate Std..Error    z.value     Pr...z..\n1 fefam1:Rscore -0.32183233 0.02601065 -12.373099 3.654449e-35\n2 fefam2:Rscore -0.06518238 0.02012977  -3.238109 1.203247e-03\n3 fefam3:Rscore  0.13740293 0.02281996   6.021174 1.731567e-09\n\n# fefam4:Rscoreを求める\nmycontrast <- numeric(length(coef(C)))\nterms <- pickCoef(C,\"[:]Rscore\")\nmycontrast[terms] <- rep(-1,3)\nmycontrast <- cbind(mycontrast)\ncolnames(mycontrast) <- \"fefam4:Rscore\"\ngnm::se(C, mycontrast)\n\n               Estimate Std. Error\nfefam4:Rscore 0.2496118 0.03429697"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5c他の正規化",
    "href": "3-Chapter_2.html#表2.5c他の正規化",
    "title": "2  第2章",
    "section": "2.14 表2.5C（他の正規化）",
    "text": "2.14 表2.5C（他の正規化）\n1つ目のカテゴリの値を0とした正規化の場合は次のようになる．\n\n# Table 2.5 Panel C Alternative\nsummary(Calt)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\":Rscore\", Variable))\n\n       Variable  Estimate Std..Error   z.value     Pr...z..\n1 fefam2:Rscore 0.2566499 0.03458604  7.420624 1.165702e-13\n2 fefam3:Rscore 0.4592353 0.03850703 11.926012 8.662502e-33\n3 fefam4:Rscore 0.5714441 0.05297192 10.787680 3.935998e-27"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5d",
    "href": "3-Chapter_2.html#表2.5d",
    "title": "2  第2章",
    "section": "2.15 表2.5D",
    "text": "2.15 表2.5D\n\n# Table 2.5 Panel D\nsummary(RplusC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore\", Variable))\n\n           Variable    Estimate Std..Error    z.value     Pr...z..\n1  polviews1:Cscore  0.00000000         NA         NA           NA\n2  polviews2:Cscore -0.08578207 0.11436513 -0.7500719 4.532114e-01\n3  polviews3:Cscore -0.15923097 0.10584890 -1.5043233 1.324981e-01\n4  polviews4:Cscore -0.12164181 0.09246130 -1.3155970 1.883093e-01\n5  polviews5:Cscore -0.22242867 0.10509647 -2.1164238 3.430878e-02\n6  polviews6:Cscore -0.09452143 0.11453734 -0.8252455 4.092322e-01\n7  polviews7:Cscore  0.00000000         NA         NA           NA\n8     fefam1:Rscore  0.00000000         NA         NA           NA\n9     fefam2:Rscore  0.27935717 0.04372418  6.3890770 1.668900e-10\n10    fefam3:Rscore  0.48417258 0.06238681  7.7608170 8.438398e-15\n11    fefam4:Rscore  0.58586364 0.08654948  6.7691179 1.295700e-11"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5d他の正規化",
    "href": "3-Chapter_2.html#表2.5d他の正規化",
    "title": "2  第2章",
    "section": "2.16 表2.5D（他の正規化）",
    "text": "2.16 表2.5D（他の正規化）\n\nsummary(RplusCalt)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore\", Variable))\n\n           Variable    Estimate Std..Error    z.value     Pr...z..\n1     Rscore:Cscore  0.19528788 0.02884983  6.7691179 1.295700e-11\n2  polviews2:Cscore -0.08578207 0.11436513 -0.7500719 4.532114e-01\n3  polviews3:Cscore -0.15923097 0.10584890 -1.5043233 1.324981e-01\n4  polviews4:Cscore -0.12164181 0.09246130 -1.3155970 1.883093e-01\n5  polviews5:Cscore -0.22242867 0.10509647 -2.1164238 3.430878e-02\n6  polviews6:Cscore -0.09452143 0.11453734 -0.8252455 4.092322e-01\n7  polviews7:Cscore  0.00000000         NA         NA           NA\n8     fefam2:Rscore  0.08406929 0.03224287  2.6073757 9.123918e-03\n9     fefam3:Rscore  0.09359682 0.03861067  2.4241178 1.534563e-02\n10    fefam4:Rscore  0.00000000         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5e",
    "href": "3-Chapter_2.html#表2.5e",
    "title": "2  第2章",
    "section": "2.17 表2.5E",
    "text": "2.17 表2.5E\n\nsummary(RC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Mult\", Variable))\n\n                      Variable    Estimate Std..Error    z.value     Pr...z..\n1    Mult(., polviews, fefam). -2.37330693 0.34812532 -6.8173924 9.270782e-12\n2  Mult(1, ., fefam).polviews1 -0.48165420         NA         NA           NA\n3  Mult(1, ., fefam).polviews2 -0.37579722 0.10049018 -3.7396411 1.842832e-04\n4  Mult(1, ., fefam).polviews3 -0.23443020 0.09460850 -2.4778980 1.321589e-02\n5  Mult(1, ., fefam).polviews4 -0.01631519 0.08365831 -0.1950217 8.453760e-01\n6  Mult(1, ., fefam).polviews5  0.07748893 0.09263438  0.8365030 4.028720e-01\n7  Mult(1, ., fefam).polviews6  0.38424697 0.10926427  3.5166753 4.369880e-04\n8  Mult(1, ., fefam).polviews7  0.64646091         NA         NA           NA\n9  Mult(1, polviews, .).fefam1  0.74811781         NA         NA           NA\n10 Mult(1, polviews, .).fefam2  0.14097601 0.07468829  1.8875250 5.908974e-02\n11 Mult(1, polviews, .).fefam3 -0.33229365 0.09161751 -3.6269668 2.867702e-04\n12 Mult(1, polviews, .).fefam4 -0.55680017         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#logmultパッケージの利用",
    "href": "3-Chapter_2.html#logmultパッケージの利用",
    "title": "2  第2章",
    "section": "2.18 logmultパッケージの利用",
    "text": "2.18 logmultパッケージの利用\nlogmultはgnmをベースとしてRCモデルを簡単に実行できる関数である．\nまずはlogmultパッケージのanoasで連関分析を行う．データはtableなのでtab_2.3Aを使用する．\nanoasは独立モデル，RC(1)，RC(2)，RC(3)，…と次元がmin(nrow(tab) - 1, ncol(tab) - 1)までのRCモデルを推定する．RC(1)の結果は表2.4Aと一致している．\n\nanoas(tab_2.3A)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations...................\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations..........................\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\n\n       Res. Df           Res. Dev     Dev./Indep. (%)   Dissim. (%)\nIndep.      18 211.69508974175693 100.000000000000000 8.09171028965\nRC(1)       10   8.07181892815000   3.812945750417107 1.76730792765\nRC(2)        4   1.36909098846095   0.646727796157711 0.49639212377\nRC(3)        0  -0.00000000000001  -0.000000000000005 0.00000000004\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617265 -11.92818107185000 -204 -8\nRC(2)  -31.20265305326811  -6.63090901153905   -7 -6\nRC(3)   -0.00000000000001  -0.00000000000001   -1 -4\n\n\n表2.5Eの推定値（RC(1)）はrcを用いて次のように再現できる．nd = 1で次元を1としている．標準誤差を求める上で，ブートストラップ法を用いている．結果には\\(\\gamma=\\delta=1/2\\)の場合の係数（Adjusted）が示されている．\n\nrc_fit <- rc(tab_2.3A, \n             nd = 1, \n             se = \"bootstrap\", \n             weighting = \"none\",\n             nreplicates = 100, \n             ncpus = getOption(\"boot.ncpus\")\n             )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\nComputing bootstrap standard errors...\n\n\nLoading required namespace: parallel\n\n\n.\n\nsummary(rc_fit, weighting = \"none\")\n\nCall:\nrc(tab = tab_2.3A, nd = 1, weighting = \"none\", se = \"bootstrap\", \n    nreplicates = 100, ncpus = getOption(\"boot.ncpus\"))\n\nDeviance Residuals:\n    Min       1Q   Median       3Q      Max  \n-1.0743  -0.2724   0.0304   0.3679   1.0372  \n\nAssociation coefficients:\n                                    Normalized   Adjusted  Std. error\nDim1                                  2.373307         NA      0.2735\nDim1:polviewsStrongly liberal         0.481654   0.742014      0.0732\nDim1:polviewsLiberal                  0.375797   0.578936      0.0505\nDim1:polviewsSlightly liberal         0.234430   0.361152      0.0544\nDim1:polviewsModerate                 0.016315   0.025134      0.0326\nDim1:polviewsSlightly conservative   -0.077489  -0.119376      0.0492\nDim1:polviewsConservative            -0.384247  -0.591953      0.0596\nDim1:polviewsStrongly conservative   -0.646461  -0.995908      0.0621\nDim1:fefamStrongly Disagree           0.748118   1.152516      0.0252\nDim1:fefamDisagree                    0.140976   0.217181      0.0470\nDim1:fefamAgree                      -0.332294  -0.511916      0.0583\nDim1:fefamStrongly agree             -0.556800  -0.857781      0.0489\n                                     Pr(>|z|)     \nDim1                                < 2.2e-16  ***\nDim1:polviewsStrongly liberal       4.834e-11  ***\nDim1:polviewsLiberal                1.003e-13  ***\nDim1:polviewsSlightly liberal       1.609e-05  ***\nDim1:polviewsModerate                0.616651     \nDim1:polviewsSlightly conservative   0.114925     \nDim1:polviewsConservative           1.121e-10  ***\nDim1:polviewsStrongly conservative  < 2.2e-16  ***\nDim1:fefamStrongly Disagree         < 2.2e-16  ***\nDim1:fefamDisagree                   0.002683  ** \nDim1:fefamAgree                     1.214e-08  ***\nDim1:fefamStrongly agree            < 2.2e-16  ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: none\nDeviance:              8.071819\nPearson chi-squared:   8.168769\nDissimilarity index:   1.767308%\nResidual df:           10\nBIC:                   -73.35754\nAIC:                   -11.92818\n\n\n周辺重みづけを用いたい場合は`weighting = “marginal”とする．\n\nrc_fit_wm <- rc(tab_2.3A, \n             nd = 1, \n             se = \"bootstrap\", \n             weighting = \"marginal\",\n             nreplicates = 100, \n             ncpus = getOption(\"boot.ncpus\")\n             )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............\nDone\nComputing bootstrap standard errors...\n.\n\nsummary(rc_fit_wm)\n\nCall:\nrc(tab = tab_2.3A, nd = 1, weighting = \"marginal\", se = \"bootstrap\", \n    nreplicates = 100, ncpus = getOption(\"boot.ncpus\"))\n\nDeviance Residuals:\n    Min       1Q   Median       3Q      Max  \n-1.0743  -0.2724   0.0304   0.3679   1.0372  \n\nAssociation coefficients:\n                                    Normalized   Adjusted  Std. error\nDim1                                  0.256734         NA      0.0185\nDim1:polviewsStrongly liberal         1.820624   0.922490      0.3333\nDim1:polviewsLiberal                  1.415319   0.717126      0.1601\nDim1:polviewsSlightly liberal         0.874053   0.442873      0.1882\nDim1:polviewsModerate                 0.038935   0.019728      0.0944\nDim1:polviewsSlightly conservative   -0.320222  -0.162253      0.1777\nDim1:polviewsConservative            -1.494737  -0.757366      0.1303\nDim1:polviewsStrongly conservative   -2.498701  -1.266064      0.4518\nDim1:fefamStrongly Disagree           1.657784   0.839980      0.0847\nDim1:fefamDisagree                    0.191902   0.097234      0.0811\nDim1:fefamAgree                      -0.950760  -0.481739      0.0891\nDim1:fefamStrongly agree             -1.492808  -0.756389      0.1960\n                                     Pr(>|z|)     \nDim1                                < 2.2e-16  ***\nDim1:polviewsStrongly liberal       4.701e-08  ***\nDim1:polviewsLiberal                < 2.2e-16  ***\nDim1:polviewsSlightly liberal       3.393e-06  ***\nDim1:polviewsModerate                 0.67992     \nDim1:polviewsSlightly conservative    0.07150  .  \nDim1:polviewsConservative           < 2.2e-16  ***\nDim1:polviewsStrongly conservative  3.197e-08  ***\nDim1:fefamStrongly Disagree         < 2.2e-16  ***\nDim1:fefamDisagree                    0.01798  *  \nDim1:fefamAgree                     < 2.2e-16  ***\nDim1:fefamStrongly agree            2.616e-14  ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: marginal\nDeviance:              8.071819\nPearson chi-squared:   8.168769\nDissimilarity index:   1.767308%\nResidual df:           10\nBIC:                   -73.35754\nAIC:                   -11.92818\n\n\nこれは先ほど求めた周辺重みづけの結果（内在的連関パラメータが0.25673）と一致する．"
  },
  {
    "objectID": "3-Chapter_2.html#表2.3b",
    "href": "3-Chapter_2.html#表2.3b",
    "title": "2  第2章",
    "section": "2.19 表2.3B",
    "text": "2.19 表2.3B\n\n# コントラストを確認\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n\"contr.treatment\" \"contr.treatment\" \n\n# default\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\n\nanoasを用いるときにはのエラーを無くすために行列はラベルを用いない．\n\nFreq <- c(518,  95, 6, 35, 5,\n         　 81,  67, 4, 49, 2,\n          452,1003,67,630, 5,\n           71, 157,37,562,12)\n\n# データを表形式に変換\ntab_2.3B <- matrix(Freq, \n                   nrow = 4,\n                   ncol = 5,\n                   byrow = TRUE) %>% as.table()\ntab_2.3B\n\n     A    B    C    D    E\nA  518   95    6   35    5\nB   81   67    4   49    2\nC  452 1003   67  630    5\nD   71  157   37  562   12\n\n# 度数，行変数，列変数からなる集計データを作成\nEduc <- gl(n = 4, k = 5)\nOcc <- gl(n = 5, k = 1, length = 20)\nfreq_tab_2.3B <- tibble(Freq, Educ, Occ)\nfreq_tab_2.3B\n\n# A tibble: 20 × 3\n    Freq Educ  Occ  \n   <dbl> <fct> <fct>\n 1   518 1     1    \n 2    95 1     2    \n 3     6 1     3    \n 4    35 1     4    \n 5     5 1     5    \n 6    81 2     1    \n 7    67 2     2    \n 8     4 2     3    \n 9    49 2     4    \n10     2 2     5    \n11   452 3     1    \n12  1003 3     2    \n13    67 3     3    \n14   630 3     4    \n15     5 3     5    \n16    71 4     1    \n17   157 4     2    \n18    37 4     3    \n19   562 4     4    \n20    12 4     5    \n\n# 行変数と列変数の整数値を作成\nfreq_tab_2.3B %<>% \n  mutate(Rscore = as.numeric(Educ),\n         Cscore = as.numeric(Occ))\nfreq_tab_2.3B\n\n# A tibble: 20 × 5\n    Freq Educ  Occ   Rscore Cscore\n   <dbl> <fct> <fct>  <dbl>  <dbl>\n 1   518 1     1          1      1\n 2    95 1     2          1      2\n 3     6 1     3          1      3\n 4    35 1     4          1      4\n 5     5 1     5          1      5\n 6    81 2     1          2      1\n 7    67 2     2          2      2\n 8     4 2     3          2      3\n 9    49 2     4          2      4\n10     2 2     5          2      5\n11   452 3     1          3      1\n12  1003 3     2          3      2\n13    67 3     3          3      3\n14   630 3     4          3      4\n15     5 3     5          3      5\n16    71 4     1          4      1\n17   157 4     2          4      2\n18    37 4     3          4      3\n19   562 4     4          4      4\n20    12 4     5          4      5\n\n\n\nO <- freq_tab_2.3B %>% \n  gnm(Freq ~ Educ + Occ, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nU <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nR <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Educ:Cscore, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Occ:Rscore, \n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nRplusC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Educ:Cscore + \n        Occ:Rscore,\n      constrain = c(12,16), \n      constrainTo = c(0,0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.............................\nDone\n\nUplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ +\n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.\nDone\n\nRplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................................\nDone\n\nCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\n\nRplusCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\n\nRC2 <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        instances(Mult(1, Educ, Occ),2),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................\nDone"
  },
  {
    "objectID": "3-Chapter_2.html#表2.6a",
    "href": "3-Chapter_2.html#表2.6a",
    "title": "2  第2章",
    "section": "2.20 表2.6A",
    "text": "2.20 表2.6A\n表2.6Aを再現する．\n\nmodels <- list()\nmodels[[1]] <- model.summary(O)\nmodels[[2]] <- model.summary(U)\nmodels[[3]] <- model.summary(R)\nmodels[[4]] <- model.summary(C)\nmodels[[5]] <- model.summary(RplusC)\nmodels[[6]] <- model.summary(RC)\nmodels[[7]] <- model.summary(UplusRC)\nmodels[[8]] <- model.summary(RplusRC)\nmodels[[9]] <- model.summary(CplusRC)\nmodels[[10]] <- model.summary(RplusCplusRC)\nmodels[[11]] <- model.summary(RC2)\nmodels %>% bind_rows()\n\n# A tibble: 11 × 6\n   `Model Description`    df       L2    BIC   Delta         p\n   <chr>               <int>    <dbl>  <dbl>   <dbl>     <dbl>\n 1 O                      12 1373.    1274.  23.9    8.44e-287\n 2 U                      11  244.     153.   8.54   4.99e- 46\n 3 R                       9  206.     132.   7.38   1.85e- 39\n 4 C                       8  155.      89.3  7.47   1.48e- 29\n 5 RplusC                  6   91.6     42.1  4.63   1.40e- 17\n 6 RC                      6  125.      75.5  6.44   1.41e- 24\n 7 UplusRC                 5   17.6    -23.7  1.52   3.49e-  3\n 8 RplusRC                 4    6.94   -26.1  0.832  1.39e-  1\n 9 CplusRC                 3   11.4    -13.4  1.01   9.72e-  3\n10 RplusCplusRC            2    0.278  -16.2  0.0538 8.70e-  1\n11 RC2                     2    0.600  -15.9  0.0935 7.41e-  1"
  },
  {
    "objectID": "3-Chapter_2.html#表2.6b",
    "href": "3-Chapter_2.html#表2.6b",
    "title": "2  第2章",
    "section": "2.21 表2.6B",
    "text": "2.21 表2.6B\n\n# Table 2.4 Panel B\nbind_rows(model_comparison(1,6),\n          model_comparison(6,11),\n          model_comparison(11),\n          model_comparison(1))\n\n# A tibble: 4 × 3\n  `Model Used`    df       L2\n  <chr>        <int>    <dbl>\n1 1-6              6 1248.   \n2 6-11             4  124.   \n3 11               2    0.600\n4 1               12 1373."
  },
  {
    "objectID": "3-Chapter_2.html#表2.6c",
    "href": "3-Chapter_2.html#表2.6c",
    "title": "2  第2章",
    "section": "2.22 表2.6C",
    "text": "2.22 表2.6C\n\n# Table 2.4 Panel C\nbind_rows(model_comparison(1,2),\n          model_comparison(2,6),\n          model_comparison(6,10),\n          model_comparison(10),\n          model_comparison(1))\n\n# A tibble: 5 × 3\n  `Model Used`    df       L2\n  <chr>        <int>    <dbl>\n1 1-2              1 1129.   \n2 2-6              5  119.   \n3 6-10             4  125.   \n4 10               2    0.278\n5 1               12 1373."
  },
  {
    "objectID": "3-Chapter_2.html#表2.7a",
    "href": "3-Chapter_2.html#表2.7a",
    "title": "2  第2章",
    "section": "2.23 表2.7A",
    "text": "2.23 表2.7A\n\nset.seed(1234)\nUplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..............\nDone\n\nsummary(UplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Cscore + Mult(1, Educ, \n    Occ), family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.0893  -0.5631   0.1321   0.7372   1.9761  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             5.49123         NA      NA       NA    \nEduc2                  -2.07045         NA      NA       NA    \nEduc3                  -1.00877         NA      NA       NA    \nEduc4                  -3.55473         NA      NA       NA    \nOcc2                   -1.06909         NA      NA       NA    \nOcc3                   -5.17113         NA      NA       NA    \nOcc4                   -4.53939         NA      NA       NA    \nOcc5                  -10.91018         NA      NA       NA    \nRscore:Cscore           0.55212    0.03429    16.1   <2e-16 ***\nMult(., Educ, Occ).     0.05379         NA      NA       NA    \nMult(1, ., Occ).Educ1  57.38879         NA      NA       NA    \nMult(1, ., Occ).Educ2  28.47707         NA      NA       NA    \nMult(1, ., Occ).Educ3 -10.70009         NA      NA       NA    \nMult(1, ., Occ).Educ4   9.22301         NA      NA       NA    \nMult(1, Educ, .).Occ1   0.06067         NA      NA       NA    \nMult(1, Educ, .).Occ2  -0.31188         NA      NA       NA    \nMult(1, Educ, .).Occ3   0.01526         NA      NA       NA    \nMult(1, Educ, .).Occ4   0.19408         NA      NA       NA    \nMult(1, Educ, .).Occ5   1.34889         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 17.602 on 5 degrees of freedom\nAIC: 163.98\n\nNumber of iterations: 71\n\n# 変数と係数と係数の順番を表示\npickCoef(UplusRC, \"[.]Educ\")\n\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ3 \n                   11                    12                    13 \nMult(1, ., Occ).Educ4 \n                   14 \n\npickCoef(UplusRC, \"[.]Occ\")\n\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ3 \n                   15                    16                    17 \nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ5 \n                   18                    19 \n\ndata.frame(var = names(UplusRC$coefficients),\n           estimate = UplusRC$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var     estimate number\n(Intercept)                     (Intercept)   5.49123206      1\nEduc2                                 Educ2  -2.07045034      2\nEduc3                                 Educ3  -1.00877122      3\nEduc4                                 Educ4  -3.55472593      4\nOcc2                                   Occ2  -1.06909237      5\nOcc3                                   Occ3  -5.17112951      6\nOcc4                                   Occ4  -4.53939355      7\nOcc5                                   Occ5 -10.91018443      8\nRscore:Cscore                 Rscore:Cscore   0.55211791      9\nMult(., Educ, Occ).     Mult(., Educ, Occ).   0.05378691     10\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1  57.38878762     11\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  28.47707090     12\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -10.70009235     13\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4   9.22300628     14\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1   0.06066883     15\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2  -0.31187524     16\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3   0.01525644     17\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4   0.19407628     18\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5   1.34889132     19\n\nmu <- getContrasts(UplusRC, \n                   pickCoef(UplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(UplusRC, \n                   pickCoef(UplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# 中心化制約と尺度化制約の確認\nsum(mu$qvframe[,1])\n\n[1] -2.775558e-17\n\nsum(mu$qvframe[,1]^2)\n\n[1] 1\n\nsum(nu$qvframe[,1])\n\n[1] 0\n\nsum(nu$qvframe[,1]^2)\n\n[1] 1\n\n# 行スコアと列スコアの両端の値を固定する\ncon <- c(mu$qvframe[,1][c(1,4)],nu$qvframe[,1][c(1,5)])\n\nset.seed(1234567)\nUplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      constrain = c(11,14,15,19),\n      constrainTo = con,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.........\nDone\n\nsummary(UplusRC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\",\n                      Variable))\n\n                Variable    Estimate Std..Error   z.value     Pr...z..\n1          Rscore:Cscore  0.55211791 0.03429436 16.099379 2.576758e-58\n2    Mult(., Educ, Occ).  3.43558976 0.61932837  5.547283 2.901428e-08\n3  Mult(1, ., Occ).Educ1  0.72242916         NA        NA           NA\n4  Mult(1, ., Occ).Educ2  0.14690561 0.13431003  1.093780 2.740515e-01\n5  Mult(1, ., Occ).Educ3 -0.63296437 0.13149187 -4.813715 1.481501e-06\n6  Mult(1, ., Occ).Educ4 -0.23637040         NA        NA           NA\n7  Mult(1, Educ, .).Occ1 -0.15787324         NA        NA           NA\n8  Mult(1, Educ, .).Occ2 -0.45087063 0.05888770 -7.656448 1.911463e-14\n9  Mult(1, Educ, .).Occ3 -0.19358905 0.08174718 -2.368143 1.787760e-02\n10 Mult(1, Educ, .).Occ4 -0.05295134 0.05110102 -1.036209 3.001047e-01\n11 Mult(1, Educ, .).Occ5  0.85528425         NA        NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7b",
    "href": "3-Chapter_2.html#表2.7b",
    "title": "2  第2章",
    "section": "2.24 表2.7B",
    "text": "2.24 表2.7B\n\nRplusRC.un <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............................\nDone\n\nsummary(RplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Mult(1, Educ, \n    Occ), family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.96462  -0.24301  -0.05231   0.31330   1.21311  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)             7.8043         NA      NA       NA\nEduc2                  -2.5496         NA      NA       NA\nEduc3                  -1.0924         NA      NA       NA\nEduc4                  -3.6305         NA      NA       NA\nOcc2                    1.0437         NA      NA       NA\nOcc3                   -0.7855         NA      NA       NA\nOcc4                    2.0809         NA      NA       NA\nOcc5                   -1.8534         NA      NA       NA\nEduc1:Cscore           -1.7432         NA      NA       NA\nEduc2:Cscore           -0.9182         NA      NA       NA\nEduc3:Cscore           -0.5398         NA      NA       NA\nEduc4:Cscore            0.0000         NA      NA       NA\nMult(., Educ, Occ).    -0.4213         NA      NA       NA\nMult(1, ., Occ).Educ1  -2.0586         NA      NA       NA\nMult(1, ., Occ).Educ2  -0.7258         NA      NA       NA\nMult(1, ., Occ).Educ3   0.5605         NA      NA       NA\nMult(1, ., Occ).Educ4  -0.2104         NA      NA       NA\nMult(1, Educ, .).Occ1   0.2200         NA      NA       NA\nMult(1, Educ, .).Occ2  -0.9616         NA      NA       NA\nMult(1, Educ, .).Occ3   0.1953         NA      NA       NA\nMult(1, Educ, .).Occ4   0.7768         NA      NA       NA\nMult(1, Educ, .).Occ5   4.8551         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 6.9359 on 4 degrees of freedom\nAIC: 155.31\n\nNumber of iterations: 29\n\npickCoef(RplusRC.un, \"[:]Cscore\")\n\nEduc1:Cscore Educ2:Cscore Educ3:Cscore Educ4:Cscore \n           9           10           11           12 \n\nRplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations........................................\nDone\n\nsummary(RplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Mult(1, Educ, \n    Occ), constrain = c(9, 12), constrainTo = c(0, 0), family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.96462  -0.24301  -0.05231   0.31330   1.21311  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             5.0338         NA      NA       NA    \nEduc2                  -0.4417         NA      NA       NA    \nEduc3                   3.0501         NA      NA       NA    \nEduc4                  -0.7074         NA      NA       NA    \nOcc2                    0.6767         NA      NA       NA    \nOcc3                   -1.1329         NA      NA       NA    \nOcc4                    1.6580         NA      NA       NA    \nOcc5                   -1.7737         NA      NA       NA    \nEduc1:Cscore            0.0000         NA      NA       NA    \nEduc2:Cscore           -0.4321     0.2210  -1.955   0.0506 .  \nEduc3:Cscore           -1.2670     0.1931  -6.562 5.31e-11 ***\nEduc4:Cscore            0.0000         NA      NA       NA    \nMult(., Educ, Occ).    -1.5191         NA      NA       NA    \nMult(1, ., Occ).Educ1   4.6510         NA      NA       NA    \nMult(1, ., Occ).Educ2   0.9307         NA      NA       NA    \nMult(1, ., Occ).Educ3  -2.6602         NA      NA       NA    \nMult(1, ., Occ).Educ4  -0.5081         NA      NA       NA    \nMult(1, Educ, .).Occ1  -0.1724         NA      NA       NA    \nMult(1, Educ, .).Occ2   0.1674         NA      NA       NA    \nMult(1, Educ, .).Occ3   0.2749         NA      NA       NA    \nMult(1, Educ, .).Occ4   0.4395         NA      NA       NA    \nMult(1, Educ, .).Occ5   0.2568         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 6.9359 on 4 degrees of freedom\nAIC: 155.31\n\nNumber of iterations: 40\n\n# 変数と係数と係数の順番を表示\npickCoef(RplusRC.un, \"[.]Educ\")\n\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ3 \n                   14                    15                    16 \nMult(1, ., Occ).Educ4 \n                   17 \n\npickCoef(RplusRC.un, \"[.]Occ\")\n\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ3 \n                   18                    19                    20 \nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ5 \n                   21                    22 \n\ndata.frame(var = names(RplusRC$coefficients),\n           estimate = RplusRC$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var   estimate number\n(Intercept)                     (Intercept)  5.0338134      1\nEduc2                                 Educ2 -0.4416984      2\nEduc3                                 Educ3  3.0500999      3\nEduc4                                 Educ4 -0.7074330      4\nOcc2                                   Occ2  0.6766646      5\nOcc3                                   Occ3 -1.1329222      6\nOcc4                                   Occ4  1.6579720      7\nOcc5                                   Occ5 -1.7736652      8\nEduc1:Cscore                   Educ1:Cscore         NA      9\nEduc2:Cscore                   Educ2:Cscore -0.4320760     10\nEduc3:Cscore                   Educ3:Cscore -1.2669500     11\nEduc4:Cscore                   Educ4:Cscore         NA     12\nMult(., Educ, Occ).     Mult(., Educ, Occ). -1.5191478     13\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1  4.6509709     14\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  0.9307366     15\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -2.6601848     16\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4 -0.5080538     17\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1 -0.1724067     18\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2  0.1674123     19\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3  0.2748827     20\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4  0.4395333     21\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5  0.2567545     22\n\nmu <- getContrasts(RplusRC, \n                   pickCoef(RplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(RplusRC, \n                   pickCoef(RplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nRplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,14,17,18,22),\n      constrainTo = con,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................................\nDone\n\nsummary(RplusRC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable    Estimate Std..Error    z.value     Pr...z..\n1           Educ1:Cscore  0.00000000         NA         NA           NA\n2           Educ2:Cscore -0.43207600  0.2209849 -1.9552282 5.055614e-02\n3           Educ3:Cscore -1.26695003  0.1930731 -6.5620238 5.308234e-11\n4           Educ4:Cscore  0.00000000         NA         NA           NA\n5    Mult(., Educ, Occ). -3.67046405  0.5474332 -6.7048620 2.015968e-11\n6  Mult(1, ., Occ).Educ1  0.75983648         NA         NA           NA\n7  Mult(1, ., Occ).Educ2  0.06145542  0.1367987  0.4492399 6.532586e-01\n8  Mult(1, ., Occ).Educ3 -0.61265036  0.1325427 -4.6222852 3.795357e-06\n9  Mult(1, ., Occ).Educ4 -0.20864153         NA         NA           NA\n10 Mult(1, Educ, .).Occ1 -0.80614447         NA         NA           NA\n11 Mult(1, Educ, .).Occ2 -0.05693272  0.1225191 -0.4646846 6.421573e-01\n12 Mult(1, Educ, .).Occ3  0.18001127  0.1630841  1.1037941 2.696825e-01\n13 Mult(1, Educ, .).Occ4  0.54302264  0.2004941  2.7084221 6.760398e-03\n14 Mult(1, Educ, .).Occ5  0.14004328         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7c",
    "href": "3-Chapter_2.html#表2.7c",
    "title": "2  第2章",
    "section": "2.25 表2.7C",
    "text": "2.25 表2.7C\n\nCplusRC.un <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n\nsummary(CplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Occ + Mult(1, Educ, \n    Occ), family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98938  -0.14103  -0.01486   0.18280   2.20453  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)            7.27665         NA      NA       NA\nEduc2                 -0.42020         NA      NA       NA\nEduc3                  2.28710         NA      NA       NA\nEduc4                  1.48088         NA      NA       NA\nOcc2                  -1.68636         NA      NA       NA\nOcc3                  -5.70983         NA      NA       NA\nOcc4                  -4.19924         NA      NA       NA\nOcc5                  -7.11952         NA      NA       NA\nOcc1:Rscore           -1.14020         NA      NA       NA\nOcc2:Rscore           -0.42134         NA      NA       NA\nOcc3:Rscore            0.12982         NA      NA       NA\nOcc4:Rscore            0.40748         NA      NA       NA\nOcc5:Rscore            0.00000         NA      NA       NA\nMult(., Educ, Occ).   -3.12869         NA      NA       NA\nMult(1, ., Occ).Educ1  0.69396         NA      NA       NA\nMult(1, ., Occ).Educ2  0.23360         NA      NA       NA\nMult(1, ., Occ).Educ3 -0.35305         NA      NA       NA\nMult(1, ., Occ).Educ4  0.38680         NA      NA       NA\nMult(1, Educ, .).Occ1 -0.04321         NA      NA       NA\nMult(1, Educ, .).Occ2  0.27107         NA      NA       NA\nMult(1, Educ, .).Occ3 -0.03610         NA      NA       NA\nMult(1, Educ, .).Occ4 -0.11942         NA      NA       NA\nMult(1, Educ, .).Occ5 -0.70227         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 11.405 on 3 degrees of freedom\nAIC: 161.78\n\nNumber of iterations: 68\n\npickCoef(CplusRC.un, \"[:]Rscore\")\n\nOcc1:Rscore Occ2:Rscore Occ3:Rscore Occ4:Rscore Occ5:Rscore \n          9          10          11          12          13 \n\nCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,13),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................................\nDone\n\nsummary(CplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Occ + Mult(1, Educ, \n    Occ), constrain = c(9, 13), constrainTo = c(0, 0), family = poisson, \n    data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98938  -0.14103  -0.01486   0.18280   2.20453  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            6.20454         NA      NA       NA    \nEduc2                 -1.63681         NA      NA       NA    \nEduc3                 -0.14388         NA      NA       NA    \nEduc4                 -2.18819         NA      NA       NA    \nOcc2                  -2.74715         NA      NA       NA    \nOcc3                  -5.73384         NA      NA       NA    \nOcc4                  -3.94201         NA      NA       NA    \nOcc5                  -4.89503         NA      NA       NA    \nOcc1:Rscore            0.00000         NA      NA       NA    \nOcc2:Rscore            1.26259    0.16970   7.440 1.00e-13 ***\nOcc3:Rscore            1.28232    0.20937   6.125 9.08e-10 ***\nOcc4:Rscore            1.41583    0.09054  15.638  < 2e-16 ***\nOcc5:Rscore            0.00000         NA      NA       NA    \nMult(., Educ, Occ).   -0.17540         NA      NA       NA    \nMult(1, ., Occ).Educ1 -0.72102         NA      NA       NA    \nMult(1, ., Occ).Educ2 -1.11818         NA      NA       NA    \nMult(1, ., Occ).Educ3 -0.97365         NA      NA       NA    \nMult(1, ., Occ).Educ4 -6.51841         NA      NA       NA    \nMult(1, Educ, .).Occ1  0.20351         NA      NA       NA    \nMult(1, Educ, .).Occ2 -1.10357         NA      NA       NA    \nMult(1, Educ, .).Occ3  0.17394         NA      NA       NA    \nMult(1, Educ, .).Occ4  0.52047         NA      NA       NA    \nMult(1, Educ, .).Occ5  2.94447         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 11.405 on 3 degrees of freedom\nAIC: 161.78\n\nNumber of iterations: 46\n\nsummary(CplusRC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable   Estimate Std..Error   z.value     Pr...z..\n1            Occ1:Rscore  0.0000000         NA        NA           NA\n2            Occ2:Rscore  1.2625901  0.1696974  7.440245 1.004990e-13\n3            Occ3:Rscore  1.2823194  0.2093667  6.124752 9.082487e-10\n4            Occ4:Rscore  1.4158283  0.0905404 15.637531 4.040916e-55\n5            Occ5:Rscore  0.0000000         NA        NA           NA\n6    Mult(., Educ, Occ). -0.1754033         NA        NA           NA\n7  Mult(1, ., Occ).Educ1 -0.7210218         NA        NA           NA\n8  Mult(1, ., Occ).Educ2 -1.1181754         NA        NA           NA\n9  Mult(1, ., Occ).Educ3 -0.9736536         NA        NA           NA\n10 Mult(1, ., Occ).Educ4 -6.5184053         NA        NA           NA\n11 Mult(1, Educ, .).Occ1  0.2035117         NA        NA           NA\n12 Mult(1, Educ, .).Occ2 -1.1035705         NA        NA           NA\n13 Mult(1, Educ, .).Occ3  0.1739351         NA        NA           NA\n14 Mult(1, Educ, .).Occ4  0.5204683         NA        NA           NA\n15 Mult(1, Educ, .).Occ5  2.9444684         NA        NA           NA\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(CplusRC$coefficients),\n           estimate = CplusRC$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var   estimate number\n(Intercept)                     (Intercept)  6.2045374      1\nEduc2                                 Educ2 -1.6368135      2\nEduc3                                 Educ3 -0.1438756      3\nEduc4                                 Educ4 -2.1881854      4\nOcc2                                   Occ2 -2.7471517      5\nOcc3                                   Occ3 -5.7338368      6\nOcc4                                   Occ4 -3.9420090      7\nOcc5                                   Occ5 -4.8950260      8\nOcc1:Rscore                     Occ1:Rscore         NA      9\nOcc2:Rscore                     Occ2:Rscore  1.2625901     10\nOcc3:Rscore                     Occ3:Rscore  1.2823194     11\nOcc4:Rscore                     Occ4:Rscore  1.4158283     12\nOcc5:Rscore                     Occ5:Rscore         NA     13\nMult(., Educ, Occ).     Mult(., Educ, Occ). -0.1754033     14\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1 -0.7210218     15\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2 -1.1181754     16\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -0.9736536     17\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4 -6.5184053     18\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1  0.2035117     19\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -1.1035705     20\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3  0.1739351     21\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4  0.5204683     22\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5  2.9444684     23\n\nmu <- getContrasts(CplusRC, \n                   pickCoef(CplusRC, \"[.]Educ\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(CplusRC, \n                   pickCoef(CplusRC, \"[.]Occ\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,13,15,18,19,23),\n      constrainTo = con,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n\nsummary(CplusRC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable     Estimate Std..Error   z.value     Pr...z..\n1            Occ1:Rscore  0.000000000         NA        NA           NA\n2            Occ2:Rscore  1.262590058 0.16969738  7.440245 1.004990e-13\n3            Occ3:Rscore  1.282319390 0.20936674  6.124752 9.082487e-10\n4            Occ4:Rscore  1.415828283 0.09054040 15.637531 4.040916e-55\n5            Occ5:Rscore  0.000000000         NA        NA           NA\n6    Mult(., Educ, Occ). -2.509132039 0.47337666 -5.300498 1.154873e-07\n7  Mult(1, ., Occ).Educ1  0.332914652         NA        NA           NA\n8  Mult(1, ., Occ).Educ2  0.250882838 0.17043562  1.472009 1.410183e-01\n9  Mult(1, ., Occ).Educ3  0.280733721 0.25875316  1.084948 2.779447e-01\n10 Mult(1, ., Occ).Educ4 -0.864531211         NA        NA           NA\n11 Mult(1, Educ, .).Occ1 -0.116510615         NA        NA           NA\n12 Mult(1, Educ, .).Occ2 -0.558888360 0.15090381 -3.703607 2.125557e-04\n13 Mult(1, Educ, .).Occ3 -0.126520705 0.12280113 -1.030289 3.028742e-01\n14 Mult(1, Educ, .).Occ4 -0.009237675 0.06533009 -0.141400 8.875539e-01\n15 Mult(1, Educ, .).Occ5  0.811157355         NA        NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7d",
    "href": "3-Chapter_2.html#表2.7d",
    "title": "2  第2章",
    "section": "2.26 表2.7D",
    "text": "2.26 表2.7D\nまずは行効果と列効果のパラメータに対して0という制約を課し，その上で推定した行スコアと列スコアを正規化し，再度推定する．\n\nRplusCplusRC.un <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations................\nDone\n\nsummary(RplusCplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Rscore:Occ + \n    Mult(1, Educ, Occ), family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.46856  -0.01129  -0.00160   0.02313   0.20690  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)\n(Intercept)             7.74293         NA      NA       NA\nEduc2                   3.14029         NA      NA       NA\nEduc3                  10.24787         NA      NA       NA\nEduc4                  12.41837         NA      NA       NA\nOcc2                   -5.57138         NA      NA       NA\nOcc3                  -12.20149         NA      NA       NA\nOcc4                  -13.84551         NA      NA       NA\nOcc5                  -18.60224         NA      NA       NA\nEduc1:Cscore            2.41445         NA      NA       NA\nEduc2:Cscore            1.71183         NA      NA       NA\nEduc3:Cscore            0.57802         NA      NA       NA\nEduc4:Cscore            0.00000         NA      NA       NA\nOcc1:Rscore            -4.06530         NA      NA       NA\nOcc2:Rscore            -2.30050         NA      NA       NA\nOcc3:Rscore            -1.09826         NA      NA       NA\nOcc4:Rscore             0.00000         NA      NA       NA\nOcc5:Rscore             0.00000         NA      NA       NA\nMult(., Educ, Occ).    -5.48724         NA      NA       NA\nMult(1, ., Occ).Educ1  -0.10945         NA      NA       NA\nMult(1, ., Occ).Educ2   0.04996         NA      NA       NA\nMult(1, ., Occ).Educ3   0.17934         NA      NA       NA\nMult(1, ., Occ).Educ4  -0.25103         NA      NA       NA\nMult(1, Educ, .).Occ1   0.26319         NA      NA       NA\nMult(1, Educ, .).Occ2  -0.24080         NA      NA       NA\nMult(1, Educ, .).Occ3   0.03257         NA      NA       NA\nMult(1, Educ, .).Occ4   0.01140         NA      NA       NA\nMult(1, Educ, .).Occ5   0.67203         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 0.27843 on 2 degrees of freedom\nAIC: 152.66\n\nNumber of iterations: 16\n\npickCoef(RplusCplusRC.un, \"[:]Cscore\")\n\nEduc1:Cscore Educ2:Cscore Educ3:Cscore Educ4:Cscore \n           9           10           11           12 \n\npickCoef(RplusCplusRC.un, \"[:]Rscore\")\n\nOcc1:Rscore Occ2:Rscore Occ3:Rscore Occ4:Rscore Occ5:Rscore \n         13          14          15          16          17 \n\nRplusCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,13,14,17), \n      constrainTo = c(0,0,0,0,0),\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............................\nDone\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(CplusRC$coefficients),\n           estimate = CplusRC$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var     estimate number\n(Intercept)                     (Intercept)  6.132951036      1\nEduc2                                 Educ2 -1.598655285      2\nEduc3                                 Educ3 -0.119602932      3\nEduc4                                 Educ4 -1.631176445      4\nOcc2                                   Occ2 -3.281987830      5\nOcc3                                   Occ3 -5.745938986      6\nOcc4                                   Occ4 -3.812315688      7\nOcc5                                   Occ5 -3.773472310      8\nOcc1:Rscore                     Occ1:Rscore           NA      9\nOcc2:Rscore                     Occ2:Rscore  1.262590058     10\nOcc3:Rscore                     Occ3:Rscore  1.282319390     11\nOcc4:Rscore                     Occ4:Rscore  1.415828283     12\nOcc5:Rscore                     Occ5:Rscore           NA     13\nMult(., Educ, Occ).     Mult(., Educ, Occ). -2.509132039     14\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1           NA     15\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  0.250882838     16\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3  0.280733721     17\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4           NA     18\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1           NA     19\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -0.558888360     20\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3 -0.126520705     21\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4 -0.009237675     22\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5           NA     23\n\nmu <- getContrasts(RplusCplusRC, \n                   pickCoef(RplusCplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(RplusCplusRC,\n                   pickCoef(RplusCplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,0,0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nRplusCplusRC <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,13,14,17,19,22,23,27), \n      constrainTo = con,\n      family = poisson, \n      data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................\nDone\n\nmu\n\n                         Estimate Std. Error\nMult(1, ., Occ).Educ1  0.76639941 0.03714637\nMult(1, ., Occ).Educ2  0.05505913 0.08952794\nMult(1, ., Occ).Educ3 -0.60073372 0.04744381\nMult(1, ., Occ).Educ4 -0.22072481 0.06764890\n\nnu\n\n                         Estimate Std. Error\nMult(1, Educ, .).Occ1  0.83832072 0.02535129\nMult(1, Educ, .).Occ2 -0.04397713 0.08855421\nMult(1, Educ, .).Occ3 -0.11946443 0.09158773\nMult(1, Educ, .).Occ4 -0.50065982 0.06550415\nMult(1, Educ, .).Occ5 -0.17421935 0.12622465\n\nsummary(RplusCplusRC)$coefficients %>%\n  data.frame() %>%\n  rownames_to_column(\"Variable\") %>%\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable    Estimate Std..Error    z.value     Pr...z..\n1           Educ1:Cscore  0.00000000         NA         NA           NA\n2           Educ2:Cscore -0.29016794  0.1835938 -1.5804884 1.139951e-01\n3           Educ3:Cscore -0.95452353  0.2168230 -4.4023158 1.071015e-05\n4           Educ4:Cscore  0.00000000         NA         NA           NA\n5            Occ1:Rscore  0.00000000         NA         NA           NA\n6            Occ2:Rscore  0.00000000         NA         NA           NA\n7            Occ3:Rscore  0.39725281  0.1673266  2.3741161 1.759102e-02\n8            Occ4:Rscore  0.32684292  0.1614939  2.0238715 4.298337e-02\n9            Occ5:Rscore  0.00000000         NA         NA           NA\n10   Mult(., Educ, Occ).  2.85715993  0.5343817  5.3466654 8.958940e-08\n11 Mult(1, ., Occ).Educ1  0.76639941         NA         NA           NA\n12 Mult(1, ., Occ).Educ2  0.05505913  0.1291228  0.4264091 6.698098e-01\n13 Mult(1, ., Occ).Educ3 -0.60073372  0.1297703 -4.6292078 3.670672e-06\n14 Mult(1, ., Occ).Educ4 -0.22072481         NA         NA           NA\n15 Mult(1, Educ, .).Occ1  0.83832072         NA         NA           NA\n16 Mult(1, Educ, .).Occ2 -0.04397713  0.1677272 -0.2621944 7.931715e-01\n17 Mult(1, Educ, .).Occ3 -0.11946443  0.1842187 -0.6484923 5.166666e-01\n18 Mult(1, Educ, .).Occ4 -0.50065982  0.2149854 -2.3288081 1.986923e-02\n19 Mult(1, Educ, .).Occ5 -0.17421935         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7e",
    "href": "3-Chapter_2.html#表2.7e",
    "title": "2  第2章",
    "section": "2.27 表2.7E",
    "text": "2.27 表2.7E\nWongのサポートページにあるように，gnmを用いてRC(2)の係数を推定することは難しい．ここではKateri, Maria. 2014. {¥it Contingency Table Analysis: Methods and Implementation Using R}. New York: Birkhäuser. のsupportページにあるプログラムを使用して係数を求める．\n\\(M > 1\\)のRC(M)を推定するためにはgnmのinstancesを用いる． 今はinstances = 2としており，RC(2)を用いている． なお，式(2.35)のように\\(\\phi\\)は推定されない． これらスコアは求まるものの，直交という次元間制約が課されてない． そこで，特異値分解（SVD: singular value decomposition）によって行スコアと列スコアのそれぞれが次元間で直行するような変換を行う．\nまず次元間制約が課されてない行スコアの行列（\\(I\\times m\\)）と列スコアの行列（\\(J\\times m\\)）の積を求め，モデル化での2元交互作用パラメータを求める．\n\nRC2 <- freq_tab_2.3B %>%\n  gnm(Freq ~ Educ + Occ + \n        instances(Mult(Educ, Occ), instances = 2),\n      family = poisson, data = ., \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\n\nsummary(RC2)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(Educ, Occ), \n    instances = 2), family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-0.631356  -0.030234  -0.004363   0.050323   0.320666  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)\n(Intercept)                   5.08405         NA      NA       NA\nEduc2                        -0.88326         NA      NA       NA\nEduc3                         1.08707         NA      NA       NA\nEduc4                         0.33875         NA      NA       NA\nOcc2                          0.40057         NA      NA       NA\nOcc3                         -2.18119         NA      NA       NA\nOcc4                          0.06672         NA      NA       NA\nOcc5                         -4.15751         NA      NA       NA\nMult(., Occ, inst = 1).Educ1 -3.75327         NA      NA       NA\nMult(., Occ, inst = 1).Educ2 -0.37421         NA      NA       NA\nMult(., Occ, inst = 1).Educ3 -0.12043         NA      NA       NA\nMult(., Occ, inst = 1).Educ4  5.50294         NA      NA       NA\nMult(Educ, ., inst = 1).Occ1 -0.23246         NA      NA       NA\nMult(Educ, ., inst = 1).Occ2 -0.05608         NA      NA       NA\nMult(Educ, ., inst = 1).Occ3  0.12089         NA      NA       NA\nMult(Educ, ., inst = 1).Occ4  0.21134         NA      NA       NA\nMult(Educ, ., inst = 1).Occ5  0.13393         NA      NA       NA\nMult(., Occ, inst = 2).Educ1 -1.38606         NA      NA       NA\nMult(., Occ, inst = 2).Educ2 -0.52797         NA      NA       NA\nMult(., Occ, inst = 2).Educ3  0.40562         NA      NA       NA\nMult(., Occ, inst = 2).Educ4 -0.55732         NA      NA       NA\nMult(Educ, ., inst = 2).Occ1 -0.21148         NA      NA       NA\nMult(Educ, ., inst = 2).Occ2  0.82021         NA      NA       NA\nMult(Educ, ., inst = 2).Occ3  0.54578         NA      NA       NA\nMult(Educ, ., inst = 2).Occ4  0.57577         NA      NA       NA\nMult(Educ, ., inst = 2).Occ5 -0.87947         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 0.6001 on 2 degrees of freedom\nAIC: 152.98\n\nNumber of iterations: 54\n\nRCmodel_coef <- function(RCmodel, row, col, m, data){\n  NI <- RCmodel$xlevels[[1]] %>% length()\n  NJ <- RCmodel$xlevels[[2]] %>% length()\n  iflag <- 0\n  y <- length(RCmodel$y)\n  X <- gl(NI,NJ,length = y)\n  Y <- gl(NJ,1,length = y)\n  IX <- pickCoef(RCmodel, \n                 paste0(\"[.]\",deparse(substitute(row))))\n  IY <- pickCoef(RCmodel,\n                 paste0(\"[.]\",deparse(substitute(col))))\n  X <- RCmodel$coefficients[IX]\n  Y <- RCmodel$coefficients[IY]\n  mu0 <- matrix(X,nrow = NI,ncol = m)\n  nu0 <- matrix(Y,nrow = NJ,ncol = m)\n  mu <- mu0\n  nu <- nu0\n  A <- mu %*% t(nu) # [NI, M] [M. NJ]\n  R1 <- diag(1,NI)\n  C1 <- diag(1,NJ)\n  Rone <- matrix(rep(1,NI^2),nrow = NI)\n  Cone <- matrix(rep(1,NJ^2),nrow = NJ)\n  rowP <- c(rep(1,NI))\n  colP <- c(rep(1,NJ));\n  data <- RC2$model\n  list(y,X,Y,IX,IY,data)\n  if (iflag == 1) {\n    rowP <- with(data, tapply(freq,row,sum)/sum(freq))\n    colP <- with(data, tapply(freq,col,sum)/sum(freq))}\n  DR <- diag(rowP^(-1/2),NI)\n  DC <- diag(colP^(-1/2),NJ)\n  RWsqr <- diag(rowP^(1/2),NI)\n  CWsqr <- diag(colP^(1/2),NJ)\n  RW <- RWsqr^2\n  CW <- CWsqr^2\n  L <- (R1 - (Rone %*% RW)/sum(RW)) %*% A %*% t(C1 - (Cone %*% CW)/sum(CW))\n  phiv <- svd(RWsqr %*% L %*% CWsqr)$d[1:m]\n  mu <- svd(RWsqr %*% L %*% CWsqr)$u[,1:m]\n  nu <- svd(RWsqr %*% L %*% CWsqr)$v[,1:m]\n  mu <- DR %*% mu\n  nu <- DC %*% nu\n  phi <- diag(phiv, m)\n  L2 <- RCmodel$deviance\n  df <- RCmodel$df.residual\n  p.value <- 1 - pchisq(L2,df)\n  fit.freq <- predict(RCmodel, \n                      type = \"response\", \n                      se.fit = TRUE)\n  \n  print(list(model = RCmodel, \n     L2 = L2, \n     df = df,\n     p.value = p.value,\n     obs_freq = summary(RC2)$y, \n     fit.freq = fit.freq,\n     phi = phi, \n     mu = mu, \n     nu = nu,\n     cor(mu) %>% round(3),\n     cor(nu) %>% round(3)))\n  }\n\nRCmodel_coef(RC2, row = Educ, col = Occ, m =  2)\n\n$model\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(Educ, Occ), \n    instances = 2), family = poisson, data = ., tolerance = 1e-12)\n\nCoefficients:\n                 (Intercept)                         Educ2  \n                     5.08405                      -0.88326  \n                       Educ3                         Educ4  \n                     1.08707                       0.33875  \n                        Occ2                          Occ3  \n                     0.40057                      -2.18119  \n                        Occ4                          Occ5  \n                     0.06672                      -4.15751  \nMult(., Occ, inst = 1).Educ1  Mult(., Occ, inst = 1).Educ2  \n                    -3.75327                      -0.37421  \nMult(., Occ, inst = 1).Educ3  Mult(., Occ, inst = 1).Educ4  \n                    -0.12043                       5.50294  \nMult(Educ, ., inst = 1).Occ1  Mult(Educ, ., inst = 1).Occ2  \n                    -0.23246                      -0.05608  \nMult(Educ, ., inst = 1).Occ3  Mult(Educ, ., inst = 1).Occ4  \n                     0.12089                       0.21134  \nMult(Educ, ., inst = 1).Occ5  Mult(., Occ, inst = 2).Educ1  \n                     0.13393                      -1.38606  \nMult(., Occ, inst = 2).Educ2  Mult(., Occ, inst = 2).Educ3  \n                    -0.52797                       0.40562  \nMult(., Occ, inst = 2).Educ4  Mult(Educ, ., inst = 2).Occ1  \n                    -0.55732                      -0.21148  \nMult(Educ, ., inst = 2).Occ2  Mult(Educ, ., inst = 2).Occ3  \n                     0.82021                       0.54578  \nMult(Educ, ., inst = 2).Occ4  Mult(Educ, ., inst = 2).Occ5  \n                     0.57577                      -0.87947  \n\nDeviance:            0.6001022 \nPearson chi-squared: 0.5746549 \nResidual df:         2 \n\n$L2\n[1] 0.6001022\n\n$df\n[1] 2\n\n$p.value\n[1] 0.7407804\n\n$obs_freq\nNULL\n\n$fit.freq\n$fit.freq$fit\n          1           2           3           4           5           6 \n 517.836063   95.414391    5.433736   35.145848    5.169961   81.405000 \n          7           8           9          10          11          12 \n  65.976261    5.398934   48.639687    1.580117  451.846566 1003.387842 \n         13          14          15          16          17          18 \n  66.470016  630.136504    5.159072   70.912370  157.221505   36.697314 \n         19          20 \n 562.077961   12.090850 \n\n$fit.freq$se.fit\n        1         2         3         4         5         6         7         8 \n22.748933  9.732333  2.174395  5.860792  2.230227  8.912865  7.856714  1.044826 \n        9        10        11        12        13        14        15        16 \n 6.616317  0.619348 21.250045 31.666672  8.114913 25.088611  2.233235  8.415482 \n       17        18        19        20 \n12.530867  6.041164 23.703381  3.469126 \n\n$fit.freq$residual.scale\n[1] 1\n\n\n$phi\n         [,1]     [,2]\n[1,] 2.600861 0.000000\n[2,] 0.000000 1.521971\n\n$mu\n            [,1]        [,2]\n[1,]  0.74345129  0.27619989\n[2,]  0.08846472 -0.06103682\n[3,] -0.19984223 -0.77722344\n[4,] -0.63207378  0.56206037\n\n$nu\n            [,1]         [,2]\n[1,]  0.76509960 -0.137064850\n[2,]  0.01966104 -0.548959995\n[3,] -0.32245067 -0.119769392\n[4,] -0.55005650 -0.009934123\n[5,]  0.08774653  0.815728360\n\n[[10]]\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n\n[[11]]\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n\n\nlogmultパッケージのrcによってRC(2)を推定する．まずはanoasで連関分析を行う．表2.6Aと同じ結果になっていることを確認する．正規化だけではなく，次元間制約が課されており，表2.7の結果と一致する．\n\nanoas(tab_2.3B)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\n\n       Res. Df           Res. Dev    Dev./Indep. (%)  Dissim. (%)\nIndep.      12 1373.1757656522454 100.00000000000000 23.861575295\nRC(1)        6  125.0597485501468   9.10733728910112  6.436039098\nRC(2)        2    0.6001022352681   0.04370177877288  0.093516580\nRC(3)        0    0.0000000000002   0.00000000000002  0.000000004\n                      BIC                AIC    Dev. Df\nIndep. 1274.0809153306573 1349.1757656522454      NA NA\nRC(1)    75.5123233893527  113.0597485501468 -1248.1 -6\nRC(2)   -15.9157061516632   -3.3998977647319  -124.5 -4\nRC(3)     0.0000000000002    0.0000000000002    -0.6 -2\n\n\n\nRC2 <- rc(tab_2.3B, \n          nd = 2, \n          weighting = \"none\", \n          se = \"bootstrap\",\n          nreplicates = 1000, \n          ncpus = getOption(\"boot.ncpus\"))\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......\nDone\nComputing bootstrap standard errors...\n.\n\n\nWarning in jackboot(se, ncpus, nreplicates, tab, model, assoc1 =\ngetS3method(\"assoc\", : One model replicate failed and its results will be\nskipped. Standard errors will not be completely accurate. Consider raising the\nvalue of iterMax.\n\nRC2 %>% \n  summary() %$% \n  coefficients %>%\n  data.frame() %>%\n  rownames_to_column(var = \"Parameter\") %>%\n  arrange(Parameter)\n\n       Parameter   Normalized    Adjusted Std..error      Pr...z..\n1           Dim1  2.600861491          NA 1.89405291  1.696987e-01\n2  Dim1:ColumnsA  0.765099600  1.23389040 0.04721223  4.608229e-59\n3  Dim1:ColumnsB  0.019661041  0.03170773 0.04225439  6.417154e-01\n4  Dim1:ColumnsC -0.322450671 -0.52002222 0.10273412  1.697042e-03\n5  Dim1:ColumnsD -0.550056503 -0.88708639 0.07376957  8.890839e-14\n6  Dim1:ColumnsE  0.087746534  0.14151047 0.10128541  3.863095e-01\n7     Dim1:RowsA  0.743451285  1.19897776 0.01923574  0.000000e+00\n8     Dim1:RowsB  0.088464723  0.14266871 0.04049269  2.891024e-02\n9     Dim1:RowsC -0.199842228 -0.32228929 0.02871223  3.398435e-12\n10    Dim1:RowsD -0.632073780 -1.01935718 0.02557586 7.623099e-135\n11          Dim2  1.521970931          NA 4.42944364  7.311447e-01\n12 Dim2:ColumnsA -0.137064849 -0.16909442 0.05000284  6.122613e-03\n13 Dim2:ColumnsB -0.548959996 -0.67724199 0.08516177  1.147764e-10\n14 Dim2:ColumnsC -0.119769391 -0.14775733 0.09574083  2.109436e-01\n15 Dim2:ColumnsD -0.009934124 -0.01225555 0.07118509  8.890128e-01\n16 Dim2:ColumnsE  0.815728359  1.00634928 0.05755149  1.329316e-45\n17    Dim2:RowsA  0.276199889  0.34074279 0.09626414  4.115274e-03\n18    Dim2:RowsB -0.061036818 -0.07530002 0.15411363  6.920676e-01\n19    Dim2:RowsC -0.777223438 -0.95884646 0.06957607  5.664024e-29\n20    Dim2:RowsD  0.562060367  0.69340368 0.06667337  3.454936e-17\n\n# getS3method(\"assoc\",\"rc\")"
  },
  {
    "objectID": "4-Chapter_3.html",
    "href": "4-Chapter_3.html",
    "title": "3  第3章",
    "section": "",
    "text": "第3章は3元表に対する部分連関モデルを扱う．パッケージはtidyverse（データセットの処理のため），magrittr（パイプ演算子），DescTools（記述統計を求めるため），vcdパッケージ（カテゴリカルデータの分析のため），broom（回帰係数の整理），gnm（連関分析の処理のため）を使用する．\nまたモデル適合度を表示するための関数をここでも準備しておく．すべてgnmによって推定を行う．"
  },
  {
    "objectID": "4-Chapter_3.html#表3.1a",
    "href": "4-Chapter_3.html#表3.1a",
    "title": "3  第3章",
    "section": "3.1 表3.1A",
    "text": "3.1 表3.1A\n表3.1Aをまずベクトルとして入力する．\n\nlibrary(gnm)\n\n# 表3.1\nFreq <- c(  9, 5, 5, 1,    1, 6, 5, 1,    2, 2, 2, 1,\n           17,13, 7, 4,   13,22, 9, 1,    7,13, 6, 2,\n            8,14, 6, 0,   10,29,10, 0,    5,14, 6, 2,\n           20,38,24, 8,   23,72,34,10,   17,67,36,12,\n            4,21,12, 4,    7,30, 9, 1,    9,19,14, 2,\n            2, 9, 8, 3,    1,16,19, 2,   11,28,28,11,\n            0, 1, 5, 0,    2, 3, 3, 2,    2, 7, 6, 6)\n\n次に行変数，列変数，層変数を入力する．gl(n = 水準数, k = 繰り返しの数, length = 長さ)を注意しながら設定する．\n\npolviews <- gl(n = 7, k = 4*3, length = length(Freq))\nfefam <- gl(n = 4, k = 1, length = length(Freq))\nnatfare <- gl(n = 3, k = 4, length = length(Freq))\n\n対応しているのかを確認したければ，matrix形式で示すとよい．\n\nmatrix(polviews, nrow = 7, ncol = 12, byrow = TRUE)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"  \"1\"   \"1\"   \"1\"  \n[2,] \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"  \"2\"   \"2\"   \"2\"  \n[3,] \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[4,] \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"  \"4\"   \"4\"   \"4\"  \n[5,] \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"  \"5\"   \"5\"   \"5\"  \n[6,] \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"  \"6\"   \"6\"   \"6\"  \n[7,] \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"  \"7\"   \"7\"   \"7\"  \n\nmatrix(fefam, nrow = 7, ncol = 12, byrow = TRUE)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[2,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[3,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[4,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[5,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[6,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n[7,] \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"  \"3\"  \"4\"  \"1\"  \"2\"   \"3\"   \"4\"  \n\nmatrix(natfare, nrow = 7, ncol = 12, byrow = TRUE)\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\n[1,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[2,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[3,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[4,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[5,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[6,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n[7,] \"1\"  \"1\"  \"1\"  \"1\"  \"2\"  \"2\"  \"2\"  \"2\"  \"3\"  \"3\"   \"3\"   \"3\"  \n\n\ntableのデータ（tab_3.1）とセルを単位としたデータ（freq_tab_3.1）を作成する．\n\ntab_3.1 <- xtabs(Freq ~ polviews + fefam + natfare)\nfreq_tab_3.1 <- tibble(Freq, polviews, fefam, natfare)\n\n表3.2のモデルで推定を行う．モデル6から8まではスコアパラメータの正則化が必要であるが，適合度については問題なく求めることができる．\n\n# Model 1 - 独立モデル\nM1 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews + fefam + natfare,\n    family = poisson,\n    data = .,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 2 - 完全2元交互作用モデル\nM2 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews * fefam + fefam * natfare + polviews * natfare,\n    family = poisson,\n    data = .,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 3 - 条件付き独立 (polviews)\nM3 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews * fefam + polviews * natfare,\n    family = poisson,\n    data = .,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 4 - 条件付き独立 (fefam)\nM4 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews * fefam + fefam * natfare,\n    family = poisson,\n    data = .,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 5 - 条件付き独立 (natfare)\nM5 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ fefam * natfare + polviews * natfare,\n    family = poisson,\n    data = .,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 6 - RC(1)+RL(1) 部分連関\n# 値の正則化が必要\nM6 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews, fefam) + \n      Mult(1, polviews, natfare),\n    data = .,\n    family = poisson,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................................................\nDone\n\n# Model 7 - RC(1)+RL(1) 部分連関 (一貫した行スコア - polviews)\n# 値の正則化が必要\nM7 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews, fefam + natfare),\n    data = .,\n    family = poisson,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...............................................\nDone\n\n# Model 8 - RC(1)+RL(1) 部分連関 (一貫した行スコア - polviews)\n# 行スコアへの等値制約\n# 値の正則化が必要\n\n# 等値制約をかけたいセルの水準を同じにする\nfreq_tab_3.1 <- freq_tab_3.1 %>% \n  mutate(polviews.c = case_when(polviews == 1 ~ 1,  # mu1 = mu2\n                                polviews == 2 ~ 1,  # mu1 = mu2\n                                polviews == 3 ~ 2,\n                                polviews == 4 ~ 3,  # mu4 = mu5\n                                polviews == 5 ~ 3,  # mu4 = mu5\n                                polviews == 6 ~ 4,\n                                polviews == 7 ~ 5) %>%\n           factor())\n\nM8 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ polviews + fefam + natfare + \n      Mult(1, polviews.c, fefam + natfare),\n    data = .,\n    family = poisson,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................................................\nDone"
  },
  {
    "objectID": "4-Chapter_3.html#表3.2",
    "href": "4-Chapter_3.html#表3.2",
    "title": "3  第3章",
    "section": "3.2 表3.2",
    "text": "3.2 表3.2\n表3.2を再現する．\n\n## 表3.2\n\n# リストを作成\nM <- list()\n# モデルの適合度をリストに順に格納\nM[[1]] <- model.summary(M1, \"1. Complete independence\") \nM[[2]] <- model.summary(M2, \"2. Full two-way interaction\") \nM[[3]] <- model.summary(M3, \"3. Conditional independence on POLVIEWS\") \nM[[4]] <- model.summary(M4, \"4. Conditional independence on FEFAM\")\nM[[5]] <- model.summary(M5, \"5. Conditional independence on NATFARE\")\nM[[6]] <- model.summary(M6, \"6. RC(1) + RL(1) partial association\")\nM[[7]] <- model.summary(M7, \"7. Model 6 plus consisitent row (POLVIEWS) score restrictions\")\nM[[8]] <- model.summary(M8, \"8. Model 6 plus consisitent and equality restrictions on row (POLVIEWS) scores (mu_1 = mu_2, mu_4 = mu_5)\")\n# リストを行方向に合併する\nM %>% bind_rows()\n\n# A tibble: 8 × 6\n  `Model Description`                               df    L2   BIC Delta       p\n  <chr>                                          <int> <dbl> <dbl> <dbl>   <dbl>\n1 1. Complete independence                          72 168.  -324. 14.1  1.37e-9\n2 2. Full two-way interaction                       36  35.4 -211.  5.72 4.99e-1\n3 3. Conditional independence on POLVIEWS           42  47.3 -240.  7.30 2.67e-1\n4 4. Conditional independence on FEFAM              48  87.3 -241. 10.3  4.50e-4\n5 5. Conditional independence on NATFARE            54  91.0 -278. 10.1  1.21e-3\n6 6. RC(1) + RL(1) partial association              57  68.6 -321.  8.83 1.40e-1\n7 7. Model 6 plus consisitent row (POLVIEWS) sc…    62  72.8 -351.  9.07 1.65e-1\n8 8. Model 6 plus consisitent and equality rest…    64  73.6 -364.  9.21 1.93e-1"
  },
  {
    "objectID": "4-Chapter_3.html#表3.3",
    "href": "4-Chapter_3.html#表3.3",
    "title": "3  第3章",
    "section": "3.3 表3.3",
    "text": "3.3 表3.3\n表3.3を再現するために，モデル6から8までのスコアパラメータの正則化を行う．\nまずはモデル6である．\n\n# Estimating standard error\n# Model 6\n\n# 変数と係数と係数の順番を表示\npickCoef(M6, \"[.]polviews\")\n\n  Mult(1, ., fefam).polviews1   Mult(1, ., fefam).polviews2 \n                           14                            15 \n  Mult(1, ., fefam).polviews3   Mult(1, ., fefam).polviews4 \n                           16                            17 \n  Mult(1, ., fefam).polviews5   Mult(1, ., fefam).polviews6 \n                           18                            19 \n  Mult(1, ., fefam).polviews7 Mult(1, ., natfare).polviews1 \n                           20                            26 \nMult(1, ., natfare).polviews2 Mult(1, ., natfare).polviews3 \n                           27                            28 \nMult(1, ., natfare).polviews4 Mult(1, ., natfare).polviews5 \n                           29                            30 \nMult(1, ., natfare).polviews6 Mult(1, ., natfare).polviews7 \n                           31                            32 \n\npickCoef(M6, \"[.]fefam\")\n\nMult(1, polviews, .).fefam1 Mult(1, polviews, .).fefam2 \n                         21                          22 \nMult(1, polviews, .).fefam3 Mult(1, polviews, .).fefam4 \n                         23                          24 \n\npickCoef(M6, \"[.]natfare\")\n\nMult(1, polviews, .).natfare1 Mult(1, polviews, .).natfare2 \n                           33                            34 \nMult(1, polviews, .).natfare3 \n                           35 \n\ndata.frame(var = names(M6$coefficients),\n           estimate = M6$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                                        var    estimate number\n(Intercept)                                     (Intercept)  0.48028108      1\npolviews2                                         polviews2  1.07528328      2\npolviews3                                         polviews3  1.03111488      3\npolviews4                                         polviews4  2.35033006      4\npolviews5                                         polviews5  1.34028362      5\npolviews6                                         polviews6  1.26612566      6\npolviews7                                         polviews7 -0.10862326      7\nfefam2                                               fefam2  0.97484817      8\nfefam3                                               fefam3  0.42172690      9\nfefam4                                               fefam4 -0.88755370     10\nnatfare2                                           natfare2  0.36108325     11\nnatfare3                                           natfare3  0.32348750     12\nMult(., polviews, fefam).         Mult(., polviews, fefam). -0.52183803     13\nMult(1, ., fefam).polviews1     Mult(1, ., fefam).polviews1 -1.10060947     14\nMult(1, ., fefam).polviews2     Mult(1, ., fefam).polviews2 -3.05554561     15\nMult(1, ., fefam).polviews3     Mult(1, ., fefam).polviews3 -2.38936639     16\nMult(1, ., fefam).polviews4     Mult(1, ., fefam).polviews4  0.18691832     17\nMult(1, ., fefam).polviews5     Mult(1, ., fefam).polviews5 -0.17670280     18\nMult(1, ., fefam).polviews6     Mult(1, ., fefam).polviews6  3.36240974     19\nMult(1, ., fefam).polviews7     Mult(1, ., fefam).polviews7  5.14311695     20\nMult(1, polviews, .).fefam1     Mult(1, polviews, .).fefam1  0.34140773     21\nMult(1, polviews, .).fefam2     Mult(1, polviews, .).fefam2  0.08456312     22\nMult(1, polviews, .).fefam3     Mult(1, polviews, .).fefam3 -0.17958561     23\nMult(1, polviews, .).fefam4     Mult(1, polviews, .).fefam4 -0.34061403     24\nMult(., polviews, natfare).     Mult(., polviews, natfare). -3.05679148     25\nMult(1, ., natfare).polviews1 Mult(1, ., natfare).polviews1 -0.92667766     26\nMult(1, ., natfare).polviews2 Mult(1, ., natfare).polviews2 -0.45726242     27\nMult(1, ., natfare).polviews3 Mult(1, ., natfare).polviews3 -0.29119363     28\nMult(1, ., natfare).polviews4 Mult(1, ., natfare).polviews4  0.02512600     29\nMult(1, ., natfare).polviews5 Mult(1, ., natfare).polviews5 -0.13829150     30\nMult(1, ., natfare).polviews6 Mult(1, ., natfare).polviews6  0.65961766     31\nMult(1, ., natfare).polviews7 Mult(1, ., natfare).polviews7  0.66256887     32\nMult(1, polviews, .).natfare1 Mult(1, polviews, .).natfare1  0.23088727     33\nMult(1, polviews, .).natfare2 Mult(1, polviews, .).natfare2  0.07258268     34\nMult(1, polviews, .).natfare3 Mult(1, polviews, .).natfare3 -0.26870064     35\n\n\n各スコアの両端のカテゴリ，つまり上記推定値のリストの 14,20,21,24,26,32,33,35番目の8つの値についてスコアを求め，固定する．\n\n# R POLVIEWS mu1[i], i = 1 to 7\nmu1 <- getContrasts(M6, pickCoef(M6, \"fefam)[.]polviews\"),\n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n# C FEFAM nu[j], j = 1 to 4\nnu <- getContrasts(M6, pickCoef(M6, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n# R POLVIEWS mu2[i], i = 1 to 7\nmu2 <- getContrasts(M6, pickCoef(M6, \"natfare)[.]polviews\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n# L NATFARE eta[k], k = 1 to 3\neta <- getContrasts(M6, pickCoef(M6, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\n# 確認 \nlist(mu1 = mu1, nu = nu, mu2 = mu2, eta = eta)\n\n$mu1\n                               Estimate Std. Error\nMult(1, ., fefam).polviews1 -0.18890704 0.17539812\nMult(1, ., fefam).polviews2 -0.45611586 0.11238050\nMult(1, ., fefam).polviews3 -0.36505971 0.11498236\nMult(1, ., fefam).polviews4 -0.01292237 0.08199631\nMult(1, ., fefam).polviews5 -0.06262362 0.11058185\nMult(1, ., fefam).polviews6  0.42111705 0.12367540\nMult(1, ., fefam).polviews7  0.66451154 0.10976226\n\n$nu\n                              Estimate Std. Error\nMult(1, polviews, .).fefam1  0.7026886 0.06444123\nMult(1, polviews, .).fefam2  0.2081705 0.09371704\nMult(1, polviews, .).fefam3 -0.3004108 0.10956493\nMult(1, polviews, .).fefam4 -0.6104483 0.09158453\n\n$mu2\n                                 Estimate Std. Error\nMult(1, ., natfare).polviews1 -0.60584367 0.12394769\nMult(1, ., natfare).polviews2 -0.27518966 0.11469790\nMult(1, ., natfare).polviews3 -0.15821154 0.11316687\nMult(1, ., natfare).polviews4  0.06460260 0.07187236\nMult(1, ., natfare).polviews5 -0.05050796 0.10030828\nMult(1, ., natfare).polviews6  0.51153570 0.10405220\nMult(1, ., natfare).polviews7  0.51361453 0.12512860\n\n$eta\n                                Estimate Std. Error\nMult(1, polviews, .).natfare1  0.6073482 0.07616839\nMult(1, polviews, .).natfare2  0.1689209 0.11149916\nMult(1, polviews, .).natfare3 -0.7762692 0.03533078\n\n\n正則化したスコアを求めることができたので， 各スコアの両端のカテゴリを取り出し，conとする．\n\ncon <- c(mu1$qvframe[,1][c(1,7)], \n         nu$qvframe[,1][c(1,4)],\n         mu2$qvframe[,1][c(1,7)], \n         eta$qvframe[,1][c(1,3)])\n\nconを用いて制約を課す．制約のあるパラメータはconstrainで指定する．\n\nM6_SE <- freq_tab_3.1 %>%\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + Mult(1, polviews, natfare),\n      constrain = c(14,20,21,24,26,32,33,35), \n      constrainTo = con,\n      data = ., \n      family = poisson, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..................................................\nDone\n\nM6_SE_coef <- summary(M6_SE) %>%\n  coefficients() %>%\n  data.frame() %>%\n  rownames_to_column(var = \"Variable\")\nM6_SE_coef\n\n                        Variable    Estimate Std..Error     z.value\n1                    (Intercept)  0.49061305  0.2714613  1.80730399\n2                      polviews2  1.03462096  0.2286800  4.52431800\n3                      polviews3  0.99275852  0.2260565  4.39163963\n4                      polviews4  2.33243766  0.2118135 11.01174909\n5                      polviews5  1.32371069  0.2178840  6.07530027\n6                      polviews6  1.26479125  0.2817072  4.48973712\n7                      polviews7 -0.08817192  0.3550448 -0.24834026\n8                         fefam2  1.01257263  0.1875433  5.39913927\n9                         fefam3  0.49824862  0.3404100  1.46367194\n10                        fefam4 -0.78738067  0.4491457 -1.75306289\n11                      natfare2  0.32886127  0.1265360  2.59895340\n12                      natfare3  0.22179929  0.3142052  0.70590598\n13     Mult(., polviews, fefam). -1.98292236  0.7444158 -2.66372963\n14   Mult(1, ., fefam).polviews1 -0.18890704         NA          NA\n15   Mult(1, ., fefam).polviews2 -0.45611586  0.3084481 -1.47874449\n16   Mult(1, ., fefam).polviews3 -0.36505971  0.2850040 -1.28089339\n17   Mult(1, ., fefam).polviews4 -0.01292237  0.1836908 -0.07034845\n18   Mult(1, ., fefam).polviews5 -0.06262362  0.2116102 -0.29593861\n19   Mult(1, ., fefam).polviews6  0.42111705  0.2048749  2.05548422\n20   Mult(1, ., fefam).polviews7  0.66451154         NA          NA\n21   Mult(1, polviews, .).fefam1  0.70268861         NA          NA\n22   Mult(1, polviews, .).fefam2  0.20817046  0.1521823  1.36790202\n23   Mult(1, polviews, .).fefam3 -0.30041075  0.1850933 -1.62302311\n24   Mult(1, polviews, .).fefam4 -0.61044832         NA          NA\n25   Mult(., polviews, natfare). -1.56691378  0.4052719 -3.86632725\n26 Mult(1, ., natfare).polviews1 -0.60584367         NA          NA\n27 Mult(1, ., natfare).polviews2 -0.27518966  0.1998376 -1.37706660\n28 Mult(1, ., natfare).polviews3 -0.15821154  0.1910651 -0.82805039\n29 Mult(1, ., natfare).polviews4  0.06460260  0.1559375  0.41428510\n30 Mult(1, ., natfare).polviews5 -0.05050796  0.1767772 -0.28571539\n31 Mult(1, ., natfare).polviews6  0.51153570  0.2109300  2.42514436\n32 Mult(1, ., natfare).polviews7  0.51361453         NA          NA\n33 Mult(1, polviews, .).natfare1  0.60734824         NA          NA\n34 Mult(1, polviews, .).natfare2  0.16892093  0.1747273  0.96676884\n35 Mult(1, polviews, .).natfare3 -0.77626917         NA          NA\n       Pr...z..\n1  7.071489e-02\n2  6.059057e-06\n3  1.124990e-05\n4  3.354276e-28\n5  1.237559e-09\n6  7.131113e-06\n7  8.038712e-01\n8  6.696138e-08\n9  1.432836e-01\n10 7.959121e-02\n11 9.350847e-03\n12 4.802466e-01\n13 7.727965e-03\n14           NA\n15 1.392086e-01\n16 2.002311e-01\n17 9.439163e-01\n18 7.672770e-01\n19 3.983226e-02\n20           NA\n21           NA\n22 1.713427e-01\n23 1.045845e-01\n24           NA\n25 1.104867e-04\n26           NA\n27 1.684917e-01\n28 4.076420e-01\n29 6.786653e-01\n30 7.750961e-01\n31 1.530230e-02\n32           NA\n33           NA\n34 3.336596e-01\n35           NA\n\n\nモデル7はすこし難しい．モデル7は一貫した制約を課している．このモデルからまず一貫したpolviewsについて正則化した場合の値を求める．これが求まったら，次は一貫した制約を課していないモデルに，先ほどの正則化したスコアをRCとRLのそれぞれの部分に適用する．\n\n# Model 7\n\n# 変数と係数と係数の順番を表示\npickCoef(M7, \"[.]polviews\")\n\nMult(1, ., fefam + natfare).polviews1 Mult(1, ., fefam + natfare).polviews2 \n                                   14                                    15 \nMult(1, ., fefam + natfare).polviews3 Mult(1, ., fefam + natfare).polviews4 \n                                   16                                    17 \nMult(1, ., fefam + natfare).polviews5 Mult(1, ., fefam + natfare).polviews6 \n                                   18                                    19 \nMult(1, ., fefam + natfare).polviews7 \n                                   20 \n\npickCoef(M7, \"[.]fefam\")\n\nMult(1, polviews, . + natfare).fefam1 Mult(1, polviews, . + natfare).fefam2 \n                                   21                                    22 \nMult(1, polviews, . + natfare).fefam3 Mult(1, polviews, . + natfare).fefam4 \n                                   23                                    24 \n\npickCoef(M7, \"[.]natfare\")\n\nMult(1, polviews, fefam + .).natfare2 Mult(1, polviews, fefam + .).natfare3 \n                                   25                                    26 \n\ndata.frame(var = names(M7$coefficients),\n           estimate = M7$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                                                        var\n(Intercept)                                                     (Intercept)\npolviews2                                                         polviews2\npolviews3                                                         polviews3\npolviews4                                                         polviews4\npolviews5                                                         polviews5\npolviews6                                                         polviews6\npolviews7                                                         polviews7\nfefam2                                                               fefam2\nfefam3                                                               fefam3\nfefam4                                                               fefam4\nnatfare2                                                           natfare2\nnatfare3                                                           natfare3\nMult(., polviews, fefam + natfare).     Mult(., polviews, fefam + natfare).\nMult(1, ., fefam + natfare).polviews1 Mult(1, ., fefam + natfare).polviews1\nMult(1, ., fefam + natfare).polviews2 Mult(1, ., fefam + natfare).polviews2\nMult(1, ., fefam + natfare).polviews3 Mult(1, ., fefam + natfare).polviews3\nMult(1, ., fefam + natfare).polviews4 Mult(1, ., fefam + natfare).polviews4\nMult(1, ., fefam + natfare).polviews5 Mult(1, ., fefam + natfare).polviews5\nMult(1, ., fefam + natfare).polviews6 Mult(1, ., fefam + natfare).polviews6\nMult(1, ., fefam + natfare).polviews7 Mult(1, ., fefam + natfare).polviews7\nMult(1, polviews, . + natfare).fefam1 Mult(1, polviews, . + natfare).fefam1\nMult(1, polviews, . + natfare).fefam2 Mult(1, polviews, . + natfare).fefam2\nMult(1, polviews, . + natfare).fefam3 Mult(1, polviews, . + natfare).fefam3\nMult(1, polviews, . + natfare).fefam4 Mult(1, polviews, . + natfare).fefam4\nMult(1, polviews, fefam + .).natfare2 Mult(1, polviews, fefam + .).natfare2\nMult(1, polviews, fefam + .).natfare3 Mult(1, polviews, fefam + .).natfare3\n                                         estimate number\n(Intercept)                            0.58771546      1\npolviews2                              1.05435427      2\npolviews3                              0.98327932      3\npolviews4                              2.20715522      4\npolviews5                              1.21772723      5\npolviews6                              0.99121392      6\npolviews7                             -0.42056287      7\nfefam2                                 1.00381867      8\nfefam3                                 0.47293397      9\nfefam4                                -0.81546982     10\nnatfare2                               0.35473297     11\nnatfare3                               0.32663974     12\nMult(., polviews, fefam + natfare).    2.47458837     13\nMult(1, ., fefam + natfare).polviews1  0.69577146     14\nMult(1, ., fefam + natfare).polviews2  0.65211417     15\nMult(1, ., fefam + natfare).polviews3  0.46381434     16\nMult(1, ., fefam + natfare).polviews4 -0.01402750     17\nMult(1, ., fefam + natfare).polviews5  0.11981334     18\nMult(1, ., fefam + natfare).polviews6 -0.76680878     19\nMult(1, ., fefam + natfare).polviews7 -0.93864536     20\nMult(1, polviews, . + natfare).fefam1  0.48635026     21\nMult(1, polviews, . + natfare).fefam2  0.21472060     22\nMult(1, polviews, . + natfare).fefam3 -0.01679354     23\nMult(1, polviews, . + natfare).fefam4 -0.15799648     24\nMult(1, polviews, fefam + .).natfare2 -0.13428834     25\nMult(1, polviews, fefam + .).natfare3 -0.49270145     26\n\n# mu[i], i = 1 to 7\nmu <- getContrasts(M7, pickCoef(M7, \"[.]polviews\")[1:7], \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1:7)], \n         mu$qvframe[,1][c(1:7)])\n\nここでは一貫した制約を課さないモデルを用い，制約で一貫したスコアを割り当てる．そして，制約のない列スコアと層スコアを正則化する．\n\nM7_SE <- freq_tab_3.1 %>%\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20, 26:32), \n      constrainTo = con,\n      data = ., \n      family = poisson, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(M7_SE, \n                   pickCoef(M7_SE, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n# eta[k], k = 1 to 3\neta <- getContrasts(M7_SE, \n                    pickCoef(M7_SE, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1:7)], \n         nu$qvframe[,1][c(1,4)],\n         mu$qvframe[,1][c(1:7)], \n         eta$qvframe[,1][c(1,3)])\n\n最後に一貫したスコア（行）と正則化したスコア（列と層）を用いて再度推定を行う．\n\nM7_SE <- freq_tab_3.1 %>%\n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,21,24,26:32,33,35), \n      constrainTo = con,\n      data = ., \n      family = poisson, \n      trace = T, \n      tolerance = 1e-12)\n\nInitialising\nInitial Deviance = 181.495042\nRunning start-up iterations\nStart-up iteration 1. Deviance = 74.295705\nStart-up iteration 2. Deviance = 72.902097\nRunning main iterations\nIteration 1. Deviance = 72.773888\nIteration 2. Deviance = 72.773834\nIteration 3. Deviance = 72.773834\nDone\n\nM7_SE_coef <- summary(M7_SE) %>%\n  coefficients() %>%\n  data.frame() %>%\n  rownames_to_column(var = \"Variable\")\nM7_SE_coef\n\n                        Variable    Estimate Std..Error    z.value     Pr...z..\n1                    (Intercept)  0.49666511 0.19953839  2.4890704 1.280776e-02\n2                      polviews2  1.06271894 0.18389893  5.7788206 7.522608e-09\n3                      polviews3  1.02772195 0.18956295  5.4215339 5.908980e-08\n4                      polviews4  2.34315159 0.19992980 11.7198714 1.008250e-31\n5                      polviews5  1.32807991 0.20159537  6.5878491 4.462438e-11\n6                      polviews6  1.27144201 0.28745747  4.4230613 9.731214e-06\n7                      polviews7 -0.10741116 0.33836457 -0.3174421 7.509082e-01\n8                         fefam2  0.98345843 0.09473194 10.3814869 3.010493e-25\n9                         fefam3  0.43522039 0.10374979  4.1949037 2.729875e-05\n10                        fefam4 -0.86376740 0.14958265 -5.7745158 7.717469e-09\n11                      natfare2  0.34466727 0.08525038  4.0429996 5.277172e-05\n12                      natfare3  0.28970887 0.08687606  3.3347378 8.537987e-04\n13     Mult(., polviews, fefam). -1.94985651 0.37444868 -5.2072730 1.916361e-07\n14   Mult(1, ., fefam).polviews1  0.41258265         NA         NA           NA\n15   Mult(1, ., fefam).polviews2  0.38551616         NA         NA           NA\n16   Mult(1, ., fefam).polviews3  0.26877471         NA         NA           NA\n17   Mult(1, ., fefam).polviews4 -0.02747595         NA         NA           NA\n18   Mult(1, ., fefam).polviews5  0.05550221         NA         NA           NA\n19   Mult(1, ., fefam).polviews6 -0.49418258         NA         NA           NA\n20   Mult(1, ., fefam).polviews7 -0.60071720         NA         NA           NA\n21   Mult(1, polviews, .).fefam1 -0.72624699         NA         NA           NA\n22   Mult(1, polviews, .).fefam2 -0.17021171 0.14950096 -1.1385325 2.548982e-01\n23   Mult(1, polviews, .).fefam3  0.30370570 0.18912635  1.6058350 1.083102e-01\n24   Mult(1, polviews, .).fefam4  0.59275300         NA         NA           NA\n25   Mult(., polviews, natfare).  1.43774015 0.22609189  6.3590965 2.029439e-10\n26 Mult(1, ., natfare).polviews1  0.41258265         NA         NA           NA\n27 Mult(1, ., natfare).polviews2  0.38551616         NA         NA           NA\n28 Mult(1, ., natfare).polviews3  0.26877471         NA         NA           NA\n29 Mult(1, ., natfare).polviews4 -0.02747595         NA         NA           NA\n30 Mult(1, ., natfare).polviews5  0.05550221         NA         NA           NA\n31 Mult(1, ., natfare).polviews6 -0.49418258         NA         NA           NA\n32 Mult(1, ., natfare).polviews7 -0.60071720         NA         NA           NA\n33 Mult(1, polviews, .).natfare1  0.58021189         NA         NA           NA\n34 Mult(1, polviews, .).natfare2  0.20740348 0.18571219  1.1168006 2.640796e-01\n35 Mult(1, polviews, .).natfare3 -0.78761536         NA         NA           NA\n\n\nモデル8は1,1,2,3,3,4,5という制約があり，結局は1,2,3,4,5の5つのパラメータを推定することになる．しかし，あくまで1,1,2,3,3,4,5という7つのパラメータにウェイトをかける必要がある．そこでc(2,1,2,1,1)/7とすることで，等値制約をかけている部分は平均を2倍にし，c(2,1,2,1,1)とすることでウェイトも2倍にしている．\n\n# Model 8\n# mu[i], i = 1 to 7\nmu <- getContrasts(M8, \n                   pickCoef(M8, \"[.]polviews.c\"),\n                   ref = c(2,1,2,1,1)/7, \n                   scaleRef =c(2,1,2,1,1)/7,\n                   scaleWeights=c(2,1,2,1,1))\n\nmu <- getContrasts(M8,\n                   pickCoef(M8, \"[.]polviews.c\"),\n                   ref = c(2,1,2,1,1)/7, \n                   scaleRef =c(2,1,2,1,1)/7,\n                   scaleWeights=c(2,1,2,1,1))\nmu;mu\n\n                                            Estimate Std. Error\nMult(1, ., fefam + natfare).polviews.c1  0.402725149 0.04298356\nMult(1, ., fefam + natfare).polviews.c2  0.278981096 0.08172199\nMult(1, ., fefam + natfare).polviews.c3  0.001961895 0.04688021\nMult(1, ., fefam + natfare).polviews.c4 -0.491602614 0.08428340\nMult(1, ., fefam + natfare).polviews.c5 -0.596752569 0.08715205\n\n\n                                            Estimate Std. Error\nMult(1, ., fefam + natfare).polviews.c1  0.402725149 0.04298356\nMult(1, ., fefam + natfare).polviews.c2  0.278981096 0.08172199\nMult(1, ., fefam + natfare).polviews.c3  0.001961895 0.04688021\nMult(1, ., fefam + natfare).polviews.c4 -0.491602614 0.08428340\nMult(1, ., fefam + natfare).polviews.c5 -0.596752569 0.08715205\n\ncon <- c(mu$qvframe[,1][c(1,1,2,3,3,4,5)], mu$qvframe[,1][c(1,1,2,3,3,4,5)])\n\n一貫した行スコア（等値制約あり）を指定して再推定．\n\nM8 <- freq_tab_3.1 %>% \n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,26:32),\n      constrainTo = con,\n      data = ., \n      family = poisson, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nsummary(M8)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + natfare + Mult(1, polviews, \n    fefam) + Mult(1, polviews, natfare), constrain = c(14:20, \n    26:32), constrainTo = con, family = poisson, data = ., tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-2.09613  -0.69364  -0.06107   0.52149   2.13382  \n\nCoefficients:\n                               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                    0.486046         NA      NA       NA    \npolviews2                      1.047319   0.183771   5.699 1.20e-08 ***\npolviews3                      1.017626         NA      NA       NA    \npolviews4                      2.335725         NA      NA       NA    \npolviews5                      1.329649         NA      NA       NA    \npolviews6                      1.272240         NA      NA       NA    \npolviews7                     -0.103640         NA      NA       NA    \nfefam2                         0.993418   0.095568  10.395  < 2e-16 ***\nfefam3                         0.451237   0.104313   4.326 1.52e-05 ***\nfefam4                        -0.839900   0.148980  -5.638 1.72e-08 ***\nnatfare2                       0.345798   0.085610   4.039 5.36e-05 ***\nnatfare3                       0.302261   0.086847   3.480 0.000501 ***\nMult(., polviews, fefam).     -0.485028         NA      NA       NA    \nMult(1, ., fefam).polviews1    0.402725         NA      NA       NA    \nMult(1, ., fefam).polviews2    0.402725         NA      NA       NA    \nMult(1, ., fefam).polviews3    0.278981         NA      NA       NA    \nMult(1, ., fefam).polviews4    0.001962         NA      NA       NA    \nMult(1, ., fefam).polviews5    0.001962         NA      NA       NA    \nMult(1, ., fefam).polviews6   -0.491603         NA      NA       NA    \nMult(1, ., fefam).polviews7   -0.596753         NA      NA       NA    \nMult(1, polviews, .).fefam1   -2.689282         NA      NA       NA    \nMult(1, polviews, .).fefam2   -0.406698         NA      NA       NA    \nMult(1, polviews, .).fefam3    1.496520         NA      NA       NA    \nMult(1, polviews, .).fefam4    2.574806         NA      NA       NA    \nMult(., polviews, natfare).    2.029067         NA      NA       NA    \nMult(1, ., natfare).polviews1  0.402725         NA      NA       NA    \nMult(1, ., natfare).polviews2  0.402725         NA      NA       NA    \nMult(1, ., natfare).polviews3  0.278981         NA      NA       NA    \nMult(1, ., natfare).polviews4  0.001962         NA      NA       NA    \nMult(1, ., natfare).polviews5  0.001962         NA      NA       NA    \nMult(1, ., natfare).polviews6 -0.491603         NA      NA       NA    \nMult(1, ., natfare).polviews7 -0.596753         NA      NA       NA    \nMult(1, polviews, .).natfare1  0.464177         NA      NA       NA    \nMult(1, polviews, .).natfare2  0.222365         NA      NA       NA    \nMult(1, polviews, .).natfare3 -0.482864         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 73.594 on 67 degrees of freedom\nAIC: 411.62\n\nNumber of iterations: 3\n\n\n次は列スコアと層スコアの正則化をおこなう．\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(M8, \n                   pickCoef(M8, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# eta[k], k = 1 to 3\neta <- getContrasts(M8, \n                    pickCoef(M8, \"[.]natfare\"), \n                    ref = \"mean\",\n                    scaleRef = \"mean\", \n                    scaleWeights = \"unit\")\n\ncon <- c(mu$qvframe[,1][c(1,1,2,3,3,4,5)], \n         nu$qvframe[,1][c(1,4)],\n         mu$qvframe[,1][c(1,1,2,3,3,4,5)], \n         eta$qvframe[,1][c(1,3)])\n\n一貫した行スコア（等値制約あり）のすべて，列スコア（最初と最後），層スコア（最初と最後）を指定して再推定．\n\nM8_SE <- freq_tab_3.1 %>% \n  gnm(Freq ~ polviews + fefam + natfare + \n        Mult(1, polviews, fefam) + \n        Mult(1, polviews, natfare),\n      constrain = c(14:20,21,24,26:32,33,35), \n      constrainTo = con,\n      data = ., \n      family = poisson, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\nM8_SE_coef <- summary(M8_SE) %>%\n  coefficients() %>%\n  data.frame() %>%\n  rownames_to_column(var = \"Variable\")\nM8_SE_coef\n\n                        Variable     Estimate Std..Error    z.value\n1                    (Intercept)  0.493895139 0.19859016  2.4870071\n2                      polviews2  1.047318994 0.18377141  5.6990313\n3                      polviews3  1.015213949 0.18866665  5.3809931\n4                      polviews4  2.327913419 0.19476832 11.9522182\n5                      polviews5  1.321837383 0.20673745  6.3937976\n6                      polviews6  1.254808219 0.28561174  4.3934056\n7                      polviews7 -0.123120652 0.33655821 -0.3658228\n8                         fefam2  0.993417594 0.09556828 10.3948467\n9                         fefam3  0.451236835 0.10431337  4.3257815\n10                        fefam4 -0.839899708 0.14897993 -5.6376702\n11                      natfare2  0.345798040 0.08561002  4.0392239\n12                      natfare3  0.302261247 0.08684722  3.4803790\n13     Mult(., polviews, fefam). -1.941869008 0.37449253 -5.1853344\n14   Mult(1, ., fefam).polviews1  0.402725149         NA         NA\n15   Mult(1, ., fefam).polviews2  0.402725149         NA         NA\n16   Mult(1, ., fefam).polviews3  0.278981096         NA         NA\n17   Mult(1, ., fefam).polviews4  0.001961895         NA         NA\n18   Mult(1, ., fefam).polviews5  0.001961895         NA         NA\n19   Mult(1, ., fefam).polviews6 -0.491602614         NA         NA\n20   Mult(1, ., fefam).polviews7 -0.596752569         NA         NA\n21   Mult(1, polviews, .).fefam1 -0.732615689         NA         NA\n22   Mult(1, polviews, .).fefam2 -0.162486357 0.14986223 -1.0842382\n23   Mult(1, polviews, .).fefam3  0.312887371 0.19082765  1.6396333\n24   Mult(1, polviews, .).fefam4  0.582214676         NA         NA\n25   Mult(., polviews, natfare).  1.411968172 0.22580482  6.2530472\n26 Mult(1, ., natfare).polviews1  0.402725149         NA         NA\n27 Mult(1, ., natfare).polviews2  0.402725149         NA         NA\n28 Mult(1, ., natfare).polviews3  0.278981096         NA         NA\n29 Mult(1, ., natfare).polviews4  0.001961895         NA         NA\n30 Mult(1, ., natfare).polviews5  0.001961895         NA         NA\n31 Mult(1, ., natfare).polviews6 -0.491602614         NA         NA\n32 Mult(1, ., natfare).polviews7 -0.596752569         NA         NA\n33 Mult(1, polviews, .).natfare1  0.569479796         NA         NA\n34 Mult(1, polviews, .).natfare2  0.221984457 0.18989352  1.1689943\n35 Mult(1, polviews, .).natfare3 -0.791464253         NA         NA\n       Pr...z..\n1  1.288228e-02\n2  1.204901e-08\n3  7.407603e-08\n4  6.321508e-33\n5  1.618156e-10\n6  1.115886e-05\n7  7.144973e-01\n8  2.617075e-25\n9  1.519920e-05\n10 1.723662e-08\n11 5.362835e-05\n12 5.007049e-04\n13 2.156276e-07\n14           NA\n15           NA\n16           NA\n17           NA\n18           NA\n19           NA\n20           NA\n21           NA\n22 2.782592e-01\n23 1.010814e-01\n24           NA\n25 4.025205e-10\n26           NA\n27           NA\n28           NA\n29           NA\n30           NA\n31           NA\n32           NA\n33           NA\n34 2.424059e-01\n35           NA\n\n\nすべてのスコアを列方向に合併し，表3.3を再現．\n\nbind_cols(\nM6_SE_coef %>% dplyr::select(Variable, Model6 = Estimate),\nM7_SE_coef %>% dplyr::select(Model7 = Estimate),\nM8_SE_coef %>% dplyr::select(Model8 = Estimate)) %>%\n  dplyr::filter(grepl(\"Mult\",Variable))\n\n                        Variable      Model6      Model7       Model8\n1      Mult(., polviews, fefam). -1.98292236 -1.94985651 -1.941869008\n2    Mult(1, ., fefam).polviews1 -0.18890704  0.41258265  0.402725149\n3    Mult(1, ., fefam).polviews2 -0.45611586  0.38551616  0.402725149\n4    Mult(1, ., fefam).polviews3 -0.36505971  0.26877471  0.278981096\n5    Mult(1, ., fefam).polviews4 -0.01292237 -0.02747595  0.001961895\n6    Mult(1, ., fefam).polviews5 -0.06262362  0.05550221  0.001961895\n7    Mult(1, ., fefam).polviews6  0.42111705 -0.49418258 -0.491602614\n8    Mult(1, ., fefam).polviews7  0.66451154 -0.60071720 -0.596752569\n9    Mult(1, polviews, .).fefam1  0.70268861 -0.72624699 -0.732615689\n10   Mult(1, polviews, .).fefam2  0.20817046 -0.17021171 -0.162486357\n11   Mult(1, polviews, .).fefam3 -0.30041075  0.30370570  0.312887371\n12   Mult(1, polviews, .).fefam4 -0.61044832  0.59275300  0.582214676\n13   Mult(., polviews, natfare). -1.56691378  1.43774015  1.411968172\n14 Mult(1, ., natfare).polviews1 -0.60584367  0.41258265  0.402725149\n15 Mult(1, ., natfare).polviews2 -0.27518966  0.38551616  0.402725149\n16 Mult(1, ., natfare).polviews3 -0.15821154  0.26877471  0.278981096\n17 Mult(1, ., natfare).polviews4  0.06460260 -0.02747595  0.001961895\n18 Mult(1, ., natfare).polviews5 -0.05050796  0.05550221  0.001961895\n19 Mult(1, ., natfare).polviews6  0.51153570 -0.49418258 -0.491602614\n20 Mult(1, ., natfare).polviews7  0.51361453 -0.60071720 -0.596752569\n21 Mult(1, polviews, .).natfare1  0.60734824  0.58021189  0.569479796\n22 Mult(1, polviews, .).natfare2  0.16892093  0.20740348  0.221984457\n23 Mult(1, polviews, .).natfare3 -0.77626917 -0.78761536 -0.791464253"
  },
  {
    "objectID": "4-Chapter_3.html#表3.4",
    "href": "4-Chapter_3.html#表3.4",
    "title": "3  第3章",
    "section": "3.4 表3.4",
    "text": "3.4 表3.4\n表3.4のデータを入力する．\n\n# 表3.1\nFreq <- c(76, 14, 15,  4,\n        32, 17,  7,  3,\n        64, 23, 28, 15,\n        41, 11, 27, 16,\n        15,  2,  7,  4,\n        27, 20,  9,  5,\n        57, 31, 24, 15,\n        27,  9, 22, 16,\n        13,  6, 13,  5,\n        12, 13, 10,  6,\n        46, 32, 75, 20,\n        54, 26, 58, 55,\n        7,  6,  7,  6,\n        7,  2,  3,  6,\n        12, 11, 31, 15,\n        52, 36, 80,101)\n\n行，列，層のカテゴリを入力し，matrixで確認する．\n\nL <- gl(4, 16, 64)\nR <- gl(4, 4, 64)\nC <- gl(4, 1, 64)\n\n# 確認する\nL %>% matrix(nrow = 16, ncol = 4, byrow = TRUE)\n\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"1\"  \"1\"  \"1\" \n [2,] \"1\"  \"1\"  \"1\"  \"1\" \n [3,] \"1\"  \"1\"  \"1\"  \"1\" \n [4,] \"1\"  \"1\"  \"1\"  \"1\" \n [5,] \"2\"  \"2\"  \"2\"  \"2\" \n [6,] \"2\"  \"2\"  \"2\"  \"2\" \n [7,] \"2\"  \"2\"  \"2\"  \"2\" \n [8,] \"2\"  \"2\"  \"2\"  \"2\" \n [9,] \"3\"  \"3\"  \"3\"  \"3\" \n[10,] \"3\"  \"3\"  \"3\"  \"3\" \n[11,] \"3\"  \"3\"  \"3\"  \"3\" \n[12,] \"3\"  \"3\"  \"3\"  \"3\" \n[13,] \"4\"  \"4\"  \"4\"  \"4\" \n[14,] \"4\"  \"4\"  \"4\"  \"4\" \n[15,] \"4\"  \"4\"  \"4\"  \"4\" \n[16,] \"4\"  \"4\"  \"4\"  \"4\" \n\nR %>% matrix(nrow = 16, ncol = 4, byrow = TRUE)\n\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"1\"  \"1\"  \"1\" \n [2,] \"2\"  \"2\"  \"2\"  \"2\" \n [3,] \"3\"  \"3\"  \"3\"  \"3\" \n [4,] \"4\"  \"4\"  \"4\"  \"4\" \n [5,] \"1\"  \"1\"  \"1\"  \"1\" \n [6,] \"2\"  \"2\"  \"2\"  \"2\" \n [7,] \"3\"  \"3\"  \"3\"  \"3\" \n [8,] \"4\"  \"4\"  \"4\"  \"4\" \n [9,] \"1\"  \"1\"  \"1\"  \"1\" \n[10,] \"2\"  \"2\"  \"2\"  \"2\" \n[11,] \"3\"  \"3\"  \"3\"  \"3\" \n[12,] \"4\"  \"4\"  \"4\"  \"4\" \n[13,] \"1\"  \"1\"  \"1\"  \"1\" \n[14,] \"2\"  \"2\"  \"2\"  \"2\" \n[15,] \"3\"  \"3\"  \"3\"  \"3\" \n[16,] \"4\"  \"4\"  \"4\"  \"4\" \n\nC %>% matrix(nrow = 16, ncol = 4, byrow = TRUE)\n\n      [,1] [,2] [,3] [,4]\n [1,] \"1\"  \"2\"  \"3\"  \"4\" \n [2,] \"1\"  \"2\"  \"3\"  \"4\" \n [3,] \"1\"  \"2\"  \"3\"  \"4\" \n [4,] \"1\"  \"2\"  \"3\"  \"4\" \n [5,] \"1\"  \"2\"  \"3\"  \"4\" \n [6,] \"1\"  \"2\"  \"3\"  \"4\" \n [7,] \"1\"  \"2\"  \"3\"  \"4\" \n [8,] \"1\"  \"2\"  \"3\"  \"4\" \n [9,] \"1\"  \"2\"  \"3\"  \"4\" \n[10,] \"1\"  \"2\"  \"3\"  \"4\" \n[11,] \"1\"  \"2\"  \"3\"  \"4\" \n[12,] \"1\"  \"2\"  \"3\"  \"4\" \n[13,] \"1\"  \"2\"  \"3\"  \"4\" \n[14,] \"1\"  \"2\"  \"3\"  \"4\" \n[15,] \"1\"  \"2\"  \"3\"  \"4\" \n[16,] \"1\"  \"2\"  \"3\"  \"4\" \n\n\n以上をtibbleでまとめ，データを作成する．\n\nfreq_tab_3.1 <- tibble(Freq, L, R, C) %>% arrange(L, R, C)\nfreq_tab_3.1\n\n# A tibble: 64 × 4\n    Freq L     R     C    \n   <dbl> <fct> <fct> <fct>\n 1    76 1     1     1    \n 2    14 1     1     2    \n 3    15 1     1     3    \n 4     4 1     1     4    \n 5    32 1     2     1    \n 6    17 1     2     2    \n 7     7 1     2     3    \n 8     3 1     2     4    \n 9    64 1     3     1    \n10    23 1     3     2    \n# ℹ 54 more rows\n\n\n行，列，層について整数スコアを作成する．\n\nfreq_tab_3.1 <- freq_tab_3.1 %>% \n  mutate(Rscore = as.numeric(R),\n         Cscore = as.numeric(C),\n         Lscore = as.numeric(L))\nfreq_tab_3.1\n\n# A tibble: 64 × 7\n    Freq L     R     C     Rscore Cscore Lscore\n   <dbl> <fct> <fct> <fct>  <dbl>  <dbl>  <dbl>\n 1    76 1     1     1          1      1      1\n 2    14 1     1     2          1      2      1\n 3    15 1     1     3          1      3      1\n 4     4 1     1     4          1      4      1\n 5    32 1     2     1          2      1      1\n 6    17 1     2     2          2      2      1\n 7     7 1     2     3          2      3      1\n 8     3 1     2     4          2      4      1\n 9    64 1     3     1          3      1      1\n10    23 1     3     2          3      2      1\n# ℹ 54 more rows\n\n\nそれではモデル1から15までを用いた推定を行う．ただしgnmではモデル3と5の推定はできない． また\n\n# Model 1 - Complete Independence\nmodel1 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\n# Model 2 - Unrestricted RC(1)+RL(1)+CL(1)\nmodel2 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L + Mult(1, R, C) + Mult(1, R, L) + Mult(1, C, L),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n....................................................\nDone\n\n# Model 3 - Restricted RC(1)+RL(1)+CL(1) with consistent score\n# It may not be fitted with gnm package!\n\n# Model 4 - Model 2 with consistent cells fitted exactly\nfreq_tab_3.1 <- freq_tab_3.1 %>%\n  mutate(consistent.cells = factor(ifelse((R == C) & (C == L), R, 0)))\nmodel4 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L + consistent.cells +\n      Mult(1, R, C) + Mult(1, R, L) + Mult(1, C, L),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations........................................\nDone\n\n# Model 5 - Model 3 with consistent cells fitted exactly\n# It may not be fitted with gnm package!\n\n# Model 6 - Full Two-way interaction\nmodel6 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R * C + R * L + C * L,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\nsummary(model6)\n\n\nCall:\ngnm(formula = Freq ~ R * C + R * L + C * L, family = poisson, \n    data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-1.685582  -0.504109  -0.008581   0.460359   1.299438  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.26029    0.11066  38.499  < 2e-16 ***\nR2          -0.79606    0.18519  -4.299 1.72e-05 ***\nR3          -0.09579    0.14996  -0.639  0.52299    \nR4          -0.43476    0.16083  -2.703  0.00687 ** \nC2          -1.63953    0.22829  -7.182 6.89e-13 ***\nC3          -1.39351    0.20261  -6.878 6.08e-12 ***\nC4          -2.33707    0.28019  -8.341  < 2e-16 ***\nR2:C2        0.90120    0.28232   3.192  0.00141 ** \nR3:C2        0.63274    0.25192   2.512  0.01202 *  \nR4:C2        0.33707    0.26138   1.290  0.19719    \nR2:C3       -0.06534    0.29098  -0.225  0.82232    \nR3:C3        0.66917    0.22004   3.041  0.00236 ** \nR4:C3        0.60286    0.22215   2.714  0.00665 ** \nR2:C4        0.34284    0.36220   0.947  0.34388    \nR3:C4        0.56412    0.29673   1.901  0.05729 .  \nR4:C4        1.27643    0.28261   4.517 6.29e-06 ***\nL2          -1.48502    0.22186  -6.694 2.18e-11 ***\nL3          -1.52970    0.20833  -7.343 2.10e-13 ***\nL4          -2.08728    0.24553  -8.501  < 2e-16 ***\nR2:L2        1.34634    0.28170   4.779 1.76e-06 ***\nR3:L2        1.28703    0.24739   5.203 1.97e-07 ***\nR4:L2        1.03853    0.26517   3.916 8.99e-05 ***\nR2:L3        0.67005    0.28444   2.356  0.01849 *  \nR3:L3        1.21742    0.22757   5.350 8.81e-08 ***\nR4:L3        1.59671    0.23321   6.847 7.56e-12 ***\nR2:L4        0.17240    0.35528   0.485  0.62750    \nR3:L4        0.61348    0.27149   2.260  0.02384 *  \nR4:L4        2.16906    0.25643   8.459  < 2e-16 ***\nC2:L2        0.35033    0.21463   1.632  0.10263    \nC3:L2        0.22827    0.20862   1.094  0.27389    \nC4:L2        0.49174    0.25839   1.903  0.05703 .  \nC2:L3        0.65539    0.20819   3.148  0.00164 ** \nC3:L3        1.09826    0.18400   5.969 2.39e-09 ***\nC4:L3        1.11150    0.23123   4.807 1.53e-06 ***\nC2:L4        0.87747    0.23892   3.673  0.00024 ***\nC3:L4        1.29956    0.20753   6.262 3.80e-10 ***\nC4:L4        1.79692    0.23862   7.530 5.06e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 28.998 on 27 degrees of freedom\nAIC: 397.32\n\nNumber of iterations: 5\n\n# Model 7 - Model 6 with consistent cells fitted exactly\nmodel7 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R * C + R * L + C * L + consistent.cells,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\nsummary(model7)\n\n\nCall:\ngnm(formula = Freq ~ R * C + R * L + C * L + consistent.cells, \n    family = poisson, data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-1.505e+00  -4.123e-01  -1.490e-08   3.008e-01   1.562e+00  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        3.70806    0.31642  11.719  < 2e-16 ***\nR2                -0.26471    0.33752  -0.784 0.432870    \nR3                 0.43595    0.31473   1.385 0.166007    \nR4                 0.04506    0.31538   0.143 0.886401    \nC2                -1.23787    0.31573  -3.921 8.83e-05 ***\nC3                -0.95472    0.29544  -3.232 0.001231 ** \nC4                -2.00687    0.35086  -5.720 1.07e-08 ***\nR2:C2              0.49806    0.36012   1.383 0.166653    \nR3:C2              0.33263    0.30439   1.093 0.274482    \nR4:C2              0.02956    0.30915   0.096 0.923826    \nR2:C3             -0.37252    0.33538  -1.111 0.266684    \nR3:C3              0.21202    0.29412   0.721 0.470997    \nR4:C3              0.33724    0.27290   1.236 0.216553    \nR2:C4              0.06257    0.39636   0.158 0.874574    \nR3:C4              0.29993    0.33550   0.894 0.371334    \nR4:C4              1.06332    0.33951   3.132 0.001737 ** \nL2                -1.05809    0.31923  -3.314 0.000918 ***\nL3                -1.09080    0.29894  -3.649 0.000263 ***\nL4                -1.74115    0.32163  -5.413 6.18e-08 ***\nR2:L2              0.91597    0.36361   2.519 0.011766 *  \nR3:L2              0.93125    0.31450   2.961 0.003066 ** \nR4:L2              0.67771    0.32813   2.065 0.038888 *  \nR2:L3              0.33649    0.33467   1.005 0.314694    \nR3:L3              0.75119    0.30376   2.473 0.013399 *  \nR4:L3              1.28290    0.29072   4.413 1.02e-05 ***\nR2:L4             -0.12414    0.39162  -0.317 0.751243    \nR3:L4              0.33826    0.31651   1.069 0.285199    \nR4:L4              1.91005    0.31369   6.089 1.14e-09 ***\nC2:L2              0.17440    0.24791   0.704 0.481744    \nC3:L2              0.12343    0.21731   0.568 0.570049    \nC4:L2              0.38519    0.26377   1.460 0.144196    \nC2:L3              0.54622    0.21620   2.526 0.011522 *  \nC3:L3              0.78217    0.22762   3.436 0.000590 ***\nC4:L3              0.98203    0.23833   4.120 3.78e-05 ***\nC2:L4              0.75925    0.24670   3.078 0.002087 ** \nC3:L4              1.14125    0.21839   5.226 1.73e-07 ***\nC4:L4              1.79914    0.31902   5.640 1.70e-08 ***\nconsistent.cells1  0.62268    0.33657   1.850 0.064303 .  \nconsistent.cells2  0.25993    0.39723   0.654 0.512891    \nconsistent.cells3  0.47364    0.26552   1.784 0.074458 .  \nconsistent.cells4 -0.16248    0.31471  -0.516 0.605666    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 21.934 on 23 degrees of freedom\nAIC: 398.25\n\nNumber of iterations: 5\n\n# Model 8 - Unrestricted uniform and log-multiplicative association in all partial\n# association\nmodel8 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n............................\nDone\n\nsummary(model8)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), family = poisson, data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.64348  -0.68031  -0.02712   0.48954   2.01814  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.598658         NA      NA       NA    \nR2               -0.999936         NA      NA       NA    \nR3               -0.770279         NA      NA       NA    \nR4               -1.581221         NA      NA       NA    \nC2               -1.604574         NA      NA       NA    \nC3               -2.106881         NA      NA       NA    \nC4               -3.438321         NA      NA       NA    \nL2               -1.465192         NA      NA       NA    \nL3               -2.183377         NA      NA       NA    \nL4               -3.831036         NA      NA       NA    \nRscore:Cscore     0.129644   0.027279   4.752 2.01e-06 ***\nMult(., R, C).    0.570958         NA      NA       NA    \nMult(1, ., C).R1 -0.936684         NA      NA       NA    \nMult(1, ., C).R2  1.911760         NA      NA       NA    \nMult(1, ., C).R3  0.822618         NA      NA       NA    \nMult(1, ., C).R4 -1.172332         NA      NA       NA    \nMult(1, R, .).C1 -0.066419         NA      NA       NA    \nMult(1, R, .).C2  0.358171         NA      NA       NA    \nMult(1, R, .).C3  0.019335         NA      NA       NA    \nMult(1, R, .).C4 -0.289987         NA      NA       NA    \nRscore:Lscore     0.254496   0.028029   9.080  < 2e-16 ***\nMult(., R, L).    1.939632         NA      NA       NA    \nMult(1, ., L).R1 -0.491060         NA      NA       NA    \nMult(1, ., L).R2  0.445325         NA      NA       NA    \nMult(1, ., L).R3  0.344289         NA      NA       NA    \nMult(1, ., L).R4 -0.305799         NA      NA       NA    \nMult(1, R, .).L1 -0.031164         NA      NA       NA    \nMult(1, R, .).L2  0.484146         NA      NA       NA    \nMult(1, R, .).L3  0.102770         NA      NA       NA    \nMult(1, R, .).L4 -0.535159         NA      NA       NA    \nCscore:Lscore     0.201725   0.025855   7.802  < 2e-16 ***\nMult(., C, L).   -1.057248         NA      NA       NA    \nMult(1, ., L).C1 -0.345857         NA      NA       NA    \nMult(1, ., L).C2 -0.111605         NA      NA       NA    \nMult(1, ., L).C3  0.527907         NA      NA       NA    \nMult(1, ., L).C4 -0.396790         NA      NA       NA    \nMult(1, C, .).L1 -0.005155         NA      NA       NA    \nMult(1, C, .).L2  0.165356         NA      NA       NA    \nMult(1, C, .).L3 -0.340895         NA      NA       NA    \nMult(1, C, .).L4 -0.033101         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 45.854 on 36 degrees of freedom\nAIC: 396.17\n\nNumber of iterations: 85\n\npickCoef(model8, \"[.]R\")\n\nMult(1, ., C).R1 Mult(1, ., C).R2 Mult(1, ., C).R3 Mult(1, ., C).R4 \n              13               14               15               16 \nMult(1, ., L).R1 Mult(1, ., L).R2 Mult(1, ., L).R3 Mult(1, ., L).R4 \n              23               24               25               26 \n\npickCoef(model8, \"[.]C\")\n\nMult(1, R, .).C1 Mult(1, R, .).C2 Mult(1, R, .).C3 Mult(1, R, .).C4 \n              17               18               19               20 \nMult(1, ., L).C1 Mult(1, ., L).C2 Mult(1, ., L).C3 Mult(1, ., L).C4 \n              33               34               35               36 \n\npickCoef(model8, \"[.]L\")\n\nMult(1, R, .).L1 Mult(1, R, .).L2 Mult(1, R, .).L3 Mult(1, R, .).L4 \n              27               28               29               30 \nMult(1, C, .).L1 Mult(1, C, .).L2 Mult(1, C, .).L3 Mult(1, C, .).L4 \n              37               38               39               40 \n\ndata.frame(var = names(model8$coefficients),\n           estimate = model8$coefficients) %>% \n  mutate(estimate = estimate,\n         number = row_number())\n\n                              var     estimate number\n(Intercept)           (Intercept)  3.598658092      1\nR2                             R2 -0.999936266      2\nR3                             R3 -0.770278842      3\nR4                             R4 -1.581221187      4\nC2                             C2 -1.604573709      5\nC3                             C3 -2.106880608      6\nC4                             C4 -3.438321291      7\nL2                             L2 -1.465192172      8\nL3                             L3 -2.183377033      9\nL4                             L4 -3.831035866     10\nRscore:Cscore       Rscore:Cscore  0.129643997     11\nMult(., R, C).     Mult(., R, C).  0.570958010     12\nMult(1, ., C).R1 Mult(1, ., C).R1 -0.936683717     13\nMult(1, ., C).R2 Mult(1, ., C).R2  1.911759631     14\nMult(1, ., C).R3 Mult(1, ., C).R3  0.822618238     15\nMult(1, ., C).R4 Mult(1, ., C).R4 -1.172331569     16\nMult(1, R, .).C1 Mult(1, R, .).C1 -0.066419266     17\nMult(1, R, .).C2 Mult(1, R, .).C2  0.358171111     18\nMult(1, R, .).C3 Mult(1, R, .).C3  0.019335463     19\nMult(1, R, .).C4 Mult(1, R, .).C4 -0.289986984     20\nRscore:Lscore       Rscore:Lscore  0.254496389     21\nMult(., R, L).     Mult(., R, L).  1.939632012     22\nMult(1, ., L).R1 Mult(1, ., L).R1 -0.491059721     23\nMult(1, ., L).R2 Mult(1, ., L).R2  0.445324971     24\nMult(1, ., L).R3 Mult(1, ., L).R3  0.344288785     25\nMult(1, ., L).R4 Mult(1, ., L).R4 -0.305798848     26\nMult(1, R, .).L1 Mult(1, R, .).L1 -0.031164373     27\nMult(1, R, .).L2 Mult(1, R, .).L2  0.484145876     28\nMult(1, R, .).L3 Mult(1, R, .).L3  0.102770276     29\nMult(1, R, .).L4 Mult(1, R, .).L4 -0.535159300     30\nCscore:Lscore       Cscore:Lscore  0.201724868     31\nMult(., C, L).     Mult(., C, L). -1.057247700     32\nMult(1, ., L).C1 Mult(1, ., L).C1 -0.345856946     33\nMult(1, ., L).C2 Mult(1, ., L).C2 -0.111604851     34\nMult(1, ., L).C3 Mult(1, ., L).C3  0.527907221     35\nMult(1, ., L).C4 Mult(1, ., L).C4 -0.396790342     36\nMult(1, C, .).L1 Mult(1, C, .).L1 -0.005154568     37\nMult(1, C, .).L2 Mult(1, C, .).L2  0.165356095     38\nMult(1, C, .).L3 Mult(1, C, .).L3 -0.340894838     39\nMult(1, C, .).L4 Mult(1, C, .).L4 -0.033101084     40\n\n# mu1: 13-16\nmu1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]R\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nmu1\n\n                   Estimate Std. Error\nMult(1, ., C).R1 -0.4291986 0.18120993\nMult(1, ., C).R2  0.6893016 0.09977232\nMult(1, ., C).R3  0.2616277 0.15931019\nMult(1, ., C).R4 -0.5217306 0.15976113\n\n# nu1: 17-20\nnu1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu1\n\n                    Estimate Std. Error\nMult(1, R, .).C1 -0.15388700 0.15383900\nMult(1, R, .).C2  0.75746716 0.08227847\nMult(1, R, .).C3  0.03017965 0.15480459\nMult(1, R, .).C4 -0.63375980 0.11651692\n\n# mu2: 23-26\nmu2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]R\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nmu2\n\n                   Estimate Std. Error\nMult(1, ., L).R1 -0.6061444 0.08512883\nMult(1, ., L).R2  0.5539702 0.08877502\nMult(1, ., L).R3  0.4287935 0.09713147\nMult(1, ., L).R4 -0.3766193 0.10554742\n\n# eta1: 27-30\neta1 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]L\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\neta1\n\n                    Estimate Std. Error\nMult(1, R, .).L1 -0.04977493 0.08992116\nMult(1, R, .).L2  0.65658058 0.06234704\nMult(1, R, .).L3  0.13381443 0.08765352\nMult(1, R, .).L4 -0.74062008 0.04970264\n\n# nu2: 33-36\nnu2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]C\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu2\n\n                    Estimate Std. Error\nMult(1, ., L).C1 -0.35910324  0.2995712\nMult(1, ., L).C2 -0.04079069  0.3606231\nMult(1, ., L).C3  0.82820782  0.1075525\nMult(1, ., L).C4 -0.42831389  0.3177968\n\n# eta2: 37-40\neta2 <- getContrasts(\n  model8,\n  pickCoef(model8, \"[.]L\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\neta2\n\n                    Estimate Std. Error\nMult(1, C, .).L1  0.13230141  0.3592002\nMult(1, C, .).L2  0.59941504  0.2494518\nMult(1, C, .).L3 -0.78745843  0.1409196\nMult(1, C, .).L4  0.05574198  0.3241035\n\ncon <- c(mu1$qvframe[, 1][c(1,4)],\n         nu1$qvframe[, 1][c(1,4)],\n         mu2$qvframe[, 1][c(1,4)],\n         eta1$qvframe[, 1][c(1,4)],\n         nu2$qvframe[, 1][c(1,4)],\n         eta2$qvframe[, 1][c(1,4)])\n\n\nmodel8_se <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n#    constrain = c(13,16,17,20,23,26,27,30,33,36,37,40),\n#    constrainTo = con,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-15\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n...........................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nsummary(model8_se)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), family = poisson, data = ., tolerance = 1e-15, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.64348  -0.68031  -0.02712   0.48954   2.01814  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.58638         NA      NA       NA    \nR2               -0.98265         NA      NA       NA    \nR3               -0.75539         NA      NA       NA    \nR4               -1.57835         NA      NA       NA    \nC2               -1.60110         NA      NA       NA    \nC3               -2.09213         NA      NA       NA    \nC4               -3.43892         NA      NA       NA    \nL2               -1.46517         NA      NA       NA    \nL3               -2.21828         NA      NA       NA    \nL4               -3.81831         NA      NA       NA    \nRscore:Cscore     0.12964    0.02728   4.752 2.01e-06 ***\nMult(., R, C).   -2.78308         NA      NA       NA    \nMult(1, ., C).R1  0.19103         NA      NA       NA    \nMult(1, ., C).R2 -0.39119         NA      NA       NA    \nMult(1, ., C).R3 -0.16857         NA      NA       NA    \nMult(1, ., C).R4  0.23920         NA      NA       NA    \nMult(1, R, .).C1 -0.06786         NA      NA       NA    \nMult(1, R, .).C2  0.35829         NA      NA       NA    \nMult(1, R, .).C3  0.01821         NA      NA       NA    \nMult(1, R, .).C4 -0.29225         NA      NA       NA    \nRscore:Lscore     0.25450    0.02803   9.080  < 2e-16 ***\nMult(., R, L).    2.08992         NA      NA       NA    \nMult(1, ., L).R1 -0.69244         NA      NA       NA    \nMult(1, ., L).R2  0.67140         NA      NA       NA    \nMult(1, ., L).R3  0.52424         NA      NA       NA    \nMult(1, ., L).R4 -0.42261         NA      NA       NA    \nMult(1, R, .).L1 -0.02524         NA      NA       NA    \nMult(1, R, .).L2  0.30312         NA      NA       NA    \nMult(1, R, .).L3  0.06010         NA      NA       NA    \nMult(1, R, .).L4 -0.34639         NA      NA       NA    \nCscore:Lscore     0.20172    0.02585   7.802  < 2e-16 ***\nMult(., C, L).   -1.62312         NA      NA       NA    \nMult(1, ., L).C1  0.17610         NA      NA       NA    \nMult(1, ., L).C2  0.01680         NA      NA       NA    \nMult(1, ., L).C3 -0.41807         NA      NA       NA    \nMult(1, ., L).C4  0.21073         NA      NA       NA    \nMult(1, C, .).L1 -0.01046         NA      NA       NA    \nMult(1, C, .).L2 -0.17379         NA      NA       NA    \nMult(1, C, .).L3  0.31114         NA      NA       NA    \nMult(1, C, .).L4  0.01630         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 45.854 on 36 degrees of freedom\nAIC: 396.17\n\nNumber of iterations: 500\n\noptions(contrasts = c(factor=\"contr.treatment\",\n                      ordered=\"contr.treatment\"))\n# Model 9 - Model 8 with consistent row scores\nmodel9 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C + L) +\n      Rscore:Lscore +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n............\nDone\n\nsummary(model9)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + \n    L) + Rscore:Lscore + Cscore:Lscore + Mult(1, C, L), family = poisson, \n    data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)           3.573962         NA      NA       NA    \nR2                   -0.930605         NA      NA       NA    \nR3                   -0.704942         NA      NA       NA    \nR4                   -1.552585         NA      NA       NA    \nC2                   -1.624447         NA      NA       NA    \nC3                   -2.041365         NA      NA       NA    \nC4                   -3.459926         NA      NA       NA    \nL2                   -1.420163         NA      NA       NA    \nL3                   -2.294787         NA      NA       NA    \nL4                   -3.761473         NA      NA       NA    \nRscore:Cscore         0.133527   0.025355   5.266 1.39e-07 ***\nMult(., R, C + L).    2.355391         NA      NA       NA    \nMult(1, ., C + L).R1  0.537784         NA      NA       NA    \nMult(1, ., C + L).R2 -0.719764         NA      NA       NA    \nMult(1, ., C + L).R3 -0.500123         NA      NA       NA    \nMult(1, ., C + L).R4  0.387774         NA      NA       NA    \nMult(1, R, . + L).C1  0.078887         NA      NA       NA    \nMult(1, R, . + L).C2 -0.152061         NA      NA       NA    \nMult(1, R, . + L).C3  0.018049         NA      NA       NA    \nMult(1, R, . + L).C4  0.206068         NA      NA       NA    \nMult(1, R, C + .).L2 -0.315525         NA      NA       NA    \nMult(1, R, C + .).L3 -0.078397         NA      NA       NA    \nMult(1, R, C + .).L4  0.304352         NA      NA       NA    \nRscore:Lscore         0.248478   0.027223   9.127  < 2e-16 ***\nCscore:Lscore         0.202702   0.025617   7.913  < 2e-16 ***\nMult(., C, L).        1.294362         NA      NA       NA    \nMult(1, ., L).C1      0.031064         NA      NA       NA    \nMult(1, ., L).C2      0.141272         NA      NA       NA    \nMult(1, ., L).C3      0.556003         NA      NA       NA    \nMult(1, ., L).C4     -0.003729         NA      NA       NA    \nMult(1, C, .).L1     -0.118640         NA      NA       NA    \nMult(1, C, .).L2     -0.379592         NA      NA       NA    \nMult(1, C, .).L3      0.306656         NA      NA       NA    \nMult(1, C, .).L4     -0.106316         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 38 degrees of freedom\nAIC: 393.45\n\nNumber of iterations: 69\n\nmu <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]C\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta2 <- getContrasts(\n  model9,\n  pickCoef(model9, \"[.]L\")[4:7],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmodel9.extended <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L +\n      Rscore:Cscore +\n      Mult(1, R, C) +\n      Rscore:Lscore +\n      Mult(1, R, L) +\n      Cscore:Lscore +\n      Mult(1, C, L),\n    constrain = c(13:16, 23:26),\n    constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n......................\nDone\n\nsummary(model9.extended)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), constrain = c(13:16, 23:26), constrainTo = c(mu$qvframe[, \n    1], mu$qvframe[, 1]), family = poisson, data = ., tolerance = 1e-12, \n    trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.582360         NA      NA       NA    \nR2               -0.996191         NA      NA       NA    \nR3               -0.759073         NA      NA       NA    \nR4               -1.560408         NA      NA       NA    \nC2               -1.598464         NA      NA       NA    \nC3               -2.097716         NA      NA       NA    \nC4               -3.477535         NA      NA       NA    \nL2               -1.441178         NA      NA       NA    \nL3               -2.157824         NA      NA       NA    \nL4               -3.810647         NA      NA       NA    \nRscore:Cscore     0.133527   0.025195   5.300 1.16e-07 ***\nMult(., R, C).    0.122492         NA      NA       NA    \nMult(1, ., C).R1  0.561358         NA      NA       NA    \nMult(1, ., C).R2 -0.593325         NA      NA       NA    \nMult(1, ., C).R3 -0.391651         NA      NA       NA    \nMult(1, ., C).R4  0.423618         NA      NA       NA    \nMult(1, R, .).C1  0.843810         NA      NA       NA    \nMult(1, R, .).C2 -3.992700         NA      NA       NA    \nMult(1, R, .).C3 -0.430260         NA      NA       NA    \nMult(1, R, .).C4  3.507240         NA      NA       NA    \nRscore:Lscore     0.248478   0.025211   9.856  < 2e-16 ***\nMult(., R, L).   -1.087007         NA      NA       NA    \nMult(1, ., L).R1  0.561358         NA      NA       NA    \nMult(1, ., L).R2 -0.593325         NA      NA       NA    \nMult(1, ., L).R3 -0.391651         NA      NA       NA    \nMult(1, ., L).R4  0.423618         NA      NA       NA    \nMult(1, R, .).L1 -0.038825         NA      NA       NA    \nMult(1, R, .).L2  0.705782         NA      NA       NA    \nMult(1, R, .).L3  0.146183         NA      NA       NA    \nMult(1, R, .).L4 -0.757064         NA      NA       NA    \nCscore:Lscore     0.202702   0.025596   7.919  < 2e-16 ***\nMult(., C, L).   -1.251416         NA      NA       NA    \nMult(1, ., L).C1 -0.297672         NA      NA       NA    \nMult(1, ., L).C2 -0.127745         NA      NA       NA    \nMult(1, ., L).C3  0.511719         NA      NA       NA    \nMult(1, ., L).C4 -0.351318         NA      NA       NA    \nMult(1, C, .).L1  0.013542         NA      NA       NA    \nMult(1, C, .).L2  0.188593         NA      NA       NA    \nMult(1, C, .).L3 -0.271755         NA      NA       NA    \nMult(1, C, .).L4  0.005275         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 40 degrees of freedom\nAIC: 389.45\n\nNumber of iterations: 79\n\nnu1 <- getContrasts(\n  model9.extended,\n  pickCoef(model9.extended, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta1 <- getContrasts(\n    model9.extended,\n    pickCoef(model9.extended, \"[.]L\")[1:4],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel9.phis <-\n  freq_tab_3.1 %>%  gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) +\n      Rscore:Lscore + \n      Mult(1, R, L) + \n      Cscore:Lscore + \n      Mult(1, C, L),\n    constrain = c(13:20, 23:30, 33:40),\n    constrainTo = c(\n      mu$qvframe[, 1],\n      nu1$qvframe[, 1],\n      mu$qvframe[, 1],\n      eta1$qvframe[, 1],\n      nu2$qvframe[, 1],\n      eta2$qvframe[, 1]\n    ),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nsummary(model9.phis)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    Rscore:Lscore + Mult(1, R, L) + Cscore:Lscore + Mult(1, C, \n    L), constrain = c(13:20, 23:30, 33:40), constrainTo = c(mu$qvframe[, \n    1], nu1$qvframe[, 1], mu$qvframe[, 1], eta1$qvframe[, 1], \n    nu2$qvframe[, 1], eta2$qvframe[, 1]), family = poisson, data = ., \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.56526  -0.67024  -0.02438   0.54037   1.98333  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.56903    0.08137  43.862  < 2e-16 ***\nR2               -0.97605    0.11881  -8.215  < 2e-16 ***\nR3               -0.74245    0.14810  -5.013 5.36e-07 ***\nR4               -1.55801    0.22175  -7.026 2.13e-12 ***\nC2               -1.59504    0.10577 -15.081  < 2e-16 ***\nC3               -2.08142    0.17240 -12.073  < 2e-16 ***\nC4               -3.47861    0.26841 -12.960  < 2e-16 ***\nL2               -1.42666    0.10739 -13.285  < 2e-16 ***\nL3               -2.18148    0.17791 -12.262  < 2e-16 ***\nL4               -3.81133    0.27937 -13.643  < 2e-16 ***\nRscore:Cscore     0.13353    0.02486   5.371 7.83e-08 ***\nMult(., R, C).    0.66121    0.14008   4.720 2.36e-06 ***\nMult(1, ., C).R1  0.56136         NA      NA       NA    \nMult(1, ., C).R2 -0.59333         NA      NA       NA    \nMult(1, ., C).R3 -0.39165         NA      NA       NA    \nMult(1, ., C).R4  0.42362         NA      NA       NA    \nMult(1, R, .).C1  0.15965         NA      NA       NA    \nMult(1, R, .).C2 -0.73633         NA      NA       NA    \nMult(1, R, .).C3 -0.07638         NA      NA       NA    \nMult(1, R, .).C4  0.65306         NA      NA       NA    \nRscore:Lscore     0.24848    0.02515   9.879  < 2e-16 ***\nMult(., R, L).   -1.13662    0.13964  -8.140  < 2e-16 ***\nMult(1, ., L).R1  0.56136         NA      NA       NA    \nMult(1, ., L).R2 -0.59333         NA      NA       NA    \nMult(1, ., L).R3 -0.39165         NA      NA       NA    \nMult(1, ., L).R4  0.42362         NA      NA       NA    \nMult(1, R, .).L1 -0.05054         NA      NA       NA    \nMult(1, R, .).L2  0.66157         NA      NA       NA    \nMult(1, R, .).L3  0.12640         NA      NA       NA    \nMult(1, R, .).L4 -0.73743         NA      NA       NA    \nCscore:Lscore     0.20270    0.02315   8.756  < 2e-16 ***\nMult(., C, L).    0.28351    0.10068   2.816  0.00486 ** \nMult(1, ., L).C1 -0.33661         NA      NA       NA    \nMult(1, ., L).C2 -0.08944         NA      NA       NA    \nMult(1, ., L).C3  0.84069         NA      NA       NA    \nMult(1, ., L).C4 -0.41464         NA      NA       NA    \nMult(1, C, .).L1 -0.08991         NA      NA       NA    \nMult(1, C, .).L2 -0.62111         NA      NA       NA    \nMult(1, C, .).L3  0.77584         NA      NA       NA    \nMult(1, C, .).L4 -0.06482         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 47.134 on 48 degrees of freedom\nAIC: 373.45\n\nNumber of iterations: 3\n\nmu\n\n                       Estimate Std. Error\nMult(1, ., C + L).R1  0.5613577 0.07946201\nMult(1, ., C + L).R2 -0.5933253 0.06976100\nMult(1, ., C + L).R3 -0.3916506 0.08375491\nMult(1, ., C + L).R4  0.4236182 0.08896023\n\nnu1\n\n                    Estimate Std. Error\nMult(1, R, .).C1  0.15964986 0.14637516\nMult(1, R, .).C2 -0.73633460 0.08871449\nMult(1, R, .).C3 -0.07637713 0.15684115\nMult(1, R, .).C4  0.65306187 0.10868144\n\neta1\n\n                    Estimate Std. Error\nMult(1, R, .).L1 -0.05053742 0.08981862\nMult(1, R, .).L2  0.66156822 0.06038098\nMult(1, R, .).L3  0.12639555 0.08679365\nMult(1, R, .).L4 -0.73742635 0.04940126\n\nnu2\n\n                    Estimate Std. Error\nMult(1, ., L).C1 -0.33661004 0.30087703\nMult(1, ., L).C2 -0.08944163 0.36058729\nMult(1, ., L).C3  0.84069369 0.08936905\nMult(1, ., L).C4 -0.41464201 0.32252708\n\neta2\n\n                    Estimate Std. Error\nMult(1, C, .).L1 -0.08990831  0.3610226\nMult(1, C, .).L2 -0.62111332  0.2399524\nMult(1, C, .).L3  0.77584334  0.1519881\nMult(1, C, .).L4 -0.06482171  0.3227342\n\nmodel.summary(model9)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model9                 38  47.1 -231.  6.25 0.147\n\n# Model 10 - Model 8 with consistent col scores\nmodel10 <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, C, R + L) +\n      Rscore:Lscore + \n      Mult(1, R, L) + \n      Cscore:Lscore,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n.......\nDone\n\nmodel.summary(model10)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta      p\n  <chr>               <int> <dbl> <dbl> <dbl>  <dbl>\n1 model10                38  50.9 -227.  6.31 0.0788\n\n# Model 11 - Model 8 with consistent layer scores\nmodel11 <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, L, R + C) +\n      Rscore:Lscore +\n      Mult(1, R, C) +\n      Cscore:Lscore,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.........................\nDone\n\nmodel.summary(model11)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta      p\n  <chr>               <int> <dbl> <dbl> <dbl>  <dbl>\n1 model11                38  53.6 -225.  6.58 0.0477\n\n# Model 12 - Modek 9 + U(RL)=U(CL)\n# To impose equality constraint on U(RL) & U(CL),\n# a covariate is created in following manner:\n\nfreq_tab_3.1 <- freq_tab_3.1%>% \n  mutate(cov_rcl = Rscore * Lscore + Cscore * Lscore)\nmodel12 <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C + L) +\n      cov_rcl + \n      Mult(1, C, L),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..........................................................\nDone\n\n#summary(model12)\nmodel.summary(model12)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12                39  48.6 -237.  6.57 0.140\n\nmu <- getContrasts(\n  model12,\n  pickCoef(model12, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <-\n  getContrasts(\n    model12,\n    pickCoef(model12, \"[.]C\")[5:8],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\neta2 <-\n  getContrasts(\n    model12,\n    pickCoef(model12, \"[.]L\")[4:7],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel12.extended <-\n  freq_tab_3.1 %>%\n  gnm(Freq ~ R + C + L + \n        Rscore:Cscore + \n        Mult(1, R, C) +\n        cov_rcl + \n        Mult(1, R, L) + \n        Mult(1, C, L),\n      constrain = c(13:16, 23:26),\n      constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n      data = .,\n      family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...............................\nDone\n\nsummary(model12.extended)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L) + Mult(1, C, L), constrain = c(13:16, \n    23:26), constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]), \n    family = poisson, data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.58844  -0.76809   0.02278   0.56330   1.92999  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.57925         NA      NA       NA    \nR2               -0.99260         NA      NA       NA    \nR3               -0.69408         NA      NA       NA    \nR4               -1.39820         NA      NA       NA    \nC2               -1.63377         NA      NA       NA    \nC3               -2.15093         NA      NA       NA    \nC4               -3.65748         NA      NA       NA    \nL2               -1.38736         NA      NA       NA    \nL3               -2.14323         NA      NA       NA    \nL4               -3.74634         NA      NA       NA    \nRscore:Cscore     0.13336    0.02542   5.246 1.55e-07 ***\nMult(., R, C).    0.94820         NA      NA       NA    \nMult(1, ., C).R1 -0.53827         NA      NA       NA    \nMult(1, ., C).R2  0.59767         NA      NA       NA    \nMult(1, ., C).R3  0.38941         NA      NA       NA    \nMult(1, ., C).R4 -0.44880         NA      NA       NA    \nMult(1, R, .).C1 -0.11275         NA      NA       NA    \nMult(1, R, .).C2  0.51000         NA      NA       NA    \nMult(1, R, .).C3  0.06394         NA      NA       NA    \nMult(1, R, .).C4 -0.42324         NA      NA       NA    \ncov_rcl           0.22423    0.01709  13.123  < 2e-16 ***\nMult(., R, L).   -2.52963         NA      NA       NA    \nMult(1, ., L).R1 -0.53827         NA      NA       NA    \nMult(1, ., L).R2  0.59767         NA      NA       NA    \nMult(1, ., L).R3  0.38941         NA      NA       NA    \nMult(1, ., L).R4 -0.44880         NA      NA       NA    \nMult(1, R, .).L1  0.00193         NA      NA       NA    \nMult(1, R, .).L2 -0.31675         NA      NA       NA    \nMult(1, R, .).L3 -0.07357         NA      NA       NA    \nMult(1, R, .).L4  0.31420         NA      NA       NA    \nMult(., C, L).   -0.95295         NA      NA       NA    \nMult(1, ., L).C1  0.25260         NA      NA       NA    \nMult(1, ., L).C2  0.09660         NA      NA       NA    \nMult(1, ., L).C3 -1.01845         NA      NA       NA    \nMult(1, ., L).C4  0.42491         NA      NA       NA    \nMult(1, C, .).L1 -0.02018         NA      NA       NA    \nMult(1, C, .).L2 -0.19195         NA      NA       NA    \nMult(1, C, .).L3  0.16753         NA      NA       NA    \nMult(1, C, .).L4 -0.05400         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 48.569 on 41 degrees of freedom\nAIC: 388.89\n\nNumber of iterations: 88\n\nnu1 <- getContrasts(\n  model12.extended,\n  pickCoef(model12.extended, \"[.]C\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\neta1 <-\n  getContrasts(\n    model12.extended,\n    pickCoef(model12.extended, \"[.]L\")[1:4],\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel12.phis <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) +\n      cov_rcl + Mult(1, R, L) + Mult(1, C, L),\n    constrain = c(13:20, 23:30, 32:39),\n    constrainTo = c(mu$qvframe[, 1], nu1$qvframe[, 1],\n                    mu$qvframe[, 1], eta1$qvframe[, 1], \n                    nu2$qvframe[, 1], eta2$qvframe[, 1]),\n    data = .,\n    family = poisson, \n    trace = F, \n    tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nsummary(model12.phis)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L) + Mult(1, C, L), constrain = c(13:20, \n    23:30, 32:39), constrainTo = c(mu$qvframe[, 1], nu1$qvframe[, \n    1], mu$qvframe[, 1], eta1$qvframe[, 1], nu2$qvframe[, 1], \n    eta2$qvframe[, 1]), family = poisson, data = ., tolerance = 1e-12, \n    trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.58844  -0.76809   0.02278   0.56330   1.92999  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.55535    0.08106  43.859  < 2e-16 ***\nR2               -0.92909    0.11339  -8.194  < 2e-16 ***\nR3               -0.64221    0.12609  -5.093 3.52e-07 ***\nR4               -1.39320    0.17746  -7.851  < 2e-16 ***\nC2               -1.63743    0.10043 -16.304  < 2e-16 ***\nC3               -2.18079    0.15608 -13.973  < 2e-16 ***\nC4               -3.65343    0.23846 -15.321  < 2e-16 ***\nL2               -1.39736    0.10537 -13.261  < 2e-16 ***\nL3               -2.13230    0.17235 -12.372  < 2e-16 ***\nL4               -3.74831    0.27154 -13.804  < 2e-16 ***\nRscore:Cscore     0.13336    0.02490   5.357 8.48e-08 ***\nMult(., R, C).    0.64007    0.13725   4.663 3.11e-06 ***\nMult(1, ., C).R1 -0.53827         NA      NA       NA    \nMult(1, ., C).R2  0.59766         NA      NA       NA    \nMult(1, ., C).R3  0.38941         NA      NA       NA    \nMult(1, ., C).R4 -0.44880         NA      NA       NA    \nMult(1, R, .).C1 -0.18108         NA      NA       NA    \nMult(1, R, .).C2  0.74146         NA      NA       NA    \nMult(1, R, .).C3  0.08067         NA      NA       NA    \nMult(1, R, .).C4 -0.64105         NA      NA       NA    \ncov_rcl           0.22423    0.01636  13.707  < 2e-16 ***\nMult(., R, L).   -1.13998    0.13669  -8.340  < 2e-16 ***\nMult(1, ., L).R1 -0.53827         NA      NA       NA    \nMult(1, ., L).R2  0.59766         NA      NA       NA    \nMult(1, ., L).R3  0.38941         NA      NA       NA    \nMult(1, ., L).R4 -0.44880         NA      NA       NA    \nMult(1, R, .).L1  0.04544         NA      NA       NA    \nMult(1, R, .).L2 -0.66170         NA      NA       NA    \nMult(1, R, .).L3 -0.12210         NA      NA       NA    \nMult(1, R, .).L4  0.73836         NA      NA       NA    \nMult(., C, L).   -0.27613    0.10158  -2.718  0.00656 ** \nMult(1, ., L).C1  0.27770         NA      NA       NA    \nMult(1, ., L).C2  0.13959         NA      NA       NA    \nMult(1, ., L).C3 -0.84752         NA      NA       NA    \nMult(1, ., L).C4  0.43024         NA      NA       NA    \nMult(1, C, .).L1  0.01743         NA      NA       NA    \nMult(1, C, .).L2 -0.65220         NA      NA       NA    \nMult(1, C, .).L3  0.74916         NA      NA       NA    \nMult(1, C, .).L4 -0.11439         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 48.569 on 49 degrees of freedom\nAIC: 372.89\n\nNumber of iterations: 3\n\nmu\n\n                       Estimate Std. Error\nMult(1, ., C + L).R1 -0.5382715 0.07940991\nMult(1, ., C + L).R2  0.5976649 0.06869502\nMult(1, ., C + L).R3  0.3894076 0.08390695\nMult(1, ., C + L).R4 -0.4488010 0.08495489\n\nnu1\n\n                    Estimate Std. Error\nMult(1, R, .).C1 -0.18108336  0.1505749\nMult(1, R, .).C2  0.74145909  0.0888159\nMult(1, R, .).C3  0.08066998  0.1598862\nMult(1, R, .).C4 -0.64104571  0.1141041\n\neta1\n\n                   Estimate Std. Error\nMult(1, R, .).L1  0.0454423 0.08895571\nMult(1, R, .).L2 -0.6617033 0.05943373\nMult(1, R, .).L3 -0.1220991 0.08507409\nMult(1, R, .).L4  0.7383601 0.04862532\n\nnu2\n\n                   Estimate Std. Error\nMult(1, ., L).C1  0.2776974 0.30818568\nMult(1, ., L).C2  0.1395889 0.36977790\nMult(1, ., L).C3 -0.8475231 0.08001496\nMult(1, ., L).C4  0.4302368 0.32326672\n\neta2\n\n                    Estimate Std. Error\nMult(1, C, .).L1  0.01742597  0.3681779\nMult(1, C, .).L2 -0.65219849  0.2296758\nMult(1, C, .).L3  0.74916478  0.1797929\nMult(1, C, .).L4 -0.11439226  0.3321123\n\nmodel.summary(model12)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12                39  48.6 -237.  6.57 0.140\n\n# Model 15\n\n\nfreq_tab_3.1 <-\n  freq_tab_3.1 %>% mutate(cov_rcl = Rscore * Lscore + Cscore * Lscore)\nmodel15 <- freq_tab_3.1 %>%\n  gnm(\n    Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + L) + cov_rcl,\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................................\nDone\n\nsummary(model15)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C + \n    L) + cov_rcl, family = poisson, data = ., tolerance = 1e-12,     trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)           3.53570         NA      NA       NA    \nR2                   -0.85693         NA      NA       NA    \nR3                   -0.59338         NA      NA       NA    \nR4                   -1.41333         NA      NA       NA    \nC2                   -1.69646         NA      NA       NA    \nC3                   -2.18362         NA      NA       NA    \nC4                   -3.67042         NA      NA       NA    \nL2                   -1.48212         NA      NA       NA    \nL3                   -2.17570         NA      NA       NA    \nL4                   -3.75407         NA      NA       NA    \nRscore:Cscore         0.13307    0.02552   5.215 1.84e-07 ***\nMult(., R, C + L).   -3.98718         NA      NA       NA    \nMult(1, ., C + L).R1  0.25707         NA      NA       NA    \nMult(1, ., C + L).R2 -0.38014         NA      NA       NA    \nMult(1, ., C + L).R3 -0.26315         NA      NA       NA    \nMult(1, ., C + L).R4  0.20070         NA      NA       NA    \nMult(1, R, . + L).C1 -0.10593         NA      NA       NA    \nMult(1, R, . + L).C2  0.15835         NA      NA       NA    \nMult(1, R, . + L).C3 -0.03680         NA      NA       NA    \nMult(1, R, . + L).C4 -0.24133         NA      NA       NA    \nMult(1, R, C + .).L2  0.36116         NA      NA       NA    \nMult(1, R, C + .).L3  0.09114         NA      NA       NA    \nMult(1, R, C + .).L4 -0.35397         NA      NA       NA    \ncov_rcl               0.22862    0.01709  13.377  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 44 degrees of freedom\nAIC: 390.3\n\nNumber of iterations: 46\n\nmodel.summary(model15)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model15                44  56.0 -266.  6.83 0.106\n\nmu <- getContrasts(\n  model15,\n  pickCoef(model15, \"[.]R\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu <- getContrasts(\n  model15,\n  pickCoef(model15, \"[.]C\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmodel15.extended <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) +\n      cov_rcl + \n      Mult(1, R, L),\n    constrain = c(13:16, 23:26),\n    constrainTo = c(mu$qvframe[, 1], mu$qvframe[, 1]),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\nsummary(model15.extended)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L), constrain = c(13:16, 23:26), constrainTo = c(mu$qvframe[, \n    1], mu$qvframe[, 1]), family = poisson, data = ., tolerance = 1e-12, \n    trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.56950         NA      NA       NA    \nR2               -0.96904         NA      NA       NA    \nR3               -0.68490         NA      NA       NA    \nR4               -1.42324         NA      NA       NA    \nC2               -1.64759    0.10152  -16.23  < 2e-16 ***\nC3               -2.17084    0.15843  -13.70  < 2e-16 ***\nC4               -3.69546    0.24129  -15.32  < 2e-16 ***\nL2               -1.41533    0.10612  -13.34  < 2e-16 ***\nL3               -2.15885    0.17266  -12.50  < 2e-16 ***\nL4               -3.81953    0.27268  -14.01  < 2e-16 ***\nRscore:Cscore     0.13307    0.02539    5.24  1.6e-07 ***\nMult(., R, C).   -0.91108         NA      NA       NA    \nMult(1, ., C).R1  0.54368         NA      NA       NA    \nMult(1, ., C).R2 -0.59799         NA      NA       NA    \nMult(1, ., C).R3 -0.38839         NA      NA       NA    \nMult(1, ., C).R4  0.44270         NA      NA       NA    \nMult(1, R, .).C1 -0.10235         NA      NA       NA    \nMult(1, R, .).C2  0.54316         NA      NA       NA    \nMult(1, R, .).C3  0.06649         NA      NA       NA    \nMult(1, R, .).C4 -0.43309         NA      NA       NA    \ncov_rcl           0.22862    0.01643   13.91  < 2e-16 ***\nMult(., R, L).    2.08772         NA      NA       NA    \nMult(1, ., L).R1  0.54368         NA      NA       NA    \nMult(1, ., L).R2 -0.59799         NA      NA       NA    \nMult(1, ., L).R3 -0.38839         NA      NA       NA    \nMult(1, ., L).R4  0.44270         NA      NA       NA    \nMult(1, R, .).L1  0.02121         NA      NA       NA    \nMult(1, R, .).L2 -0.36377         NA      NA       NA    \nMult(1, R, .).L3 -0.07593         NA      NA       NA    \nMult(1, R, .).L4  0.39852         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 46 degrees of freedom\nAIC: 386.3\n\nNumber of iterations: 4\n\neta <-\n  getContrasts(\n    model15.extended,\n    pickCoef(model15.extended, \"[.]L\"),\n    ref = \"mean\",\n    scaleRef = \"mean\",\n    scaleWeights = \"unit\"\n  )\n\nmodel15.phis <-\n  freq_tab_3.1 %>% gnm(\n    Freq ~ R + C + L + \n      Rscore:Cscore + \n      Mult(1, R, C) + \n      cov_rcl + \n      Mult(1, R, L),\n    constrain = c(13:20, 23:30),\n    constrainTo = c(mu$qvframe[, 1], \n                    nu$qvframe[, 1], \n                    mu$qvframe[, 1], \n                    eta$qvframe[, 1]),\n    data = .,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nsummary(model15.phis)\n\n\nCall:\ngnm(formula = Freq ~ R + C + L + Rscore:Cscore + Mult(1, R, C) + \n    cov_rcl + Mult(1, R, L), constrain = c(13:20, 23:30), constrainTo = c(mu$qvframe[, \n    1], nu$qvframe[, 1], mu$qvframe[, 1], eta$qvframe[, 1]), \n    family = poisson, data = ., tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98677  -0.75501   0.01756   0.52206   2.97799  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.55464    0.08091  43.935  < 2e-16 ***\nR2               -0.93784    0.11339  -8.271  < 2e-16 ***\nR3               -0.65943    0.12613  -5.228 1.71e-07 ***\nR4               -1.42048    0.17754  -8.001  < 2e-16 ***\nC2               -1.64759    0.10044 -16.404  < 2e-16 ***\nC3               -2.17084    0.15588 -13.927  < 2e-16 ***\nC4               -3.69546    0.23861 -15.488  < 2e-16 ***\nL2               -1.41533    0.10551 -13.414  < 2e-16 ***\nL3               -2.15885    0.17245 -12.519  < 2e-16 ***\nL4               -3.81953    0.27221 -14.032  < 2e-16 ***\nRscore:Cscore     0.13307    0.02492   5.341 9.24e-08 ***\nMult(., R, C).   -0.64172    0.13829  -4.641 3.48e-06 ***\nMult(1, ., C).R1  0.54368         NA      NA       NA    \nMult(1, ., C).R2 -0.59799         NA      NA       NA    \nMult(1, ., C).R3 -0.38839         NA      NA       NA    \nMult(1, ., C).R4  0.44270         NA      NA       NA    \nMult(1, R, .).C1 -0.17165         NA      NA       NA    \nMult(1, R, .).C2  0.74481         NA      NA       NA    \nMult(1, R, .).C3  0.06806         NA      NA       NA    \nMult(1, R, .).C4 -0.64122         NA      NA       NA    \ncov_rcl           0.22862    0.01640  13.939  < 2e-16 ***\nMult(., R, L).    1.13826    0.13726   8.293  < 2e-16 ***\nMult(1, ., L).R1  0.54368         NA      NA       NA    \nMult(1, ., L).R2 -0.59799         NA      NA       NA    \nMult(1, ., L).R3 -0.38839         NA      NA       NA    \nMult(1, ., L).R4  0.44270         NA      NA       NA    \nMult(1, R, .).L1  0.04806         NA      NA       NA    \nMult(1, R, .).L2 -0.65804         NA      NA       NA    \nMult(1, R, .).L3 -0.13012         NA      NA       NA    \nMult(1, R, .).L4  0.74010         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 55.984 on 50 degrees of freedom\nAIC: 378.3\n\nNumber of iterations: 3\n\nmu\n\n                       Estimate Std. Error\nMult(1, ., C + L).R1  0.5436794 0.07818382\nMult(1, ., C + L).R2 -0.5979869 0.06871974\nMult(1, ., C + L).R3 -0.3883879 0.08391754\nMult(1, ., C + L).R4  0.4426954 0.08454001\n\nnu\n\n                        Estimate Std. Error\nMult(1, R, . + L).C1 -0.17164747 0.14998137\nMult(1, R, . + L).C2  0.74480785 0.08583798\nMult(1, R, . + L).C3  0.06806188 0.15421719\nMult(1, R, . + L).C4 -0.64122226 0.11322236\n\neta\n\n                    Estimate Std. Error\nMult(1, R, .).L1  0.04806244 0.08932196\nMult(1, R, .).L2 -0.65804171 0.05969167\nMult(1, R, .).L3 -0.13011596 0.08427834\nMult(1, R, .).L4  0.74009523 0.04837401\n\nmodel.summary(model15)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model15                44  56.0 -266.  6.83 0.106\n\n\n\nbind_rows(model.summary(model1),\nmodel.summary(model2),\nmodel.summary(model4),\nmodel.summary(model6),\nmodel.summary(model7),\nmodel.summary(model8),\nmodel.summary(model9),\nmodel.summary(model10),\nmodel.summary(model11),\nmodel.summary(model12),\nmodel.summary(model15))\n\n# A tibble: 11 × 6\n   `Model Description`    df    L2   BIC Delta        p\n   <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n 1 model1                 54 544.   149. 23.7  3.44e-82\n 2 model2                 39 109.  -176.  9.81 1.42e- 8\n 3 model4                 35  37.7 -218.  4.63 3.47e- 1\n 4 model6                 27  29.0 -169.  4.86 3.61e- 1\n 5 model7                 23  21.9 -146.  3.70 5.24e- 1\n 6 model8                 36  45.9 -218.  6.25 1.26e- 1\n 7 model9                 38  47.1 -231.  6.25 1.47e- 1\n 8 model10                38  50.9 -227.  6.31 7.88e- 2\n 9 model11                38  53.6 -225.  6.58 4.77e- 2\n10 model12                39  48.6 -237.  6.57 1.40e- 1\n11 model15                44  56.0 -266.  6.83 1.06e- 1"
  },
  {
    "objectID": "5-Chapter_4.html",
    "href": "5-Chapter_4.html",
    "title": "4  第4章",
    "section": "",
    "text": "第4章では\nモデル適合度を表示するための関数を準備する．すべてgnmによって推定を行う．"
  },
  {
    "objectID": "5-Chapter_4.html#表4.3",
    "href": "5-Chapter_4.html#表4.3",
    "title": "4  第4章",
    "section": "4.1 表4.3",
    "text": "4.1 表4.3\n\n# Table 4.3\nFreq <- c(201,  29,   8,  13,   5,     152,  29,   2,   8,   0,\n        18,   6,   3,   6,   0,      17,  12,   0,   3,   0,\n        109,  74, 164,  89,  16,     101, 336,   9, 134,   2,\n        7,   6,  45,  30,   6,       7,  41,   7,  63,   0,\n        247,  58,  20,  23,   2,     288,  51,   1,  17,   3,\n        48,  11,  16,  13,   1,      47,  38,   2,  18,   0,\n        157,  68, 178, 116,  27,     165, 321,  27, 168,   1,\n        7,   7,  50,  42,   5,      12,  25,   5,  29,   6)\n\nEduc <- gl(4, 10, 4 * 5 * 2 * 2)\nOcc <- gl(5, 1, 4 * 5 * 2 * 2)\nSex <- gl(2, 5, 4 * 5 * 2 * 2)\nYear <- gl(2, 40, 4 * 5 * 2 * 2)\nL <- Year:Sex\nlevels(L) <- factor(1:4)\n\nRscore <- as.numeric(Educ)\nCscore <- as.numeric(Occ)\n\n\n# Model 1 - RC(0)-L(homogeneous)\nmodel1 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\nsummary(model1)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + L + Educ:L + Occ:L, family = poisson, \n    tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-9.2080  -2.2181  -0.4393   1.7534  10.3493  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.63188    0.07546  61.385  < 2e-16 ***\nEduc2       -2.04867    0.18496 -11.076  < 2e-16 ***\nEduc3        0.56850    0.07822   7.268 3.65e-13 ***\nEduc4       -1.00188    0.12060  -8.307  < 2e-16 ***\nOcc2        -1.06920    0.10808  -9.893  < 2e-16 ***\nOcc3        -0.42050    0.08678  -4.846 1.26e-06 ***\nOcc4        -0.88688    0.10115  -8.768  < 2e-16 ***\nOcc5        -2.51829    0.20006 -12.588  < 2e-16 ***\nL2          -0.58321    0.11600  -5.028 4.96e-07 ***\nL3           0.35568    0.09908   3.590 0.000331 ***\nL4           0.38267    0.09802   3.904 9.46e-05 ***\nEduc2:L2     0.26213    0.26589   0.986 0.324189    \nEduc3:L2     0.54569    0.11433   4.773 1.82e-06 ***\nEduc4:L2     0.52029    0.16809   3.095 0.001966 ** \nEduc2:L3     0.67937    0.21978   3.091 0.001994 ** \nEduc3:L3    -0.12382    0.10396  -1.191 0.233635    \nEduc4:L3    -0.14652    0.16251  -0.902 0.367276    \nEduc2:L4     0.81653    0.21566   3.786 0.000153 ***\nEduc3:L4     0.07042    0.10180   0.692 0.489078    \nEduc4:L4    -0.54042    0.17410  -3.104 0.001908 ** \nOcc2:L2      1.48066    0.13298  11.135  < 2e-16 ***\nOcc3:L2     -2.31314    0.25826  -8.957  < 2e-16 ***\nOcc4:L2      0.60040    0.13656   4.397 1.10e-05 ***\nOcc5:L2     -2.41258    0.73731  -3.272 0.001067 ** \nOcc2:L3     -0.09004    0.14424  -0.624 0.532465    \nOcc3:L3     -0.13260    0.11618  -1.141 0.253725    \nOcc4:L3      0.02568    0.13253   0.194 0.846332    \nOcc5:L3     -0.05541    0.26603  -0.208 0.835011    \nOcc2:L4      0.90622    0.12622   7.179 7.00e-13 ***\nOcc3:L4     -2.26247    0.19508 -11.598  < 2e-16 ***\nOcc4:L4      0.09529    0.12843   0.742 0.458122    \nOcc5:L4     -1.41745    0.37680  -3.762 0.000169 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 1370.9 on 48 degrees of freedom\nAIC: 1796.7\n\nNumber of iterations: 6\n\nmodel.summary(model1)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta         p\n  <chr>               <int> <dbl> <dbl> <dbl>     <dbl>\n1 model1                 48 1371.  972.  23.8 1.37e-255\n\n# Model 2 - RC(1)-L(homogeneous)\nmodel2 <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + Mult(1, Educ, Occ),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-12\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........................................\nDone\n\nmodel.summary(model2)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 model2                 42  144. -205.  6.39 4.54e-13\n\n# Model 3 - RC(1)-L(heterogeneous)\nmodel3 <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + Mult(L, L:Educ, L:Occ),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-12\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................\nDone\n\nmodel.summary(model3)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta          p\n  <chr>               <int> <dbl> <dbl> <dbl>      <dbl>\n1 model3                 24  69.1 -130.  3.04 0.00000303\n\n# Model 4 - RC(2)-L(homogeneous)\nmodel4 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + instances(Mult(1, Educ, Occ), 2)\n    ,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-8\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................\nDone\n\nmodel.summary(model4)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 model4                 38  117. -199.  5.24 4.93e-10\n\n# Model 4 - RC(2)-L(heterogeneous)\nmodel5 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n      instances(Mult(L, L:Educ, L:Occ), 2),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-10,\n    iterStart = 5,\n    iterMax = 1e6,\n    verbose = F\n  )\nmodel.summary(model5)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model5                  8  5.83 -60.7 0.437 0.666\n\n# Model 6 - RC(3)-L(homogeneous)\nmodel6 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n      instances(Mult(1, Educ, Occ), 3)\n    ,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....\nDone\n\nmodel.summary(model6)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 model6                 36  113. -186.  5.19 6.60e-10\n\n# Model 7 - RC(3)-L(heterogeneous)\nmodel7 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n      instances(Mult(L, L:Educ, L:Occ), 3),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n...........................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(model7)\n\n# A tibble: 1 × 6\n  `Model Description`    df       L2      BIC         Delta     p\n  <chr>               <int>    <dbl>    <dbl>         <dbl> <dbl>\n1 model7                  0 3.28e-11 3.28e-11 0.00000000495     0\n\n# Model 8- U+RC(homogeneous)\nmodel8 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n      Rscore:Cscore + \n      Mult(1, Educ, Occ),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-6,\n    iterStart = 20,\n    iterMax = 100000\n  )\n\nInitialising\nRunning start-up iterations....................\nRunning main iterations..............\nDone\n\nmodel.summary(model8)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 model8                 41  125. -216.  5.58 2.18e-10\n\nmodel8$deviance - model8$df * log(4078)\n\n[1] -216.0967\n\n# Model 8 - U+RC(heterogeneous)\nRscore <- as.numeric(Educ)\nCscore <- as.numeric(Occ)\nmodel9 <-\n  gnm(\n    Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n      Rscore:Cscore:L + \n      Mult(L, L:Educ, L:Occ),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-6,\n    iterStart = 20,\n    iterMax = 100000,\n    verbose = F\n  )\nmodel.summary(model9)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model9                 20  27.5 -139.  1.50 0.122\n\nmodel9$deviance - model9$df * log(4078)\n\n[1] -138.7952\n\nmodel9$deviance - 20 * log(4078)\n\n[1] -138.7952\n\nmodel9$deviance - 22 * log(4078)\n\n[1] -155.4219\n\npchisq(27.47, 20, lower.tail = FALSE)\n\n[1] 0.1225512\n\npchisq(27.47, 22, lower.tail = FALSE)\n\n[1] 0.1939168"
  },
  {
    "objectID": "5-Chapter_4.html#表4.6",
    "href": "5-Chapter_4.html#表4.6",
    "title": "4  第4章",
    "section": "4.2 表4.6",
    "text": "4.2 表4.6\n\n# Table 4.6\nFreq <- c(201, 29, 8,13, 5, 152,29, 2, 8, 0,\n          18, 6, 3, 6, 0,17,12, 0, 3, 0,\n          109,74, 164,89,16, 101, 336, 9, 134, 2,\n          7, 6,45,30, 6, 7,41, 7,63, 0,\n          247,58,20,23, 2, 288,51, 1,17, 3,\n          48,11,16,13, 1,47,38, 2,18, 0,\n          157,68, 178, 116,27, 165, 321,27, 168, 1,\n          7, 7,50,42, 5,12,25, 5,29, 6)\n\nEduc <- gl(4, 10, 4 * 5 * 2 * 2)\nOcc <- gl(5, 1, 4 * 5 * 2 * 2)\nSex <- gl(2, 5, 4 * 5 * 2 * 2)\nYear <- gl(2, 40, 4 * 5 * 2 * 2)\nL <- Year:Sex\nlevels(L) <- factor(1:4)\nRscore <- as.numeric(Educ)\nCscore <- as.numeric(Occ)\n\n# Model 1\nmodel1.un <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L +\n    Mult(L, L:Educ, Occ, inst = 1) +\n    Mult(L, L:Educ, Occ, inst = 2),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-8,\n  iterStart = 20,\n  iterMax = 100000,\n  verbose = F)\nmodel.summary(model1.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta      p\n  <chr>               <int> <dbl> <dbl> <dbl>  <dbl>\n1 model1.un              20  29.2 -137.  1.82 0.0830\n\n# Model 2\nmodel2.un <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n    Mult(L, Educ, L:Occ, inst = 1) + \n    Mult(L, Educ, L:Occ, inst = 2),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-8,\n    iterStart = 20,\n    iterMax = 100000,\n    verbose = F\n  )\nmodel.summary(model2.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model2.un              14  7.97 -108. 0.687 0.891\n\n# Model 3\n# it might not be fitted with gnm!\n\n# Model 4\n# it might not be fitted with gnm!\n\n# Model 5\n# it might not be fitted with gnm!\n\n# Model 6\n# it might not be fitted with gnm!\n\n# Model 7\n# it might not be fitted with gnm!\n\n# Model 8\n# it might not be fitted with gnm!\n\n# Model 9\nmodel9.un <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n    Mult(L, Educ, Occ, inst = 1) + \n    Mult(L, Educ, Occ, inst = 2),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-12,\n  iterStart = 20,\n  iterMax = 100000\n)\n\nInitialising\nRunning start-up iterations....................\nRunning main iterations.........................................................\n...............................................\nDone\n\nmodel.summary(model9.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model9.un              30  38.5 -211.  2.12 0.138\n\nmu1 <- getContrasts(\n  model9.un,\n  pickCoef(model9.un, \"[.]Educ\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu1 <- getContrasts(\n  model9.un,\n  pickCoef(model9.un, \"[.]Occ\")[1:5],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmu2 <- getContrasts(\n  model9.un,\n  pickCoef(model9.un, \"[.]Educ\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <- getContrasts(\n  model9.un,\n  pickCoef(model9.un, \"[.]Occ\")[6:10],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\ncon <- c(mu1$qvframe[, 1][c(1, 4)], \n         nu1$qvframe[, 1][c(1, 5)],\n         mu2$qvframe[, 1][c(1, 4)], \n         nu2$qvframe[, 1][c(1, 5)])\n\n\nset.seed(123456)\nmodel9 <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L +\n    Mult(L, Educ, Occ, inst = 1) + \n    Mult(L, Educ, Occ, inst = 2),\n  constrain = c(37, 40, 41, 45, 50, 53, 54, 58),\n  constrainTo = con,\n  family = poisson,\n  tolerance = 1e-12,\n  iterStart = 20,\n  iterMax = 100000\n)\n\nInitialising\nRunning start-up iterations....................\nRunning main iterations.........................................................\n.............................\n\n\n\nDeviance is not finite\n\n\nWarning: Algorithm failed - no model could be estimated\n\nsummary(model9)\n\nLength  Class   Mode \n     0   NULL   NULL \n\nmu1\n\n                                  Estimate Std. Error\nMult(L, ., Occ, inst = 1).Educ1  0.6402222 0.02882211\nMult(L, ., Occ, inst = 1).Educ2  0.2386164 0.03949527\nMult(L, ., Occ, inst = 1).Educ3 -0.1683115 0.03139203\nMult(L, ., Occ, inst = 1).Educ4 -0.7105272 0.02071164\n\nnu1\n\n                                  Estimate Std. Error\nMult(L, Educ, ., inst = 1).Occ1 -0.7654028 0.02524700\nMult(L, Educ, ., inst = 1).Occ2 -0.2501417 0.04589839\nMult(L, Educ, ., inst = 1).Occ3  0.3979180 0.05170619\nMult(L, Educ, ., inst = 1).Occ4  0.2733327 0.04831936\nMult(L, Educ, ., inst = 1).Occ5  0.3442938 0.08637688\n\nmu2\n\n                                  Estimate Std. Error\nMult(L, ., Occ, inst = 2).Educ1  0.7309442 0.07862794\nMult(L, ., Occ, inst = 2).Educ2 -0.2168538 0.14103742\nMult(L, ., Occ, inst = 2).Educ3 -0.6355624 0.08287906\nMult(L, ., Occ, inst = 2).Educ4  0.1214720 0.17120754\n\nnu2\n\n                                   Estimate Std. Error\nMult(L, Educ, ., inst = 2).Occ1  0.07059438 0.10141736\nMult(L, Educ, ., inst = 2).Occ2 -0.48030206 0.07332532\nMult(L, Educ, ., inst = 2).Occ3 -0.19772154 0.10545108\nMult(L, Educ, ., inst = 2).Occ4 -0.21626011 0.06608227\nMult(L, Educ, ., inst = 2).Occ5  0.82368933 0.03866984\n\nmodel.summary(model9.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model9.un              30  38.5 -211.  2.12 0.138\n\n# Model 10\nLc <- L\nlevels(Lc) <- c(1, 1, 2, 2)\nmodel10.un <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n    Mult(Lc, Educ, Occ) + \n    Mult(L, Educ, Occ),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-8,\n  iterStart = 20,\n  iterMax = 100000,\n  verbose = F\n)\nmodel.summary(model10.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model10.un             32  40.4 -226.  2.17 0.146\n\n# Model 11\nset.seed(1234)\nmodel11.un <- gnm(\n  Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n    Mult(1, Educ, Occ) + \n    Mult(L, Educ, Occ),\n  family = poisson,\n  trace = F,\n  tolerance = 1e-8,\n  iterStart = 20,\n  iterMax = 100000,\n  verbose = F\n)\nmodel.summary(model11.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model11.un             33  43.4 -231.  2.31 0.106\n\n# Model 12\nL.c <- L\nlevels(L.c) <- factor(c(1, 2, 3, 2))\n\nset.seed(1234)\nmodel12.un <-\n  gnm(Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n        Mult(1, Educ, Occ) + \n        Mult(L.c, Educ, Occ),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12,\n    iterStart = 20,\n    iterMax = 100000\n  )\n\nInitialising\nRunning start-up iterations....................\nRunning main iterations.........................................................\n................................................................\nDone\n\nmodel.summary(model12.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12.un             34  44.6 -238.  2.70 0.105\n\nmu1 <- getContrasts(\n  model12.un,\n  pickCoef(model12.un, \"[.]Educ\")[1:4],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu1 <- getContrasts(\n  model12.un,\n  pickCoef(model12.un, \"[.]Occ\")[1:5],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nmu2 <- getContrasts(\n  model12.un,\n  pickCoef(model12.un, \"[.]Educ\")[5:8],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\nnu2 <- getContrasts(\n  model12.un,\n  pickCoef(model12.un, \"[.]Occ\")[6:10],\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n\ncon <- c(mu1$qvframe[, 1][c(1, 4)], nu1$qvframe[, 1][c(1, 5)],\n         mu2$qvframe[, 1][c(1, 4)], nu2$qvframe[, 1][c(1, 5)])\n\nmodel12 <-\n  gnm(Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n        Mult(1, Educ, Occ) + \n        Mult(L.c, Educ, Occ),\n    constrain = c(34, 37, 38, 42, 46, 49, 50, 54),\n    constrainTo = con,\n    family = poisson,\n    trace = F,\n    tolerance = 1e-12,\n    iterStart = 20,\n    iterMax = 100000\n  )\n\nInitialising\nRunning start-up iterations....................\nRunning main iterations.........................................................\n...................\n\n\n\nDeviance is not finite\n\n\nWarning: Algorithm failed - no model could be estimated\n\nsummary(model12)\n\nLength  Class   Mode \n     0   NULL   NULL \n\nmu1\n\n                        Estimate Std. Error\nMult(1, ., Occ).Educ1 -0.6496856 0.02689904\nMult(1, ., Occ).Educ2 -0.2266856 0.03916088\nMult(1, ., Occ).Educ3  0.1712502 0.02789996\nMult(1, ., Occ).Educ4  0.7051210 0.01869796\n\nnu1\n\n                        Estimate Std. Error\nMult(1, Educ, .).Occ1  0.7477472 0.03046619\nMult(1, Educ, .).Occ2  0.2798375 0.04956910\nMult(1, Educ, .).Occ3 -0.3926778 0.05281437\nMult(1, Educ, .).Occ4 -0.2590761 0.04731457\nMult(1, Educ, .).Occ5 -0.3758307 0.08654401\n\nmu2\n\n                          Estimate Std. Error\nMult(L.c, ., Occ).Educ1  0.7697514 0.05982573\nMult(L.c, ., Occ).Educ2 -0.1649990 0.14337525\nMult(L.c, ., Occ).Educ3 -0.6165380 0.08295724\nMult(L.c, ., Occ).Educ4  0.0117856 0.16680372\n\nnu2\n\n                           Estimate Std. Error\nMult(L.c, Educ, .).Occ1  0.04308284 0.07694408\nMult(L.c, Educ, .).Occ2 -0.47712634 0.07295173\nMult(L.c, Educ, .).Occ3 -0.22737747 0.10213888\nMult(L.c, Educ, .).Occ4 -0.16931700 0.06314427\nMult(L.c, Educ, .).Occ5  0.83073797 0.03112819\n\nmodel.summary(model12.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 model12.un             34  44.6 -238.  2.70 0.105\n\n# Model 13\nmodel13.un <-\n  gnm(Freq ~ Educ + Occ + L + Educ:L + Occ:L + \n        Mult(1, Educ, Occ, inst = 1) + \n        Mult(1, Educ, Occ, inst = 2),\n    family = poisson,\n    trace = F,\n    tolerance = 1e-8,\n    iterStart = 20,\n    iterMax = 100000,\n    verbose = F\n  )\nmodel.summary(model13.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 model13.un             38  117. -199.  5.24 4.93e-10\n\n\n\nlibrary(logmult)\n\n\nAttaching package: 'logmult'\n\n\nThe following object is masked from 'package:gnm':\n\n    se\n\nd <- tibble(Freq, Educ, Occ, Sex, Year, L, Rscore, Cscore)\ntab <- xtabs(Freq ~ Educ + Occ + L, data = d)\n\n\n# Model 2\nfit <- rcL(tab, nd = 1,\n    layer.effect = \"none\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations................\nDone\n\nfit\n\nCall:\nrcL(tab = tab, nd = 1, layer.effect = \"none\")\n\nIntrinsic association coefficients:\n     Dim1 \n[1,] 0.657\n\nNormalized row scores (Educ) for all layers:\n     1      2      3      4 \n 1.428  0.416 -0.477 -1.701 \n\nNormalized column scores (Occ) for all layers:\n     1      2      3      4      5 \n 1.171 -0.236 -1.272 -1.076 -1.053 \n\nNormalization weights: marginal\nDeviance:              143.8274\nPearson chi-squared:   152.4751\nDissimilarity index:   6.388286%\nResidual df:           42\nBIC:                   -205.3338\nAIC:                   59.82743\n\n# Model 3\nfit <- rcL(tab, nd = 1,\n    layer.effect = \"heterogeneous\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...................\nDone\n\nfit\n\nCall:\nrcL(tab = tab, nd = 1, layer.effect = \"heterogeneous\")\n\nIntrinsic association coefficients:\n  Dim1 \n1 0.644\n2 0.870\n3 0.562\n4 0.683\n\nNormalized row scores (Educ):\n, , 1\n\n  Dim1  \n1  1.457\n2  0.520\n3 -0.542\n4 -1.488\n\n, , 2\n\n  Dim1  \n1  1.395\n2  0.588\n3 -0.470\n4 -1.759\n\n, , 3\n\n  Dim1  \n1  1.403\n2  0.447\n3 -0.452\n4 -1.793\n\n, , 4\n\n  Dim1  \n1  1.534\n2  0.159\n3 -0.598\n4 -1.161\n\n\nNormalized column scores (Occ):\n, , 1\n\n  Dim1  \n1  1.093\n2 -0.024\n3 -1.537\n4 -1.069\n5 -0.715\n\n, , 2\n\n  Dim1  \n1  1.195\n2 -0.341\n3 -1.118\n4 -1.141\n5 -0.413\n\n, , 3\n\n  Dim1  \n1  0.958\n2  0.312\n3 -1.415\n4 -1.294\n5 -1.417\n\n, , 4\n\n  Dim1  \n1  1.185\n2 -0.383\n3 -1.466\n4 -0.827\n5 -0.337\n\n\nNormalization weights: marginal\nDeviance:              69.06197\nPearson chi-squared:   88.05995\nDissimilarity index:   3.038593%\nResidual df:           24\nBIC:                   -130.4587\nAIC:                   21.06197\n\n# Model 4\nfit <- rcL(tab, nd = 2,\n    layer.effect = \"none\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.................\nDone\n\nfit\n\nCall:\nrcL(tab = tab, nd = 2, layer.effect = \"none\")\n\nIntrinsic association coefficients:\n     Dim1   Dim2  \n[1,] 0.6277 0.0863\n\nNormalized row scores (Educ) for all layers:\n  Dim1   Dim2  \n1  1.458  0.480\n2  0.425 -0.103\n3 -0.520 -0.695\n4 -1.549  2.607\n\nNormalized column scores (Occ) for all layers:\n  Dim1    Dim2   \n1  1.1703  0.3450\n2 -0.2552 -1.4735\n3 -1.3890  0.0154\n4 -0.9827  1.1830\n5 -0.8680  2.3096\n\nNormalization weights: marginal\nDeviance:              117.3838\nPearson chi-squared:   122.1628\nDissimilarity index:   5.236715%\nResidual df:           38\nBIC:                   -198.524\nAIC:                   41.38378\n\n# Model 5\nfit <- rcL(tab, nd = 2,\n    layer.effect = \"heterogeneous\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n................................................................................\n...........................\nDone\n\nfit\n\nCall:\nrcL(tab = tab, nd = 2, layer.effect = \"heterogeneous\")\n\nIntrinsic association coefficients:\n  Dim1   Dim2  \n1 0.6502 0.0943\n2 4.2413 0.4108\n3 0.5696 0.0757\n4 0.6765 0.1914\n\nNormalized row scores (Educ):\n, , 1\n\n  Dim1     Dim2    \n1  1.45352  0.45162\n2  0.51234 -0.02060\n3 -0.53379 -0.69282\n4 -1.51746  2.62495\n\n, , 2\n\n  Dim1     Dim2    \n1  1.52661  0.24250\n2 -0.00802  1.36857\n3 -0.78150  0.23483\n4  0.00888 -2.91553\n\n, , 3\n\n  Dim1     Dim2    \n1  1.38340  0.71281\n2  0.44660 -0.57412\n3 -0.42823 -0.71739\n4 -1.86901  2.36677\n\n, , 4\n\n  Dim1     Dim2    \n1  1.54808  0.21241\n2  0.13984 -0.58450\n3 -0.63135 -0.54666\n4 -0.99808  2.85541\n\n\nNormalized column scores (Occ):\n, , 1\n\n  Dim1     Dim2    \n1  1.06815  0.26848\n2 -0.00474 -1.18599\n3 -1.70563 -0.75487\n4 -0.94238  1.42995\n5 -0.56999  2.63870\n\n, , 2\n\n  Dim1     Dim2    \n1  0.30521  1.09050\n2  0.01328 -0.11121\n3  0.10725 -1.32567\n4 -0.02157 -1.23729\n5 -7.28179  0.87125\n\n, , 3\n\n  Dim1     Dim2    \n1  0.98305 -0.55082\n2  0.24927  0.94783\n3 -1.48810 -1.21427\n4 -1.16872  0.97409\n5 -1.78377 -3.81045\n\n, , 4\n\n  Dim1     Dim2    \n1  1.15659 -0.16207\n2 -0.42550 -0.63682\n3 -1.48072  0.27185\n4 -0.81835  0.40919\n5  0.93490  6.79479\n\n\nNormalization weights: marginal\nDeviance:              5.833864\nPearson chi-squared:   4.354907\nDissimilarity index:   0.436722%\nResidual df:           8\nBIC:                   -60.67303\nAIC:                   -10.16614\n\n# Model 6\nfit <- rcL(tab, nd = 3,\n    layer.effect = \"none\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....\nDone\n\nfit\n\nCall:\nrcL(tab = tab, nd = 3, layer.effect = \"none\")\n\nIntrinsic association coefficients:\n     Dim1   Dim2   Dim3  \n[1,] 0.6287 0.0867 0.0499\n\nNormalized row scores (Educ) for all layers:\n  Dim1   Dim2   Dim3  \n1  1.456  0.533  0.346\n2  0.437 -0.631 -3.762\n3 -0.521 -0.657  0.315\n4 -1.549  2.584 -0.348\n\nNormalized column scores (Occ) for all layers:\n  Dim1    Dim2    Dim3   \n1  1.1701  0.3410 -0.1004\n2 -0.2525 -1.4473  0.3582\n3 -1.3804  0.0413  0.1242\n4 -0.9949  1.0643 -1.0180\n5 -0.8408  3.0518  6.4839\n\nNormalization weights: marginal\nDeviance:              113.1797\nPearson chi-squared:   117.7575\nDissimilarity index:   5.186927%\nResidual df:           36\nBIC:                   -186.1013\nAIC:                   41.17975\n\n# Model 7\nfit <- rcL(tab, nd = 3,\n    layer.effect = \"heterogeneous\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.\n\n\n\nDeviance is not finite\n\n\nWarning: Algorithm failed - no model could be estimated\n\nfit\n\nNULL"
  },
  {
    "objectID": "6-Chapter_5.html",
    "href": "6-Chapter_5.html",
    "title": "5  第5章",
    "section": "",
    "text": "library(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)"
  },
  {
    "objectID": "6-Chapter_5.html#表5.1",
    "href": "6-Chapter_5.html#表5.1",
    "title": "5  第5章",
    "section": "5.1 表5.1",
    "text": "5.1 表5.1\n\n# Table 5.1\nFreq<-c(118, 28,  32,  6,  7,\n        218, 28,  97, 12, 14,\n         11,  2,   4,  1,  1,\n        104, 22,  61,  8,  5,\n        117, 24,  70,  9,  7,\n         42,  6,  20,  2,  0,\n         48, 16, 104, 14,  9,\n        128, 52,  81, 14, 12)\n\n\nWorries<-gl(8,5)\nSituations<-gl(5,1,8*5)\n\n\n# Model 1 - Independence\nm1<-gnm(Freq~Worries+Situations,family=poisson,trace=F,tolerance = 1e-12)\nmodel.summary(m1)\n\n[1] \"Model Summary:\"\n\n\n Df       L2            p  AIC(L2)   BIC(L2)    Delta\n 28 121.4661 1.307612e-13 65.46607 -84.29438 9.844607\n\n# Model 2 - RC(1)\nm2<-gnm(Freq~Worries+Situations+Mult(1,Worries,Situations),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m2)\n\n[1] \"Model Summary:\"\n\n\n Df      L2            p  AIC(L2)   BIC(L2)    Delta\n 27 121.496 5.975046e-14 67.49595 -76.91591 9.833462\n\n# Model 3 - RC(1) with equality constraints on\n# MIL=ECO=MTO, ENR=SAB=OTH and ASAF=IFAA\nWorries.a<-Worries\nlevels(Worries.a)<-factor(c(1,2,2,3,3,2,4,3))\nWorries.a\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 4 4 4 4 4 3 3 3 3 3\nLevels: 1 2 3 4\n\nSituations.a<-Situations\nlevels(Situations.a)<-factor(c(1,2,3,3,4))\nSituations.a\n\n [1] 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4\nLevels: 1 2 3 4\n\nm3.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.a,Situations.a),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n.............................\nDone\n\nmodel.summary(m3.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 32 925.4714 8.207554e-174 861.4714 690.3166 30.30552\n\nmu<-getContrasts(m3.un, pickCoef(m3.un, \"[.]Worries.a\"),\n                ref = c(1,3,3,1)/8, scaleRef = c(1,3,3,1)/8,\n                scaleWeights = c(1,3,3,1))\nnu<-getContrasts(m3.un, pickCoef(m3.un, \"[.]Situations.a\"),\n                ref = c(1,1,2,1)/5, scaleRef = c(1,1,2,1)/5,\n                scaleWeights = c(1,1,2,1))\n\ncon<-c(mu$qvframe[,1][c(1,4)],nu$qvframe[,1][c(1,4)])\nm3<-gnm(Freq~Worries+Situations+Mult(1,Worries.a,Situations.a),family=poisson,\n             constrain=c(14,17,18,21),constrainTo=con,\n             trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..............................\nDone\n\nsummary(m3);mu;nu;model.summary(m3.un)\n\n\nCall:\ngnm(formula = Freq ~ Worries + Situations + Mult(1, Worries.a, \n    Situations.a), constrain = c(14, 17, 18, 21), constrainTo = con, \n    family = poisson, tolerance = 1e-12, trace = F)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-11.364   -4.566   -1.177    1.247   11.623  \n\nCoefficients:\n                                    Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                          3.50501    0.04289  81.724  < 2e-16 ***\nWorries1                             0.00000         NA      NA       NA    \nWorries2                             0.00000         NA      NA       NA    \nWorries3                             0.00000         NA      NA       NA    \nWorries4                             0.00000         NA      NA       NA    \nWorries5                             0.00000         NA      NA       NA    \nWorries6                             0.00000         NA      NA       NA    \nWorries7                             0.00000         NA      NA       NA    \nSituations1                          0.00000         NA      NA       NA    \nSituations2                          0.00000         NA      NA       NA    \nSituations3                          0.00000         NA      NA       NA    \nSituations4                          0.00000         NA      NA       NA    \nMult(., Worries.a, Situations.a).   -0.45649    0.46489  -0.982 0.326138    \nMult(1, ., Situations.a).Worries.a1  0.11313         NA      NA       NA    \nMult(1, ., Situations.a).Worries.a2 -3.63355    3.70632  -0.980 0.326906    \nMult(1, ., Situations.a).Worries.a3 -4.05192    4.13163  -0.981 0.326737    \nMult(1, ., Situations.a).Worries.a4 -0.35379         NA      NA       NA    \nMult(1, Worries.a, .).Situations.a1  0.66229         NA      NA       NA    \nMult(1, Worries.a, .).Situations.a2 -0.21821    0.05836  -3.739 0.000185 ***\nMult(1, Worries.a, .).Situations.a3 -0.01290    0.03812  -0.338 0.734996    \nMult(1, Worries.a, .).Situations.a4 -0.72845         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1162.5 on 34 degrees of freedom\nAIC: 1360.8\n\nNumber of iterations: 97\n\n\n                                      Estimate Std. Error\nMult(1, ., Situations.a).Worries.a1  0.1131301 0.11361061\nMult(1, ., Situations.a).Worries.a2  0.4170232 0.02269737\nMult(1, ., Situations.a).Worries.a3 -0.3368043 0.03042467\nMult(1, ., Situations.a).Worries.a4 -0.3537867 0.08354914\n\n\n                                       Estimate Std. Error\nMult(1, Worries.a, .).Situations.a1  0.66229120 0.02512458\nMult(1, Worries.a, .).Situations.a2 -0.11763705 0.03837698\nMult(1, Worries.a, .).Situations.a3  0.09189854 0.01868966\nMult(1, Worries.a, .).Situations.a4 -0.72845124 0.02397519\n\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 32 925.4714 8.207554e-174 861.4714 690.3166 30.30552\n\n# Model 4 - RC(1) with equality constraints on\n# MIL=ECO=MTO=ENR=SAB=OTH and ASAF=IFAA\nWorries.b<-Worries\nlevels(Worries.b)<-factor(c(1,2,2,2,2,2,3,2))\nWorries.b\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 2 2 2 2 2\nLevels: 1 2 3\n\nm4.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.b,Situations.a),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........................................\nDone\n\nmodel.summary(m4.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)   Delta\n 33 964.1288 3.382326e-181 898.1288 721.6254 30.4467\n\n# Model 5\nm5.un<-gnm(Freq~Worries+Situations+Mult(1,Worries,Situations,inst=1)\n         +Mult(1,Worries,Situations,inst=2),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m5.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2         p   AIC(L2)   BIC(L2)    Delta\n 17 30.33691 0.0240152 -3.663086 -94.58907 3.959596\n\n# Model 6 - RC(2) with equality constraints on\n# ECO=MTO=MIL=ENR=SAB and ASAF=IFAA in both dimensions\nWorries.c<-Worries\nlevels(Worries.c)<-factor(c(1,2,2,2,2,2,3,4))\nWorries.c\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4\nLevels: 1 2 3 4\n\nset.seed(12345)\nm6.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.c,Situations.a,inst=1)\n         +Mult(1,Worries.c,Situations.a,inst=2),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............................................................\nDone\n\nmodel.summary(m6.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 27 853.0971 2.550771e-162 799.0971 654.6853 27.69847"
  },
  {
    "objectID": "6-Chapter_5.html#表5.4",
    "href": "6-Chapter_5.html#表5.4",
    "title": "5  第5章",
    "section": "5.2 表5.4",
    "text": "5.2 表5.4\n\n# Table 5.4\nFreq<-c(1096,  1847,  1255,  925,    3321,  6123,  6830,  5524,\n        1541,  3134,  3145, 3300,    1915,  4429,  7035,  9421,\n        4183,  5139,  1857, 1272,    8080,  8586,  4788,  4294,\n        6033,  9211,  5046, 1058,   28130, 44589, 20074,  3408,\n        4354, 13430, 18670, 9821,    2250,  9075, 18286, 14358,\n       14587, 31470, 16390, 3751,    8242, 17532, 12825,  3956,\n        1517,  5820,  6197, 2372,     721,  2909,  4141,  2070,\n        3581,  9268,  5463, 1007,    1341,  3808,  3163,   815,\n        1454,  3109,  1055,  888,     563,  1909,  1018,  1051,\n        3237,  3851,   377,  102,     731,   858,   247,    84,\n       14882, 22182,  5363, 1136,   11650, 15818,  5524,  2122,\n        6033,  3475,    63,   18,    1603,  1005,    30,    16,\n        \n        5968,  8783,  7701, 6483,    8733, 14329, 19386, 28143,\n        1011,  2162,  3536, 6649,     697,  1299,  2362, 10796,\n        3214,  3621,  2485, 3177,     793,  1134,  1292,  3597,\n       11532, 16837,  6975, 1839,    2563,  2995,  2060,  1600,\n        1009,  2719,  3521, 3409,     296,   503,   626,  1273,\n        1586,  3025,  1726,  668,     245,   415,   238,   218,\n         387,   941,   564,  316,      86,   138,    79,    48,\n         994,  1988,   542,  145,     158,   259,   101,    56,\n         171,   409,   223,  245,      65,   172,    99,   174,\n         293,   290,    67,   31,      32,    62,    18,    30,\n        4288,  4916,  1452,  766,     616,   794,   347,   300,\n         370,   186,     3,    4,      67,    37,     5,     2)\n\nIncome<-gl(4,1,192)\nOcc<-gl(12,8,192)\nE1<-gl(2,4,192)\nE2<-gl(2,96,192)\nEduc<-E2:E1\nlevels(Educ)<-1:4\n\n#nEduc<-as.numeric(Educ)\n#nAttitude<-as.numeric(Attitude)\n#Attitude.c<-Attitude\n#levels(Attitude.c)<-c(\"1\",\"2\",\"3\",\"3\")\nTable<-data.frame(Freq,Income,Occ,Educ)\n########################################################################################\n\n# Table 5.5\n# Model 1: Complete Independence\nm1<-gnm(Freq~Educ+Occ+Income,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m1) \n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 174 586906.2 0 586558.2 584536.9 33.84897\n\n# Model 2: Conditional Independence\nm2<-gnm(Freq~Educ*Occ+Income*Occ,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m2)\n\n[1] \"Model Summary:\"\n\n\n  Df      L2 p AIC(L2)  BIC(L2)    Delta\n 108 27957.4 0 27741.4 26486.78 6.003195\n\n# Model 3: All two-way interaction\nm3<-gnm(Freq~Educ*Occ+Income*Occ+Educ*Income,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m3)\n\n[1] \"Model Summary:\"\n\n\n Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 99 6540.396 0 6342.396 5192.331 2.635334\n\n# Model 4: RC(1)+RL(1) partial association\nm4<-gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ)+Mult(1,Occ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m4)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 161 253618.9 0 253296.9 251426.6 21.93752\n\n# Model 5: Model 4 with consistent row (occupation) scores\nm5<-gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ+Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n.........\nDone\n\nmodel.summary(m5)\n\n[1] \"Model Summary:\"\n\n\n  Df     L2 p AIC(L2)  BIC(L2)    Delta\n 176 580146 0  579794 577749.4 34.02388\n\nmu<-getContrasts(m5, pickCoef(m5, \"[.]Occ\")[1:12],\n       ref = \"mean\", scaleRef = \"mean\",scaleWeights = \"unit\")\nmu\n\n                                   Estimate   Std. Error\nMult(1, ., Educ + Income).Occ1   0.33839063 0.0008640428\nMult(1, ., Educ + Income).Occ2   0.21498414 0.0005596694\nMult(1, ., Educ + Income).Occ3   0.16684069 0.0007135237\nMult(1, ., Educ + Income).Occ4   0.27819124 0.0005931120\nMult(1, ., Educ + Income).Occ5   0.18522878 0.0006430725\nMult(1, ., Educ + Income).Occ6   0.17800946 0.0006694356\nMult(1, ., Educ + Income).Occ7  -0.12247946 0.0020470139\nMult(1, ., Educ + Income).Occ8  -0.05945973 0.0017761063\nMult(1, ., Educ + Income).Occ9  -0.36163327 0.0028438260\nMult(1, ., Educ + Income).Occ10 -0.52644741 0.0029566216\nMult(1, ., Educ + Income).Occ11  0.16967565 0.0007019976\nMult(1, ., Educ + Income).Occ12 -0.46130072 0.0029820415\n\n# Model 6: RC(1)+RL(1)+CL(1) partial association\nm6 <- gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ)+Mult(1,Occ,Income)+Mult(1,Educ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m6)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 154 167714.2 0 167406.2 165617.2 16.84677\n\n# Model 7: Model 6 with consistent row (occupation) scores\nm7 <- gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ+Income)+Mult(1,Educ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m7)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2) BIC(L2)    Delta\n 169 545514.3 0 545176.3  543213 31.30187\n\nmu <- getContrasts(m7, pickCoef(m7, \"[.]Occ\"),\n                 ref = \"mean\", scaleRef = \"mean\",scaleWeights = \"unit\")\nmu\n\n                                   Estimate  Std. Error\nMult(1, ., Educ + Income).Occ1  -0.60162667 0.001624233\nMult(1, ., Educ + Income).Occ2  -0.17978630 0.001640694\nMult(1, ., Educ + Income).Occ3  -0.03148963 0.001714147\nMult(1, ., Educ + Income).Occ4   0.39959683 0.001127586\nMult(1, ., Educ + Income).Occ5   0.32643104 0.001187228\nMult(1, ., Educ + Income).Occ6   0.40809823 0.001123581\nMult(1, ., Educ + Income).Occ7  -0.05232457 0.001723636\nMult(1, ., Educ + Income).Occ8  -0.03112601 0.001713929\nMult(1, ., Educ + Income).Occ9  -0.17530724 0.001647652\nMult(1, ., Educ + Income).Occ10 -0.18239249 0.001636530\nMult(1, ., Educ + Income).Occ11  0.28025194 0.001245468\nMult(1, ., Educ + Income).Occ12 -0.16032512 0.001669009\n\n# Model 8: model 6 with consistent row, column and layer scores\n# currently, this might not be fitted with gnm!"
  },
  {
    "objectID": "7-Chapter_6.html",
    "href": "7-Chapter_6.html",
    "title": "6  第6章",
    "section": "",
    "text": "特になし"
  },
  {
    "objectID": "8-Note.html",
    "href": "8-Note.html",
    "title": "補足のノート",
    "section": "",
    "text": "library(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)\nlibrary(vcd)"
  },
  {
    "objectID": "8-Note.html#クロス表の作成",
    "href": "8-Note.html#クロス表の作成",
    "title": "補足のノート",
    "section": "クロス表の作成",
    "text": "クロス表の作成\n\nFreq <- c( 64,  94, 58, 46, \n           57,  94, 54, 40,\n           57, 105, 65, 60,\n           72, 141, 77, 94,\n           36,  97, 54, 78,\n           21,  71, 54, 71)\n# byrow = TRUEとすることを忘れずに．\ntab <- matrix(Freq, nrow = 6, ncol = 4, byrow = TRUE) %>% as.table()\ndimnames(tab)\n\n[[1]]\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\"\n\n[[2]]\n[1] \"A\" \"B\" \"C\" \"D\"\n\ndimnames(tab) <- list(SES = LETTERS[1:6],\n                      MHS = c(\"well\", \"mild\", \"modelrate\", \"impared\"))\ntab\n\n   MHS\nSES well mild modelrate impared\n  A   64   94        58      46\n  B   57   94        54      40\n  C   57  105        65      60\n  D   72  141        77      94\n  E   36   97        54      78\n  F   21   71        54      71"
  },
  {
    "objectID": "8-Note.html#集計データの作成",
    "href": "8-Note.html#集計データの作成",
    "title": "補足のノート",
    "section": "集計データの作成",
    "text": "集計データの作成\n\n表のデータではなく，各変数の組み合わせとその度数からなるデータを作成する．\n度数はまず1行目について数値を並べ（1行1列から1行\\(I\\)列まで），次に2行目について数値を並べる（2行1列から2行\\(I\\)列まで）．これをFreqとする．\n例として「編者による序文」の親の職業と精神的健康の例で考えてみる．これは\\(6\\times4\\)のクロス表なので，まず1行1列から1行4列までの数字を入力し，次に2行1列から2行4列まで入力する．これを3行目から6行目まで繰り返す．表との対応を考えて適当な改行をいれるのもよい．ただしRは改行を入れても入れなくても，単に数値の列（ベクトル）として扱う．\nglによって変数を作成する．度数がどの行と列に対応しているのかに注意してほしい．\n\n\n# 1行1列から1行4列，・・・・，6行1列から6行4列まで順に入力\nFreq <- c( 64, 94, 58, 46, 57, 94, 54, 40, 57, 105, 65, 60, 72, 141, 77, 94, 36,  97, 54, 78, 21, 71, 54, 71)\n\n# 表ようにして入力\nFreq <- c( 64,  94, 58, 46, \n           57,  94, 54, 40,\n           57, 105, 65, 60,\n           72, 141, 77, 94,\n           36,  97, 54, 78,\n           21,  71, 54, 71)\n\n\n行カテゴリと列カテゴリの数は\\(I\\)や\\(J\\)となっている．\nIを使いたいが，Rの関数にすでに用意されているので別の名前を考える．ここではNIとNJとする．\n例のデータでは，行カテゴリ数\\(I = 4\\)，列カテゴリ数\\(J = 5\\)である．\n\n\nNI <- 4\nNJ <- 6\n\n\nでは，Freqに対応する行カテゴリと列カテゴリを並べてみる．先程の入力のルールにしたがうと，行については1行1列から1行4列までの数字を入力しているので1,1,1,1となり，次に2,2,2,2となる．これを繰り返し最後は6,6,6,6となる．列については，1,2,3,4が6回繰り返される．\n\n\nRow <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6)\nCol <- c(1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4)\nclass(Row)\n\n[1] \"numeric\"\n\nclass(Col)\n\n[1] \"numeric\"\n\n\n\n属性が数値になっているのでas.factor（またはfactor）で因子（factor）に変換する．\n\n\nRow <- as.factor(Row)\nCol <- as.factor(Col)\nclass(Row);class(Col)\n\n[1] \"factor\"\n\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6\nLevels: 1 2 3 4 5 6\n\nCol\n\n [1] 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4\nLevels: 1 2 3 4\n\n\n\n単純な数値の列を作成したければrep関数が便利である．これは整数（integer）となる．\n\n\nRow <- rep(1:4, each = 5)\nCol <- rep(1:5, length.out = 20)\nclass(Row)\n\n[1] \"integer\"\n\nclass(Col)\n\n[1] \"integer\"\n\nRow <- as.factor(Row)\nCol <- as.factor(Col)\nclass(Row)\n\n[1] \"factor\"\n\nclass(Col)\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4\nLevels: 1 2 3 4\n\nCol\n\n [1] 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5\nLevels: 1 2 3 4 5\n\n\n\nglはGenerate Factor Levelsという関数で，repに似ているが，数値ではなく因子を結果として出力する．\n1からnまでの数字をぞれぞれk回繰り返して出力する．\n\n\nRow <- gl(n = 6, k = 4)\nCol <- gl(n = 4, k = 1, length = 24)\nclass(Row)\n\n[1] \"factor\"\n\nclass(Col)\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6\nLevels: 1 2 3 4 5 6\n\nCol\n\n [1] 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4\nLevels: 1 2 3 4\n\n\n\n以上より，Freq，Row，Colの3つの変数が作成された．これらからなるデータを作成する．data.frameとtibbleのどちらでもよいが， tibbleの場合は表示させた後に，データの構造（<dbl> <fct> <fct>）が表示される．\n\n\nd <- data.frame(Freq, Row, Col)\nd\n\n   Freq Row Col\n1    64   1   1\n2    94   1   2\n3    58   1   3\n4    46   1   4\n5    57   2   1\n6    94   2   2\n7    54   2   3\n8    40   2   4\n9    57   3   1\n10  105   3   2\n11   65   3   3\n12   60   3   4\n13   72   4   1\n14  141   4   2\n15   77   4   3\n16   94   4   4\n17   36   5   1\n18   97   5   2\n19   54   5   3\n20   78   5   4\n21   21   6   1\n22   71   6   2\n23   54   6   3\n24   71   6   4\n\n# tibble でもよい\nd <- tibble(Freq, Row, Col)\nd\n\n# A tibble: 24 × 3\n    Freq Row   Col  \n   <dbl> <fct> <fct>\n 1    64 1     1    \n 2    94 1     2    \n 3    58 1     3    \n 4    46 1     4    \n 5    57 2     1    \n 6    94 2     2    \n 7    54 2     3    \n 8    40 2     4    \n 9    57 3     1    \n10   105 3     2    \n# ℹ 14 more rows\n\n\n\n以上をまとめると次のようになる．本書のプログラム例ではglを使うことが多いのでここで使用方法を覚えておこう．\n\n\nFreq <- c( 64, 94, 58, 46, 57, 94, 54, 40, 57, 105, 65, 60, 72, 141, 77, 94, 36,  97, 54, 78, 21, 71, 54, 71)\nNI <- 4\nNJ <- 6\nRow <- gl(n = NI, k = NJ, length = NI * NJ)\nCol <- gl(n = NJ, k = 1, length = NI * NJ)\nd <- tibble(Freq, Row, Col)\nd\n\n# A tibble: 24 × 3\n    Freq Row   Col  \n   <dbl> <fct> <fct>\n 1    64 1     1    \n 2    94 1     2    \n 3    58 1     3    \n 4    46 1     4    \n 5    57 1     5    \n 6    94 1     6    \n 7    54 2     1    \n 8    40 2     2    \n 9    57 2     3    \n10   105 2     4    \n# ℹ 14 more rows"
  },
  {
    "objectID": "8-Note.html#glmとgnmの結果の比較",
    "href": "8-Note.html#glmとgnmの結果の比較",
    "title": "補足のノート",
    "section": "GLMとGNMの結果の比較",
    "text": "GLMとGNMの結果の比較\n\nglmとgnmでは適合度や係数は同じだが，出力されるものが異なる．\n\n\nfit_glm <- glm(Freq ~ Row + Col, data = d, family = poisson)\nfit_gnm <- gnm(Freq ~ Row + Col, data = d, family = poisson)\nfit_glm\n\n\nCall:  glm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n(Intercept)         Row2         Row3         Row4         Col2         Col3  \n    4.10604     -0.08065      0.22460     -0.16838      0.36930     -0.13588  \n       Col4         Col5         Col6  \n    0.25857     -0.14058      0.27738  \n\nDegrees of Freedom: 23 Total (i.e. Null);  15 Residual\nNull Deviance:      217.4 \nResidual Deviance: 112  AIC: 274.2\n\nfit_gnm\n\n\nCall:\ngnm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n(Intercept)         Row2         Row3         Row4         Col2         Col3  \n    4.10604     -0.08065      0.22460     -0.16838      0.36930     -0.13588  \n       Col4         Col5         Col6  \n    0.25857     -0.14058      0.27738  \n\nDeviance:            112.0398 \nPearson chi-squared: 102.2928 \nResidual df:         15 \n\n\n\nnames(fit_glm)\n\n [1] \"coefficients\"      \"residuals\"         \"fitted.values\"    \n [4] \"effects\"           \"R\"                 \"rank\"             \n [7] \"qr\"                \"family\"            \"linear.predictors\"\n[10] \"deviance\"          \"aic\"               \"null.deviance\"    \n[13] \"iter\"              \"weights\"           \"prior.weights\"    \n[16] \"df.residual\"       \"df.null\"           \"y\"                \n[19] \"converged\"         \"boundary\"          \"model\"            \n[22] \"call\"              \"formula\"           \"terms\"            \n[25] \"data\"              \"offset\"            \"control\"          \n[28] \"method\"            \"contrasts\"         \"xlevels\"          \n\nnames(fit_gnm)\n\n [1] \"call\"          \"formula\"       \"terms\"         \"data\"         \n [5] \"eliminate\"     \"ofInterest\"    \"na.action\"     \"xlevels\"      \n [9] \"offset\"        \"tolerance\"     \"iterStart\"     \"iterMax\"      \n[13] \"coefficients\"  \"residuals\"     \"fitted.values\" \"rank\"         \n[17] \"family\"        \"predictors\"    \"deviance\"      \"aic\"          \n[21] \"iter\"          \"weights\"       \"prior.weights\" \"df.residual\"  \n[25] \"y\"             \"converged\"     \"constrain\"     \"constrainTo\"  \n[29] \"x\"             \"model\"        \n\n\n\nsummary(fit_glm)\n\n\nCall:\nglm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.10604    0.07692  53.378  < 2e-16 ***\nRow2        -0.08065    0.07104  -1.135 0.256237    \nRow3         0.22460    0.06600   3.403 0.000666 ***\nRow4        -0.16838    0.07271  -2.316 0.020573 *  \nCol2         0.36930    0.08325   4.436 9.17e-06 ***\nCol3        -0.13588    0.09377  -1.449 0.147336    \nCol4         0.25857    0.08522   3.034 0.002413 ** \nCol5        -0.14058    0.09389  -1.497 0.134314    \nCol6         0.27738    0.08488   3.268 0.001083 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 217.40  on 23  degrees of freedom\nResidual deviance: 112.04  on 15  degrees of freedom\nAIC: 274.21\n\nNumber of Fisher Scoring iterations: 4\n\nsummary(fit_gnm)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-5.0571  -0.4520   0.4274   1.1667   3.5712  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.10604    0.07692  53.378  < 2e-16 ***\nRow2        -0.08065    0.07104  -1.135 0.256237    \nRow3         0.22460    0.06600   3.403 0.000666 ***\nRow4        -0.16838    0.07271  -2.316 0.020573 *  \nCol2         0.36930    0.08325   4.436 9.17e-06 ***\nCol3        -0.13588    0.09377  -1.449 0.147336    \nCol4         0.25857    0.08522   3.034 0.002413 ** \nCol5        -0.14058    0.09389  -1.497 0.134314    \nCol6         0.27738    0.08488   3.268 0.001083 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 112.04 on 15 degrees of freedom\nAIC: 274.21\n\nNumber of iterations: 4\n\n\n\ngnmで独立モデルと飽和モデル\n\n\nfit_O <- gnm(Freq ~ Row + Col, data = d, family = poisson)\nfit_S <- gnm(Freq ~ Row + Col + Row:Col, data = d, family = poisson)\n\n\nモデルの比較はanovaで可能．\n\n\nanova(fit_O, fit_S)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ Row + Col\nModel 2: Freq ~ Row + Col + Row:Col\n  Resid. Df Resid. Dev Df Deviance\n1        15     112.04            \n2         0       0.00 15   112.04"
  },
  {
    "objectID": "8-Note.html#期待度数",
    "href": "8-Note.html#期待度数",
    "title": "補足のノート",
    "section": "期待度数",
    "text": "期待度数\n\n期待度数を保存すれば期待度数についてのクロス表を作成することができる．飽和モデルの場合は，観測度数のクロス表と一致する．また独立モデルでの期待度数をみると，行によって列の幅が異なっていない（列によって行の幅がことなっていない）ことがわかる．\n\n\nd %<>% mutate(O_Freq = fit_O$fitted.values,\n              S_Freq = fit_S$fitted.values)\nd %>% xtabs(Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)\n\n\n\nd %>% xtabs(O_Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)\n\n\n\nd %>% xtabs(S_Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)"
  },
  {
    "objectID": "8-Note.html#モザイクプロット",
    "href": "8-Note.html#モザイクプロット",
    "title": "補足のノート",
    "section": "モザイクプロット",
    "text": "モザイクプロット\n\ngnmパッケージには，mentalHealthが用意されているのでこれを使ってみる．\n\n\nmentalHealth\n\n   count SES      MHS\n1     64   A     well\n2     94   A     mild\n3     58   A moderate\n4     46   A impaired\n5     57   B     well\n6     94   B     mild\n7     54   B moderate\n8     40   B impaired\n9     57   C     well\n10   105   C     mild\n11    65   C moderate\n12    60   C impaired\n13    72   D     well\n14   141   D     mild\n15    77   D moderate\n16    94   D impaired\n17    36   E     well\n18    97   E     mild\n19    54   E moderate\n20    78   E impaired\n21    21   F     well\n22    71   F     mild\n23    54   F moderate\n24    71   F impaired\n\n\n\nxtabsは集計データからクロス表を作成する際に用いる．xtabs(度数 ~ 行変数 + 列変数, data = データ名)とすればよい．mentalHealthではcountが度数を示している．\n\n\ntab_mentalHealth <- xtabs(count ~ SES + MHS, data = mentalHealth)\ntab_mentalHealth\n\n   MHS\nSES well mild moderate impaired\n  A   64   94       58       46\n  B   57   94       54       40\n  C   57  105       65       60\n  D   72  141       77       94\n  E   36   97       54       78\n  F   21   71       54       71\n\n\n\nmosaicでモザイクプロットを図示．影をつけたければshade = TRUEとする．\n\n\nmosaic(tab_mentalHealth,\n       shade = TRUE)\n\n\n\n\n\nモデル適合度を表示するための関数\n\n\nmodel.summary <- function(obj) {\n  aic <- obj$deviance - obj$df * 2 # AIC(L2)\n  bic <- obj$deviance - obj$df * log(sum(obj$y)) #BIC(L2)\n  delta <-\n    100 * sum(abs(obj$y - obj$fitted.values)) / (2 * sum(obj$y))\n  p <- 1 - pchisq(obj$deviance, obj$df, lower.tail = F)\n  Model <- deparse(substitute(obj))\n  result <- tibble(\n    \"Model Description\" = Model,\n    \"df\" = obj$df,\n    \"L2\" = obj$deviance,\n    #\"AIC(L2)\" = aic,\n    \"BIC\" = bic,\n    \"Delta\" = delta,\n    \"p\" = p\n  )\n  return(result)\n}\n\n\n変数と係数と係数の順番を表示するための関数\n\n\n# 変数と係数と係数の順番を表示\nvar_num <- function(model) {\n  data.frame(var = names(model$coefficients),\n             estimate = model$coefficients) %>%\n    mutate(estimate = estimate,\n           number = row_number())\n}"
  },
  {
    "objectID": "8-Note.html#正規化",
    "href": "8-Note.html#正規化",
    "title": "補足のノート",
    "section": "正規化",
    "text": "正規化\n\n通常のRCモデルでは行スコアと列スコアが正規化されていない．\nAgresti (2002)\n\n\nset.seed(1)\n##  Goodman Row-Column association model fits well (deviance 3.57, df 8)\nmentalHealth$MHS <- C(mentalHealth$MHS, treatment)\nmentalHealth$SES <- C(mentalHealth$SES, treatment)\n\n# Independent Model\nO <- gnm(count ~ SES + MHS,\n         family = poisson, data = mentalHealth)\n\n# Independent Modelの結果を利用して，初期値を設定\nmult1 <- residSVD(O, SES, MHS)\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  start = c(coef(O), 1, mult1),\n  family = poisson,\n  data = mentalHealth\n)\n\nRunning main iterations..........\nDone\n\n# Estimateには数字があるが，Std. ErrorがNAとなっている．これらのパラメータは識別されていない．\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), family = poisson, \n    data = mentalHealth, start = c(coef(O), 1, mult1))\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  3.866262         NA      NA       NA\nSESB                        -0.067328         NA      NA       NA\nSESC                         0.103101         NA      NA       NA\nSESD                         0.394428         NA      NA       NA\nSESE                         0.005618         NA      NA       NA\nSESF                        -0.227798         NA      NA       NA\nMHSmild                      0.690089         NA      NA       NA\nMHSmoderate                  0.177978         NA      NA       NA\nMHSimpaired                  0.205737         NA      NA       NA\nMult(., SES, MHS).           1.009621         NA      NA       NA\nMult(1, ., MHS).SESA        -0.380306         NA      NA       NA\nMult(1, ., MHS).SESB        -0.383670         NA      NA       NA\nMult(1, ., MHS).SESC        -0.106430         NA      NA       NA\nMult(1, ., MHS).SESD         0.040661         NA      NA       NA\nMult(1, ., MHS).SESE         0.403979         NA      NA       NA\nMult(1, ., MHS).SESF         0.702468         NA      NA       NA\nMult(1, SES, .).MHSwell     -0.738572         NA      NA       NA\nMult(1, SES, .).MHSmild     -0.052542         NA      NA       NA\nMult(1, SES, .).MHSmoderate  0.071261         NA      NA       NA\nMult(1, SES, .).MHSimpaired  0.641064         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 10\n\n# 行スコアと列スコアがどこにあるかを取り出す．\nvar_num(RC1)\n\n                                                    var     estimate number\n(Intercept)                                 (Intercept)  3.866262444      1\nSESB                                               SESB -0.067328418      2\nSESC                                               SESC  0.103101292      3\nSESD                                               SESD  0.394428208      4\nSESE                                               SESE  0.005617771      5\nSESF                                               SESF -0.227798223      6\nMHSmild                                         MHSmild  0.690089175      7\nMHSmoderate                                 MHSmoderate  0.177978240      8\nMHSimpaired                                 MHSimpaired  0.205737053      9\nMult(., SES, MHS).                   Mult(., SES, MHS).  1.009620967     10\nMult(1, ., MHS).SESA               Mult(1, ., MHS).SESA -0.380305582     11\nMult(1, ., MHS).SESB               Mult(1, ., MHS).SESB -0.383670111     12\nMult(1, ., MHS).SESC               Mult(1, ., MHS).SESC -0.106429617     13\nMult(1, ., MHS).SESD               Mult(1, ., MHS).SESD  0.040660843     14\nMult(1, ., MHS).SESE               Mult(1, ., MHS).SESE  0.403978606     15\nMult(1, ., MHS).SESF               Mult(1, ., MHS).SESF  0.702467902     16\nMult(1, SES, .).MHSwell         Mult(1, SES, .).MHSwell -0.738571526     17\nMult(1, SES, .).MHSmild         Mult(1, SES, .).MHSmild -0.052541552     18\nMult(1, SES, .).MHSmoderate Mult(1, SES, .).MHSmoderate  0.071261032     19\nMult(1, SES, .).MHSimpaired Mult(1, SES, .).MHSimpaired  0.641064227     20\n\n# c(11:16,17:20)\n\n# getContrastsによって正規化された推定値とその標準誤差を示す．まずは重み付けのない／単位標準化された解を求める．\nmu_unit <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]SES\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu_unit <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]MHS\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n# 正規化された解を表示\nmu_unit\n\n                         Estimate Std. Error\nMult(1, ., MHS).SESA -0.437796567 0.11273428\nMult(1, ., MHS).SESB -0.441250838 0.11417655\nMult(1, ., MHS).SESC -0.156615503 0.12240952\nMult(1, ., MHS).SESD -0.005601696 0.11265736\nMult(1, ., MHS).SESE  0.367406849 0.12407059\nMult(1, ., MHS).SESF  0.673857756 0.09323652\n\nnu_unit\n\n                               Estimate Std. Error\nMult(1, SES, .).MHSwell     -0.73265419 0.06465624\nMult(1, SES, .).MHSmild     -0.03347417 0.10831243\nMult(1, SES, .).MHSmoderate  0.09270150 0.12250922\nMult(1, SES, .).MHSimpaired  0.67342687 0.07862278\n\n# 正規化制約を確認\nall.equal(sum(mu_unit$qvframe[, 1]), 0)\n\n[1] TRUE\n\nall.equal(sum(nu_unit$qvframe[, 1]), 0)\n\n[1] TRUE\n\nall.equal(sum(mu_unit$qvframe[, 1] ^ 2), 1)\n\n[1] TRUE\n\nall.equal(sum(nu_unit$qvframe[, 1] ^ 2), 1)\n\n[1] TRUE\n\n# 値の制約\ncon <- c(mu_unit$qvframe[, 1][c(1, 6)], nu_unit$qvframe[, 1][c(1, 4)])\ncon\n\n[1] -0.4377966  0.6738578 -0.7326542  0.6734269\n\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  constrain = c(11, 16, 17, 20),\n  constrainTo = con,\n  start = c(coef(O), NA, mult1),\n  family = poisson,\n  data = mentalHealth\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........\nDone\n\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), constrain = c(11, \n    16, 17, 20), constrainTo = con, family = poisson, data = mentalHealth, \n    start = c(coef(O), NA, mult1))\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  3.840354   0.100134  38.352  < 2e-16 ***\nSESB                        -0.067262   0.089460  -0.752   0.4521    \nSESC                         0.097655   0.088726   1.101   0.2711    \nSESD                         0.386057   0.087802   4.397 1.10e-05 ***\nSESE                        -0.009979   0.110426  -0.090   0.9280    \nSESF                        -0.249331   0.133563  -1.867   0.0619 .  \nMHSmild                      0.722031   0.096153   7.509 5.95e-14 ***\nMHSmoderate                  0.215685   0.108885   1.981   0.0476 *  \nMHSimpaired                  0.269974   0.148273   1.821   0.0686 .  \nMult(., SES, MHS).           0.964895   0.191615   5.036 4.76e-07 ***\nMult(1, ., MHS).SESA        -0.437797         NA      NA       NA    \nMult(1, ., MHS).SESB        -0.441251   0.201840  -2.186   0.0288 *  \nMult(1, ., MHS).SESC        -0.156615   0.176666  -0.887   0.3753    \nMult(1, ., MHS).SESD        -0.005602   0.160260  -0.035   0.9721    \nMult(1, ., MHS).SESE         0.367407   0.191566   1.918   0.0551 .  \nMult(1, ., MHS).SESF         0.673858         NA      NA       NA    \nMult(1, SES, .).MHSwell     -0.732654         NA      NA       NA    \nMult(1, SES, .).MHSmild     -0.033474   0.159023  -0.210   0.8333    \nMult(1, SES, .).MHSmoderate  0.092701   0.180220   0.514   0.6070    \nMult(1, SES, .).MHSimpaired  0.673427         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 9\n\n# intrinsic association parameter\nphi <- summary(RC1)$coefficients[\"Mult(., SES, MHS).\", 1]\nrho <- (-1 + sqrt(1 + 4 * phi ^ 2)) / (2 * phi)\neta <- (2 * phi) ^ (-1)\ntau <- (1 + eta ^ 2) ^ (1 / 2) - eta\nlist(phi, rho, eta, tau)\n\n[[1]]\n[1] 0.9648954\n\n[[2]]\n[1] 0.6080959\n\n[[3]]\n[1] 0.5181909\n\n[[4]]\n[1] 0.6080959\n\nall.equal(rho, tau)\n\n[1] TRUE\n\n## Marginal weighted solution\nrowProbs <- with(mentalHealth, tapply(count, SES, sum) / sum(count))\ncolProbs <- with(mentalHealth, tapply(count, MHS, sum) / sum(count))\nmu <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]SES\"),\n  ref = rowProbs,\n  scaleRef = rowProbs,\n  scaleWeights = rowProbs\n)\nnu <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]MHS\"),\n  ref = colProbs,\n  scaleRef = colProbs,\n  scaleWeights = colProbs\n)\ncon <- c(mu$qvframe[, 1][c(1, 6)], nu$qvframe[, 1][c(1, 4)])\nmu\n\n                        Estimate Std. Error\nMult(1, ., MHS).SESA -1.11233093  0.2990944\nMult(1, ., MHS).SESB -1.12143720  0.3138906\nMult(1, ., MHS).SESC -0.37107614  0.3194546\nMult(1, ., MHS).SESD  0.02702955  0.2734878\nMult(1, ., MHS).SESE  1.01036159  0.3149487\nMult(1, ., MHS).SESF  1.81823273  0.2824637\n\nnu\n\n                              Estimate Std. Error\nMult(1, SES, .).MHSwell     -1.6775143  0.1941179\nMult(1, SES, .).MHSmild     -0.1403989  0.2002803\nMult(1, SES, .).MHSmoderate  0.1369924  0.2799954\nMult(1, SES, .).MHSimpaired  1.4136910  0.1724133\n\ncon\n\n[1] -1.112331  1.818233 -1.677514  1.413691\n\n# 正規化制約を確認\nall.equal(sum(mu$qvframe[, 1] * rowProbs), 0)\n\n[1] TRUE\n\nall.equal(sum(nu$qvframe[, 1] * colProbs), 0)\n\n[1] TRUE\n\nall.equal(sum(mu$qvframe[, 1] ^ 2 * rowProbs), 1)\n\n[1] TRUE\n\nall.equal(sum(nu$qvframe[, 1] ^ 2 * colProbs), 1)\n\n[1] TRUE\n\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  constrain = c(11, 16, 17, 20),\n  constrainTo = con,\n  start = c(coef(O), NA, mult1),\n  family = poisson,\n  data = mentalHealth,\n  tolerance = 1e-12\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations................................\nDone\n\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), constrain = c(11, \n    16, 17, 20), constrainTo = con, family = poisson, data = mentalHealth, \n    start = c(coef(O), NA, mult1), tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  3.83919    0.10014  38.338  < 2e-16 ***\nSESB                        -0.06736    0.09033  -0.746   0.4558    \nSESC                         0.10590    0.08929   1.186   0.2356    \nSESD                         0.39873    0.08826   4.517 6.26e-06 ***\nSESE                         0.01363    0.11020   0.124   0.9016    \nSESF                        -0.21674    0.13232  -1.638   0.1014    \nMHSmild                      0.71134    0.09556   7.444 9.77e-14 ***\nMHSmoderate                  0.20306    0.10841   1.873   0.0611 .  \nMHSimpaired                  0.24846    0.14842   1.674   0.0941 .  \nMult(., SES, MHS).           0.16649    0.03306   5.036 4.76e-07 ***\nMult(1, ., MHS).SESA        -1.11233         NA      NA       NA    \nMult(1, ., MHS).SESB        -1.12144    0.53209  -2.108   0.0351 *  \nMult(1, ., MHS).SESC        -0.37108    0.46573  -0.797   0.4256    \nMult(1, ., MHS).SESD         0.02703    0.42248   0.064   0.9490    \nMult(1, ., MHS).SESE         1.01036    0.50501   2.001   0.0454 *  \nMult(1, ., MHS).SESF         1.81823         NA      NA       NA    \nMult(1, SES, .).MHSwell     -1.67751         NA      NA       NA    \nMult(1, SES, .).MHSmild     -0.14040    0.34961  -0.402   0.6880    \nMult(1, SES, .).MHSmoderate  0.13699    0.39621   0.346   0.7295    \nMult(1, SES, .).MHSimpaired  1.41369         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 32"
  },
  {
    "objectID": "8-Note.html#初期値",
    "href": "8-Note.html#初期値",
    "title": "補足のノート",
    "section": "初期値",
    "text": "初期値\n\n# データの準備\nFreq <- c( 39, 50, 18,  4,\n          140,178, 85, 23,\n          108,195, 97, 23,\n          238,598,363,111,\n           78,250,150, 55,\n           50,200,208, 74,\n            8, 29, 46, 21)\n\n\ntab_2.3A <-\n  matrix(Freq,\n         nrow = 7,\n         ncol = 4,\n         byrow = TRUE) %>% as.table()\n\npolviews <- gl(n = 7, k = 4)\nfefam <- gl(n = 4, k = 1, length = 28)\nfreq_tab_2.3A <- tibble(Freq, polviews, fefam)\nfreq_tab_2.3A\n\n# A tibble: 28 × 3\n    Freq polviews fefam\n   <dbl> <fct>    <fct>\n 1    39 1        1    \n 2    50 1        2    \n 3    18 1        3    \n 4     4 1        4    \n 5   140 2        1    \n 6   178 2        2    \n 7    85 2        3    \n 8    23 2        4    \n 9   108 3        1    \n10   195 3        2    \n# ℹ 18 more rows\n\n# 独立モデル\nO <- gnm(\n  Freq ~ polviews + fefam,\n  family = poisson,\n  data = freq_tab_2.3A,\n  tolerance = 1e-12\n)\n\nvar_num(O)\n\n                    var   estimate number\n(Intercept) (Intercept)  3.0603480      1\npolviews2     polviews2  1.3449091      2\npolviews3     polviews3  1.3378420      3\npolviews4     polviews4  2.4682522      4\npolviews5     polviews5  1.5689912      5\npolviews6     polviews6  1.5671133      6\npolviews7     polviews7 -0.0651393      7\nfefam2           fefam2  0.8194665      8\nfefam3           fefam3  0.3804447      9\nfefam4           fefam4 -0.7539609     10\n\nRC <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam +\n      Mult(1, polviews, fefam),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............................\nDone\n\nvar_num(RC)\n\n                                                    var     estimate number\n(Intercept)                                 (Intercept)  2.902702351      1\npolviews2                                     polviews2  1.390548385      2\npolviews3                                     polviews3  1.427149259      3\npolviews4                                     polviews4  2.586614669      4\npolviews5                                     polviews5  1.686005670      5\npolviews6                                     polviews6  1.625948840      6\npolviews7                                     polviews7 -0.114101970      7\nfefam2                                           fefam2  0.889280567      8\nfefam3                                           fefam3  0.414411068      9\nfefam4                                           fefam4 -0.767263370     10\nMult(., polviews, fefam).     Mult(., polviews, fefam).  0.354847803     11\nMult(1, ., fefam).polviews1 Mult(1, ., fefam).polviews1 -4.642973707     12\nMult(1, ., fefam).polviews2 Mult(1, ., fefam).polviews2 -3.587221083     13\nMult(1, ., fefam).polviews3 Mult(1, ., fefam).polviews3 -2.177313145     14\nMult(1, ., fefam).polviews4 Mult(1, ., fefam).polviews4 -0.001967735     15\nMult(1, ., fefam).polviews5 Mult(1, ., fefam).polviews5  0.933577004     16\nMult(1, ., fefam).polviews6 Mult(1, ., fefam).polviews6  3.992993578     17\nMult(1, ., fefam).polviews7 Mult(1, ., fefam).polviews7  6.608154586     18\nMult(1, polviews, .).fefam1 Mult(1, polviews, .).fefam1 -0.468986131     19\nMult(1, polviews, .).fefam2 Mult(1, polviews, .).fefam2 -0.061831609     20\nMult(1, polviews, .).fefam3 Mult(1, polviews, .).fefam3  0.255547101     21\nMult(1, polviews, .).fefam4 Mult(1, polviews, .).fefam4  0.406103105     22\n\nmult1 <- residSVD(O, polviews, fefam)\nmult2 <- residSVD(O, polviews, fefam, d = 2)\nmult3 <- residSVD(O, polviews, fefam, d = 3)\n\nRC <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam + Mult(1, polviews, fefam),\n    start = c(coef(O), NA, mult1),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................\nDone\n\nsummary(RC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    family = poisson, data = ., start = c(coef(O), NA, mult1), \n    tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                              Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  2.9230044         NA      NA       NA\npolviews2                    1.3860689         NA      NA       NA\npolviews3                    1.4166876         NA      NA       NA\npolviews4                    2.5669231         NA      NA       NA\npolviews5                    1.6623446         NA      NA       NA\npolviews6                    1.5893068         NA      NA       NA\npolviews7                   -0.1618400         NA      NA       NA\nfefam2                       0.8887442         NA      NA       NA\nfefam3                       0.4134566         NA      NA       NA\nfefam4                      -0.7684162         NA      NA       NA\nMult(., polviews, fefam).    1.0565632         NA      NA       NA\nMult(1, ., fefam).polviews1 -0.6984576         NA      NA       NA\nMult(1, ., fefam).polviews2 -0.5395102         NA      NA       NA\nMult(1, ., fefam).polviews3 -0.3272434         NA      NA       NA\nMult(1, ., fefam).polviews4  0.0002627         NA      NA       NA\nMult(1, ., fefam).polviews5  0.1411123         NA      NA       NA\nMult(1, ., fefam).polviews6  0.6017186         NA      NA       NA\nMult(1, ., fefam).polviews7  0.9954405         NA      NA       NA\nMult(1, polviews, .).fefam1 -1.0195282         NA      NA       NA\nMult(1, polviews, .).fefam2 -0.1112587         NA      NA       NA\nMult(1, polviews, .).fefam3  0.5967413         NA      NA       NA\nMult(1, polviews, .).fefam4  0.9325976         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 30\n\nRC2 <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam +\n      Mult(1, polviews, fefam, inst = 1) +\n      Mult(1, polviews, fefam, inst = 2),\n    start = c(coef(O), NA, mult2[, 1], NA, mult2[, 2]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.........\nDone\n\nsummary(RC2)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam, \n    inst = 1) + Mult(1, polviews, fefam, inst = 2), family = poisson, \n    data = ., start = c(coef(O), NA, mult2[, 1], NA, mult2[, \n        2]), tolerance = 1e-12)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-0.500439  -0.068726  -0.002705   0.066147   0.535693  \n\nCoefficients:\n                                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)                            2.91818         NA      NA       NA\npolviews2                              1.39397         NA      NA       NA\npolviews3                              1.41864         NA      NA       NA\npolviews4                              2.56797         NA      NA       NA\npolviews5                              1.65784         NA      NA       NA\npolviews6                              1.59467         NA      NA       NA\npolviews7                             -0.14115         NA      NA       NA\nfefam2                                 0.88413         NA      NA       NA\nfefam3                                 0.42556         NA      NA       NA\nfefam4                                -0.75373         NA      NA       NA\nMult(., polviews, fefam, inst = 1).    1.00493         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews1 -0.75964         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews2 -0.52028         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews3 -0.35691         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews4 -0.01452         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews5  0.12908         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews6  0.60927         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews7  0.95886         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam1 -0.91476         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam2 -0.19195         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam3  0.63323         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam4  0.96988         NA      NA       NA\nMult(., polviews, fefam, inst = 2).    0.63836         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews1  0.14115         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews2  0.43421         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews3  0.06788         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews4 -0.07766         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews5 -0.33262         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews6 -0.06627         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews7  0.39888         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam1  0.53563         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam2 -0.41196         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam3  0.20278         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam4  0.06538         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.3691 on 4 degrees of freedom\nAIC: 220.72\n\nNumber of iterations: 66\n\nRC3 <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam + Mult(1, polviews, fefam, inst = 1) +\n      Mult(1, polviews, fefam, inst = 2) +\n      Mult(1, polviews, fefam, inst = 3),\n    start = c(coef(O), NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....\nDone\n\nsummary(RC3)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam, \n    inst = 1) + Mult(1, polviews, fefam, inst = 2) + Mult(1, \n    polviews, fefam, inst = 3), family = poisson, data = ., start = c(coef(O), \n    NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]), tolerance = 1e-12)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n     0       0       0       0       0  \n\nCoefficients:\n                                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)                            2.91911         NA      NA       NA\npolviews2                              1.39510         NA      NA       NA\npolviews3                              1.41762         NA      NA       NA\npolviews4                              2.56789         NA      NA       NA\npolviews5                              1.65780         NA      NA       NA\npolviews6                              1.59247         NA      NA       NA\npolviews7                             -0.13766         NA      NA       NA\nfefam2                                 0.88275         NA      NA       NA\nfefam3                                 0.42469         NA      NA       NA\nfefam4                                -0.75453         NA      NA       NA\nMult(., polviews, fefam, inst = 1).    1.00012         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews1 -0.77447         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews2 -0.50580         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews3 -0.39714         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews4 -0.01256         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews5  0.16821         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews6  0.59267         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews7  0.93686         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam1 -0.91235         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam2 -0.18084         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam3  0.60069         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam4  1.02514         NA      NA       NA\nMult(., polviews, fefam, inst = 2).    0.61713         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews1  0.11253         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews2  0.48025         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews3 -0.03267         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews4 -0.07847         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews5 -0.22089         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews6 -0.15511         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews7  0.45886         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam1  0.55593         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam2 -0.37731         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam3  0.06148         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam4  0.29589         NA      NA       NA\nMult(., polviews, fefam, inst = 3).    0.93372         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews1  0.02726         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews2 -0.03814         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews3  0.19104         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews4 -0.02432         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews5 -0.30078         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews6  0.18379         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews7  0.15199         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam1 -0.03233         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam2 -0.14527         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam3  0.29780         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam4 -0.18814         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.1102e-15 on 0 degrees of freedom\nAIC: 227.35\n\nNumber of iterations: 5\n\nlibrary(logmult)\n\n\nAttaching package: 'logmult'\n\n\nThe following object is masked from 'package:vcd':\n\n    assoc\n\n\nThe following object is masked from 'package:gnm':\n\n    se\n\nanoas_model <- anoas(tab_2.3A, nd = 3)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...............................\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nanoas_model\n\n       Res. Df           Res. Dev    Dev./Indep. (%)     Dissim. (%)\nIndep.      18 211.69508974175693 100.00000000000000 8.0917102896466\nRC(1)       10   8.07181892814987   3.81294575041705 1.7673079267546\nRC(2)        4   1.36909098846090   0.64672779615769 0.4963921430961\nRC(3)        0   0.00000000000009   0.00000000000004 0.0000000000002\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617279 -11.92818107185013 -204 -8\nRC(2)  -31.20265305326816  -6.63090901153910   -7 -6\nRC(3)    0.00000000000009   0.00000000000009   -1 -4\n\nsummary(anoas_model)\n\n       Res. Df           Res. Dev    Dev./Indep. (%)     Dissim. (%)\nIndep.      18 211.69508974175693 100.00000000000000 8.0917102896466\nRC(1)       10   8.07181892814987   3.81294575041705 1.7673079267546\nRC(2)        4   1.36909098846090   0.64672779615769 0.4963921430961\nRC(3)        0   0.00000000000009   0.00000000000004 0.0000000000002\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617279 -11.92818107185013 -204 -8\nRC(2)  -31.20265305326816  -6.63090901153910   -7 -6\nRC(3)    0.00000000000009   0.00000000000009   -1 -4\n\nrc(tab_2.3A, d = 3)\n\nLevels are not identical, new factor will be based on sorted combined levels.\n\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\n\n\nWarning in matrix(pickCoef(model, \"Diag\\\\(\", value = TRUE), 1, nrow(tab)): data\nlength [4] is not a sub-multiple or multiple of the number of columns [7]\n\n\nWarning in rownames(tab) == colnames(tab): longer object length is not a\nmultiple of shorter object length\n\n\nCall:\nrc(tab = tab_2.3A, diagonal = 3)\n\nIntrinsic association coefficients:\n Dim1 \n0.259 \n\nNormalized row scores (Rows):\n      A       B       C       D       E       F       G \n 1.4876  1.3963  1.1207 -0.0203 -0.3155 -1.4779 -2.4334 \n\nNormalized column scores (Columns):\n     A      B      C      D \n 1.475  0.354 -1.077 -1.492 \n\nDiagonal coefficients:\n    A:A     B:B     C:C     D:D     E:A     F:B     G:C \n 0.2586 -0.2981  0.2310 -0.0498  0.2586 -0.2981  0.2310 \n\nNormalization weights: marginal\nDeviance:              3.191348\nPearson chi-squared:   3.221668\nDissimilarity index:   0.9476085%\nResidual df:           6\nBIC:                   -45.66627\nAIC:                   -8.808652\n\nbind_rows(model.summary(O),\n          model.summary(RC),\n          model.summary(RC2),\n          model.summary(RC3))\n\n# A tibble: 4 × 6\n  `Model Description`    df       L2       BIC    Delta     p\n  <chr>               <int>    <dbl>     <dbl>    <dbl> <dbl>\n1 O                      18 2.12e+ 2  6.51e+ 1 8.09e+ 0 1    \n2 RC                     10 8.07e+ 0 -7.34e+ 1 1.77e+ 0 0.378\n3 RC2                     4 1.37e+ 0 -3.12e+ 1 4.96e- 1 0.150\n4 RC3                     0 1.11e-15  1.11e-15 4.41e-14 1    \n\n\n\n## 表2.3B\nFreq <- c(518,  95, 6, 35, 5,\n         　 81,  67, 4, 49, 2,\n          452,1003,67,630, 5,\n           71, 157,37,562,12)\n\n\n# データを表形式に変換\ntab_2.3B <-\n  matrix(Freq,\n         nrow = 4,\n         ncol = 5,\n         byrow = TRUE) %>% as.table()\n\ntab_2.3B\n\n     A    B    C    D    E\nA  518   95    6   35    5\nB   81   67    4   49    2\nC  452 1003   67  630    5\nD   71  157   37  562   12\n\n# 度数，行変数，列変数からなる集計データを作成\nEduc <- gl(n = 4, k = 5)\nOcc <- gl(n = 5, k = 1, length = 20)\nfreq_tab_2.3B <- tibble(Freq, Educ, Occ)\nfreq_tab_2.3B\n\n# A tibble: 20 × 3\n    Freq Educ  Occ  \n   <dbl> <fct> <fct>\n 1   518 1     1    \n 2    95 1     2    \n 3     6 1     3    \n 4    35 1     4    \n 5     5 1     5    \n 6    81 2     1    \n 7    67 2     2    \n 8     4 2     3    \n 9    49 2     4    \n10     2 2     5    \n11   452 3     1    \n12  1003 3     2    \n13    67 3     3    \n14   630 3     4    \n15     5 3     5    \n16    71 4     1    \n17   157 4     2    \n18    37 4     3    \n19   562 4     4    \n20    12 4     5    \n\nO <- gnm(Freq ~ Educ + Occ,\n         family = poisson,\n         data = freq_tab_2.3B,\n         tolerance = 1e-12)\n\nmult1 <- residSVD(O, Educ, Occ)\nmult2 <- residSVD(O, Educ, Occ, d = 2)\nmult3 <- residSVD(O, Educ, Occ, d = 3)\n\nRC <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + Mult(1, Educ, Occ),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................\nDone\n\nvar_num(RC)\n\n                                        var    estimate number\n(Intercept)                     (Intercept)  4.84228734      1\nEduc2                                 Educ2 -0.83267338      2\nEduc3                                 Educ3  1.44242350      3\nEduc4                                 Educ4 -0.18953286      4\nOcc2                                   Occ2  0.47811221      5\nOcc3                                   Occ3 -2.08212145      6\nOcc4                                   Occ4  0.15944538      7\nOcc5                                   Occ5 -3.57932338      8\nMult(., Educ, Occ).     Mult(., Educ, Occ). -8.94312189      9\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1 -0.93109262     10\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2 -0.20019786     11\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3  0.03703327     12\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4  0.65249407     13\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1  0.16481820     14\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -0.04958694     15\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3 -0.16515958     16\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4 -0.25122571     17\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5 -0.11995114     18\n\nRC <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + Mult(1, Educ, Occ),\n    start = c(coef(O), 10, mult1),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nRunning main iterations.........................................................\n.......................\nDone\n\nRC2 <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), 2),\n    #      start = c(coef(O), NA, mult2[,1], NA, mult2[,2]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations....................\nDone\n\nRC2\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), \n    2), family = poisson, data = ., tolerance = 1e-12)\n\nCoefficients:\n                    (Intercept)                            Educ2  \n                        5.08611                         -0.94740  \n                          Educ3                            Educ4  \n                        1.02546                          0.15018  \n                           Occ2                             Occ3  \n                        0.41826                         -2.08862  \n                           Occ4                             Occ5  \n                        0.19014                         -3.99813  \n  Mult(., Educ, Occ, inst = 1).  Mult(1, ., Occ, inst = 1).Educ1  \n                       11.88745                          0.66539  \nMult(1, ., Occ, inst = 1).Educ2  Mult(1, ., Occ, inst = 1).Educ3  \n                        0.18460                         -0.08627  \nMult(1, ., Occ, inst = 1).Educ4  Mult(1, Educ, ., inst = 1).Occ1  \n                       -0.24059                          0.16592  \nMult(1, Educ, ., inst = 1).Occ2  Mult(1, Educ, ., inst = 1).Occ3  \n                       -0.08774                         -0.16440  \nMult(1, Educ, ., inst = 1).Occ4  Mult(1, Educ, ., inst = 1).Occ5  \n                       -0.22670                          0.02076  \n  Mult(., Educ, Occ, inst = 2).  Mult(1, ., Occ, inst = 2).Educ1  \n                       -0.15456                         -5.97628  \nMult(1, ., Occ, inst = 2).Educ2  Mult(1, ., Occ, inst = 2).Educ3  \n                       -4.15107                          6.90477  \nMult(1, ., Occ, inst = 2).Educ4  Mult(1, Educ, ., inst = 2).Occ1  \n                      -20.09459                         -0.16109  \nMult(1, Educ, ., inst = 2).Occ2  Mult(1, Educ, ., inst = 2).Occ3  \n                       -0.27298                         -0.00488  \nMult(1, Educ, ., inst = 2).Occ4  Mult(1, Educ, ., inst = 2).Occ5  \n                        0.08269                          0.42296  \n\nDeviance:            0.6001022 \nPearson chi-squared: 0.5746549 \nResidual df:         2 \n\nRC3 <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), 3),\n    start = c(coef(O), NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......\nDone\n\nRC3\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), \n    3), family = poisson, data = ., start = c(coef(O), NA, mult3[, \n    1], NA, mult3[, 2], NA, mult3[, 3]), tolerance = 1e-12)\n\nCoefficients:\n                    (Intercept)                            Educ2  \n                        4.72385                         -0.74353  \n                          Educ3                            Educ4  \n                        1.59795                          0.41892  \n                           Occ2                             Occ3  \n                        0.25233                         -2.15106  \n                           Occ4                             Occ5  \n                        0.11579                         -3.83099  \n  Mult(., Educ, Occ, inst = 1).  Mult(1, ., Occ, inst = 1).Educ1  \n                        0.92522                          1.33787  \nMult(1, ., Occ, inst = 1).Educ2  Mult(1, ., Occ, inst = 1).Educ3  \n                        0.30336                         -0.07232  \nMult(1, ., Occ, inst = 1).Educ4  Mult(1, Educ, ., inst = 1).Occ1  \n                       -0.99358                          1.16529  \nMult(1, Educ, ., inst = 1).Occ2  Mult(1, Educ, ., inst = 1).Occ3  \n                       -0.17639                         -0.63075  \nMult(1, Educ, ., inst = 1).Occ4  Mult(1, Educ, ., inst = 1).Occ5  \n                       -1.07146                          0.12669  \n  Mult(., Educ, Occ, inst = 2).  Mult(1, ., Occ, inst = 2).Educ1  \n                        0.79669                          0.40226  \nMult(1, ., Occ, inst = 2).Educ2  Mult(1, ., Occ, inst = 2).Educ3  \n                        0.49568                         -0.62304  \nMult(1, ., Occ, inst = 2).Educ4  Mult(1, Educ, ., inst = 2).Occ1  \n                        0.90711                          0.26018  \nMult(1, Educ, ., inst = 2).Occ2  Mult(1, Educ, ., inst = 2).Occ3  \n                       -0.62000                         -0.01683  \nMult(1, Educ, ., inst = 2).Occ4  Mult(1, Educ, ., inst = 2).Occ5  \n                        0.13370                          1.73569  \n  Mult(., Educ, Occ, inst = 3).  Mult(1, ., Occ, inst = 3).Educ1  \n                        0.37121                         -0.01965  \nMult(1, ., Occ, inst = 3).Educ2  Mult(1, ., Occ, inst = 3).Educ3  \n                        0.99469                          0.06372  \nMult(1, ., Occ, inst = 3).Educ4  Mult(1, Educ, ., inst = 3).Occ1  \n                       -0.19768                         -0.04247  \nMult(1, Educ, ., inst = 3).Occ2  Mult(1, Educ, ., inst = 3).Occ3  \n                        0.72146                         -0.70219  \nMult(1, Educ, ., inst = 3).Occ4  Mult(1, Educ, ., inst = 3).Occ5  \n                        0.11819                         -0.47984  \n\nDeviance:            -8.504308e-14 \nPearson chi-squared: 1.609123e-27 \nResidual df:         0 \n\nbind_rows(model.summary(O),\n          model.summary(RC),\n          model.summary(RC2),\n          model.summary(RC3))\n\n# A tibble: 4 × 6\n  `Model Description`    df        L2       BIC    Delta     p\n  <chr>               <int>     <dbl>     <dbl>    <dbl> <dbl>\n1 O                      12  1.37e+ 3  1.27e+ 3 2.39e+ 1 1    \n2 RC                      6  1.25e+ 2  7.55e+ 1 6.44e+ 0 1    \n3 RC2                     2  6.00e- 1 -1.59e+ 1 9.35e- 2 0.259\n4 RC3                     0 -8.50e-14 -8.50e-14 2.49e-14 0    \n\nanoas_model <- anoas(tab_2.3B, nd = 3)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations..........\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\nanoas_model\n\n       Res. Df            Res. Dev     Dev./Indep. (%)   Dissim. (%)\nIndep.      12 1373.17576565224545 100.000000000000000 23.8615752953\nRC(1)        6  125.05974855014668   9.107337289101114  6.4360390984\nRC(2)        2    0.60010223526821   0.043701778772885  0.0935165803\nRC(3)        0   -0.00000000000007  -0.000000000000005  0.0000000003\n                       BIC                 AIC    Dev. Df\nIndep. 1274.08091533065726 1349.17576565224545      NA NA\nRC(1)    75.51232338935264  113.05974855014668 -1248.1 -6\nRC(2)   -15.91570615166313   -3.39989776473179  -124.5 -4\nRC(3)    -0.00000000000007   -0.00000000000007    -0.6 -2"
  },
  {
    "objectID": "8-Note.html#位相モデル",
    "href": "8-Note.html#位相モデル",
    "title": "補足のノート",
    "section": "位相モデル",
    "text": "位相モデル\n\noccupationalStatus\n\n      destination\norigin   1   2   3   4   5   6   7   8\n     1  50  19  26   8   7  11   6   2\n     2  16  40  34  18  11  20   8   3\n     3  12  35  65  66  35  88  23  21\n     4  11  20  58 110  40 183  64  32\n     5   2   8  12  23  25  46  28  12\n     6  12  28 102 162  90 554 230 177\n     7   0   6  19  40  21 158 143  71\n     8   0   3  14  32  15 126  91 106\n\nfreq_occupationalStatus <- data.frame(occupationalStatus)\nfreq_occupationalStatus %<>%\n  mutate(\n    diag = ifelse(origin == destination, origin, 0) %>% factor(),\n    Rscore = scale(as.numeric(origin), scale = FALSE),\n    Cscore = scale(as.numeric(destination), scale = FALSE)\n  )\n\nfit_O <-\n  gnm(Freq ~ origin + destination, family = poisson, data = freq_occupationalStatus)\nfit_QI <-\n  gnm(Freq ~ origin + destination + diag,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_U <-\n  gnm(Freq ~ origin + destination + Rscore:Cscore,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_QI_U <-\n  gnm(Freq ~ origin + destination + diag + Rscore:Cscore,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_S <-\n  gnm(Freq ~ origin + destination + origin:destination,\n      family = poisson,\n      data = freq_occupationalStatus)\n\nfreq_occupationalStatus %<>%\n  mutate(\n    diag1 = ifelse(origin == 1 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag2 = ifelse(origin == 2 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag3 = ifelse(origin == 3 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag4 = ifelse(origin == 4 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag5 = ifelse(origin == 5 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag6 = ifelse(origin == 6 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag7 = ifelse(origin == 7 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag8 = ifelse(origin == 8 &\n                     origin == destination, 1, 0) %>% factor()\n  )\n\nfit_QI2 <-\n  gnm(\n    Freq ~ origin + destination + diag1 + diag2 + diag3 + diag4 + diag5 + diag6 + diag7 + diag8,\n    family = poisson,\n    data = freq_occupationalStatus\n  )\n\nsummary(fit_QI)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + diag, family = poisson, \n    data = freq_occupationalStatus)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-4.567e+00  -2.318e+00  -1.045e-07   1.018e+00   6.152e+00  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.36346    0.17892   2.031 0.042211 *  \norigin2       0.35445    0.14755   2.402 0.016292 *  \norigin3       1.34923    0.12758  10.575  < 2e-16 ***\norigin4       1.76957    0.12322  14.362  < 2e-16 ***\norigin5       0.56615    0.14257   3.971 7.16e-05 ***\norigin6       2.72612    0.11933  22.845  < 2e-16 ***\norigin7       1.54999    0.12619  12.283  < 2e-16 ***\norigin8       1.37488    0.12757  10.777  < 2e-16 ***\ndestination2  0.82044    0.16521   4.966 6.83e-07 ***\ndestination3  1.69007    0.15065  11.219  < 2e-16 ***\ndestination4  2.02648    0.14771  13.719  < 2e-16 ***\ndestination5  1.43966    0.15317   9.399  < 2e-16 ***\ndestination6  2.96856    0.14439  20.559  < 2e-16 ***\ndestination7  2.24512    0.14547  15.434  < 2e-16 ***\ndestination8  1.87534    0.14855  12.624  < 2e-16 ***\ndiag1         3.54857    0.22806  15.560  < 2e-16 ***\ndiag2         2.15053    0.20737  10.370  < 2e-16 ***\ndiag3         0.77163    0.15275   5.052 4.38e-07 ***\ndiag4         0.54098    0.12287   4.403 1.07e-05 ***\ndiag5         0.84961    0.22965   3.700 0.000216 ***\ndiag6         0.25903    0.07531   3.439 0.000583 ***\ndiag7         0.80428    0.11438   7.031 2.04e-12 ***\ndiag8         1.04976    0.12946   8.109  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 446.84 on 41 degrees of freedom\nAIC: 815.18\n\nNumber of iterations: 5\n\nsummary(fit_QI2)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + diag1 + diag2 + diag3 + \n    diag4 + diag5 + diag6 + diag7 + diag8, family = poisson, \n    data = freq_occupationalStatus)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-4.567e+00  -2.318e+00  -1.045e-07   1.018e+00   6.152e+00  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.36346    0.17892   2.031 0.042211 *  \norigin2       0.35445    0.14755   2.402 0.016292 *  \norigin3       1.34923    0.12758  10.575  < 2e-16 ***\norigin4       1.76957    0.12322  14.362  < 2e-16 ***\norigin5       0.56615    0.14257   3.971 7.16e-05 ***\norigin6       2.72612    0.11933  22.845  < 2e-16 ***\norigin7       1.54999    0.12619  12.283  < 2e-16 ***\norigin8       1.37488    0.12757  10.777  < 2e-16 ***\ndestination2  0.82044    0.16521   4.966 6.83e-07 ***\ndestination3  1.69007    0.15065  11.219  < 2e-16 ***\ndestination4  2.02648    0.14771  13.719  < 2e-16 ***\ndestination5  1.43966    0.15317   9.399  < 2e-16 ***\ndestination6  2.96856    0.14439  20.559  < 2e-16 ***\ndestination7  2.24512    0.14547  15.434  < 2e-16 ***\ndestination8  1.87534    0.14855  12.624  < 2e-16 ***\ndiag11        3.54857    0.22806  15.560  < 2e-16 ***\ndiag21        2.15053    0.20737  10.370  < 2e-16 ***\ndiag31        0.77163    0.15275   5.052 4.38e-07 ***\ndiag41        0.54098    0.12287   4.403 1.07e-05 ***\ndiag51        0.84961    0.22965   3.700 0.000216 ***\ndiag61        0.25903    0.07531   3.439 0.000583 ***\ndiag71        0.80428    0.11438   7.031 2.04e-12 ***\ndiag81        1.04976    0.12946   8.109  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 446.84 on 41 degrees of freedom\nAIC: 815.18\n\nNumber of iterations: 5\n\nanova(fit_O, fit_QI, fit_U, fit_QI_U, fit_S)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ origin + destination\nModel 2: Freq ~ origin + destination + diag\nModel 3: Freq ~ origin + destination + Rscore:Cscore\nModel 4: Freq ~ origin + destination + diag + Rscore:Cscore\nModel 5: Freq ~ origin + destination + origin:destination\n  Resid. Df Resid. Dev Df Deviance\n1        49     954.49            \n2        41     446.84  8   507.65\n3        48     164.33 -7   282.51\n4        40      58.44  8   105.89\n5         0       0.00 40    58.44\n\nbind_rows(\n  model.summary(fit_O),\n  model.summary(fit_QI),\n  model.summary(fit_U),\n  model.summary(fit_QI_U),\n  model.summary(fit_S)\n)\n\n# A tibble: 5 × 6\n  `Model Description`    df      L2      BIC    Delta     p\n  <chr>               <int>   <dbl>    <dbl>    <dbl> <dbl>\n1 fit_O                  49 9.54e+2  5.55e+2 1.66e+ 1 1    \n2 fit_QI                 41 4.47e+2  1.12e+2 1.00e+ 1 1    \n3 fit_U                  48 1.64e+2 -2.27e+2 7.26e+ 0 1.00 \n4 fit_QI_U               40 5.84e+1 -2.68e+2 3.53e+ 0 0.970\n5 fit_S                   0 4.50e-8  4.50e-8 3.22e-10 1    \n\n\n\ndata(erikson)\nerikson\n\n, , country = EW\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I     311  130   79   24   22    7   70   44    1\n  II    161  128   66   22   11    6  112   47    1\n  III   128  109   89   26   25    3  197  113    4\n  IVa    88   83   43   72   41    5  112   64    4\n  IVb    36   45   38   27   47    3  110   80    4\n  IVc    43   23   25   16   14   99   86   81   40\n  V/VI  356  375  325  108  140    5 1506  839   22\n  VIIa  150  180  187   48   74    9  802  685   15\n  VIIb   12   14   18    5   18   10   96  114   56\n\n, , country = F\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I     105   72   19    9    8    3   26   11    1\n  II     59  113   37    9   14    0   54   34    2\n  III    40   86   64   10   20    4  103   61    4\n  IVa    38   37   17   38   23    2   36   22    1\n  IVb    40   68   55   38   95   10   92   74    7\n  IVc    27   74   77   27   52  461  156  286   73\n  V/VI   36  138   93   22   38    5  339  189    9\n  VIIa   22   88   79   18   24    8  235  209   11\n  VIIb    4   18   26    9   14   19   68  107   47\n\n, , country = S\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I      52   15   13    3    2    0   11    7    0\n  II     30   27   14    3    4    0   27   12    2\n  III    10   19   10    2    4    0   16   11    1\n  IVa    26   24    5   20    8    1   33   22    0\n  IVb     8   13    6    3    9    4   31   20    1\n  IVc    24   47   44   17   22   92  132  144   21\n  V/VI   33   89   40   13   18    5  188  104    5\n  VIIa   32   49   28   14   17    5  159  109    4\n  VIIb    5   10    3    0    6    3   33   42    8\n\ndimnames(erikson)\n\n$origin\n[1] \"I\"    \"II\"   \"III\"  \"IVa\"  \"IVb\"  \"IVc\"  \"V/VI\" \"VIIa\" \"VIIb\"\n\n$destination\n[1] \"I\"    \"II\"   \"III\"  \"IVa\"  \"IVb\"  \"IVc\"  \"V/VI\" \"VIIa\" \"VIIb\"\n\n$country\n[1] \"EW\" \"F\"  \"S\" \n\ndimnames(erikson)$origin <-\n  c(\"I+II\",\"I+II\",\"III\",\"IVab\",\"IVab\",\"IVc\",\"V/VI\",\"VIIa\",\"VIIb\")\ndimnames(erikson)$destination <-\n  c(\"I+II\",\"I+II\",\"III\",\"IVab\",\"IVab\",\"IVc\",\"V/VI\",\"VIIa\",\"VIIb\")\nfreq_erikson <- data.frame(erikson)\nerikson2 <-\n  xtabs(Freq ~ origin + destination + country, data = freq_erikson)\nfreq_erikson <- data.frame(erikson2)\n\nlevelMatrix <- rep(c(2, 3, 4, 6, 5, 6, 6,\n                     3, 3, 4, 6, 4, 5, 6,\n                     4, 4, 2, 5, 5, 5, 5,\n                     6, 6, 5, 1, 6, 5, 2,\n                     4, 4, 5, 6, 3, 4, 5,\n                     5, 4, 5, 5, 3, 3, 5,\n                     6, 6, 5, 3, 5, 4, 1), times = 3) %>% as.factor()\nd <- bind_cols(freq_erikson, levelMatrix = levelMatrix)\n\nfit_O <-\n  gnm(\n    Freq ~ origin + destination + country + origin * country +\n      destination * country,\n    family = poisson,\n    data = d\n  )\n\n\nfit_Common <- gnm(\n  Freq ~ origin + destination + country +\n    origin * country + destination * country +\n    origin * destination,\n  family = poisson,\n  data = d\n)\n\nfit_Common_Pattern <- gnm(\n  Freq ~ origin + destination + country +\n    origin * country + destination * country + levelMatrix,\n  family = poisson,\n  data = d\n)\n\nd %<>% mutate(\n  pred1 = fit_O$fitted.values,\n  pred2 = fit_Common$fitted.values,\n  pred3 = fit_Common_Pattern$fitted.values\n)\n\nsummary(fit_O)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + country + origin * \n    country + destination * country, family = poisson, data = d)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-12.763   -3.562   -1.393    1.767   22.208  \n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               5.74389    0.03348 171.575  < 2e-16 ***\noriginIII                -0.58201    0.04739 -12.281  < 2e-16 ***\noriginIVab               -0.31986    0.04375  -7.312 2.64e-13 ***\noriginIVc                -1.06769    0.05610 -19.032  < 2e-16 ***\noriginV/VI                1.08510    0.03282  33.062  < 2e-16 ***\noriginVIIa                0.54874    0.03564  15.397  < 2e-16 ***\noriginVIIb               -1.28675    0.06100 -21.095  < 2e-16 ***\ndestinationIII           -1.00300    0.03964 -25.305  < 2e-16 ***\ndestinationIVab          -1.16484    0.04211 -27.664  < 2e-16 ***\ndestinationIVc           -2.78106    0.08498 -32.724  < 2e-16 ***\ndestinationV/VI           0.26476    0.02730   9.699  < 2e-16 ***\ndestinationVIIa          -0.13764    0.03009  -4.574 4.78e-06 ***\ndestinationVIIb          -2.78106    0.08500 -32.720  < 2e-16 ***\ncountryF                 -0.88695    0.05988 -14.811  < 2e-16 ***\ncountryS                 -1.74777    0.08424 -20.747  < 2e-16 ***\noriginIII:countryF        0.19716    0.08083   2.439 0.014718 *  \noriginIVab:countryF       0.50479    0.07136   7.073 1.51e-12 ***\noriginIVc:countryF        1.82879    0.07546  24.235  < 2e-16 ***\noriginV/VI:countryF      -0.67387    0.06296 -10.703  < 2e-16 ***\noriginVIIa:countryF      -0.36238    0.06669  -5.434 5.51e-08 ***\noriginVIIb:countryF       0.67364    0.09307   7.238 4.55e-13 ***\noriginIII:countryS       -0.53021    0.14300  -3.708 0.000209 ***\noriginIVab:countryS       0.37251    0.10340   3.603 0.000315 ***\noriginIVc:countryS        1.96213    0.09743  20.138  < 2e-16 ***\noriginV/VI:countryS      -0.28322    0.08719  -3.248 0.001161 ** \noriginVIIa:countryS       0.08166    0.09040   0.903 0.366354    \noriginVIIb:countryS       0.58455    0.13159   4.442 8.90e-06 ***\ndestinationIII:countryF   0.17859    0.06820   2.619 0.008827 ** \ndestinationIVab:countryF  0.34258    0.06963   4.920 8.66e-07 ***\ndestinationIVc:countryF   2.04865    0.10057  20.370  < 2e-16 ***\ndestinationV/VI:countryF -0.22428    0.05085  -4.411 1.03e-05 ***\ndestinationVIIa:countryF  0.06764    0.05340   1.267 0.205290    \ndestinationVIIb:countryF  0.85375    0.12089   7.062 1.64e-12 ***\ndestinationIII:countryS  -0.14353    0.09826  -1.461 0.144099    \ndestinationIVab:countryS  0.03051    0.09891   0.308 0.757741    \ndestinationIVc:countryS   1.24126    0.13514   9.185  < 2e-16 ***\ndestinationV/VI:countryS -0.05932    0.06543  -0.907 0.364667    \ndestinationVIIa:countryS  0.05222    0.07055   0.740 0.459234    \ndestinationVIIb:countryS  0.27845    0.18161   1.533 0.125225    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 4860 on 108 degrees of freedom\nAIC: 5752.1\n\nNumber of iterations: 6\n\nnames(fit_Common)\n\n [1] \"call\"          \"formula\"       \"terms\"         \"data\"         \n [5] \"eliminate\"     \"ofInterest\"    \"na.action\"     \"xlevels\"      \n [9] \"offset\"        \"tolerance\"     \"iterStart\"     \"iterMax\"      \n[13] \"coefficients\"  \"residuals\"     \"fitted.values\" \"rank\"         \n[17] \"family\"        \"predictors\"    \"deviance\"      \"aic\"          \n[21] \"iter\"          \"weights\"       \"prior.weights\" \"df.residual\"  \n[25] \"y\"             \"converged\"     \"constrain\"     \"constrainTo\"  \n[29] \"x\"             \"model\"        \n\nnames(summary(fit_Common))\n\n [1] \"call\"           \"ofInterest\"     \"family\"         \"deviance\"      \n [5] \"aic\"            \"df.residual\"    \"iter\"           \"deviance.resid\"\n [9] \"coefficients\"   \"eliminated\"     \"dispersion\"     \"df\"            \n[13] \"cov.scaled\"    \n\nsummary(fit_Common)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + country + origin * \n    country + destination * country + origin * destination, family = poisson, \n    data = d)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-2.894368  -0.493141  -0.001321   0.470201   2.903940  \n\nCoefficients:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                 6.59629    0.03453 191.003  < 2e-16 ***\noriginIII                  -1.13823    0.06560 -17.351  < 2e-16 ***\noriginIVab                 -1.07370    0.06143 -17.479  < 2e-16 ***\noriginIVc                  -2.70361    0.09016 -29.987  < 2e-16 ***\noriginV/VI                  0.01007    0.04703   0.214 0.830527    \noriginVIIa                 -0.77338    0.05726 -13.507  < 2e-16 ***\noriginVIIb                 -3.26650    0.13781 -23.702  < 2e-16 ***\ndestinationIII             -1.69227    0.07692 -22.001  < 2e-16 ***\ndestinationIVab            -2.25353    0.09612 -23.445  < 2e-16 ***\ndestinationIVc             -4.55452    0.25826 -17.635  < 2e-16 ***\ndestinationV/VI            -1.34800    0.06703 -20.112  < 2e-16 ***\ndestinationVIIa            -2.03630    0.08773 -23.212  < 2e-16 ***\ndestinationVIIb            -5.12499    0.38197 -13.417  < 2e-16 ***\ncountryF                   -0.79371    0.05423 -14.637  < 2e-16 ***\ncountryS                   -1.65837    0.07661 -21.646  < 2e-16 ***\noriginIII:countryF          0.20390    0.08179   2.493 0.012668 *  \noriginIVab:countryF         0.48071    0.07350   6.540 6.15e-11 ***\noriginIVc:countryF          1.61954    0.08393  19.295  < 2e-16 ***\noriginV/VI:countryF        -0.64330    0.06586  -9.767  < 2e-16 ***\noriginVIIa:countryF        -0.33935    0.07019  -4.835 1.33e-06 ***\noriginVIIb:countryF         0.64616    0.09861   6.553 5.65e-11 ***\noriginIII:countryS         -0.49402    0.14390  -3.433 0.000597 ***\noriginIVab:countryS         0.42215    0.10589   3.987 6.70e-05 ***\noriginIVc:countryS          2.10894    0.10644  19.814  < 2e-16 ***\noriginV/VI:countryS        -0.23466    0.09102  -2.578 0.009934 ** \noriginVIIa:countryS         0.14235    0.09505   1.498 0.134221    \noriginVIIb:countryS         0.72346    0.13754   5.260 1.44e-07 ***\ndestinationIII:countryF     0.17483    0.07130   2.452 0.014209 *  \ndestinationIVab:countryF    0.18250    0.07402   2.465 0.013684 *  \ndestinationIVc:countryF     0.73972    0.11572   6.392 1.64e-10 ***\ndestinationV/VI:countryF   -0.11294    0.05496  -2.055 0.039884 *  \ndestinationVIIa:countryF    0.02129    0.05885   0.362 0.717449    \ndestinationVIIb:countryF    0.11636    0.13452   0.865 0.387023    \ndestinationIII:countryS    -0.22236    0.10142  -2.192 0.028352 *  \ndestinationIVab:countryS   -0.17172    0.10342  -1.660 0.096839 .  \ndestinationIVc:countryS    -0.38697    0.15155  -2.553 0.010668 *  \ndestinationV/VI:countryS   -0.09561    0.07021  -1.362 0.173263    \ndestinationVIIa:countryS   -0.17583    0.07672  -2.292 0.021913 *  \ndestinationVIIb:countryS   -0.64986    0.19498  -3.333 0.000859 ***\noriginIII:destinationIII    0.76642    0.11807   6.491 8.52e-11 ***\noriginIVab:destinationIII   0.52595    0.11560   4.550 5.37e-06 ***\noriginIVc:destinationIII    1.17849    0.13041   9.037  < 2e-16 ***\noriginV/VI:destinationIII   0.87374    0.09195   9.502  < 2e-16 ***\noriginVIIa:destinationIII   1.10866    0.10285  10.779  < 2e-16 ***\noriginVIIb:destinationIII   1.36163    0.20619   6.604 4.01e-11 ***\noriginIII:destinationIVab   0.69419    0.15016   4.623 3.78e-06 ***\noriginIVab:destinationIVab  2.02108    0.11352  17.804  < 2e-16 ***\noriginIVc:destinationIVab   1.73618    0.14216  12.213  < 2e-16 ***\noriginV/VI:destinationIVab  1.12813    0.11169  10.101  < 2e-16 ***\noriginVIIa:destinationIVab  1.25162    0.12471  10.036  < 2e-16 ***\noriginVIIb:destinationIVab  2.01369    0.20909   9.631  < 2e-16 ***\noriginIII:destinationIVc    0.23560    0.45713   0.515 0.606273    \noriginIVab:destinationIVc   1.24669    0.32500   3.836 0.000125 ***\noriginIVc:destinationIVc    5.21749    0.26575  19.633  < 2e-16 ***\noriginV/VI:destinationIVc   0.18607    0.36231   0.514 0.607553    \noriginVIIa:destinationIVc   1.22166    0.33304   3.668 0.000244 ***\noriginVIIb:destinationIVc   3.56730    0.33324  10.705  < 2e-16 ***\noriginIII:destinationV/VI   1.17516    0.09949  11.812  < 2e-16 ***\noriginIVab:destinationV/VI  1.20044    0.09270  12.950  < 2e-16 ***\noriginIVc:destinationV/VI   1.88309    0.10710  17.582  < 2e-16 ***\noriginV/VI:destinationV/VI  2.05945    0.07524  27.372  < 2e-16 ***\noriginVIIa:destinationV/VI  2.21492    0.08327  26.601  < 2e-16 ***\noriginVIIb:destinationV/VI  2.54647    0.15871  16.045  < 2e-16 ***\noriginIII:destinationVIIa   1.28947    0.12352  10.440  < 2e-16 ***\noriginIVab:destinationVIIa  1.46717    0.11334  12.944  < 2e-16 ***\noriginIVc:destinationVIIa   2.84331    0.11806  24.084  < 2e-16 ***\noriginV/VI:destinationVIIa  2.14755    0.09583  22.410  < 2e-16 ***\noriginVIIa:destinationVIIa  2.70994    0.10109  26.807  < 2e-16 ***\noriginVIIb:destinationVIIa  3.48535    0.16446  21.193  < 2e-16 ***\noriginIII:destinationVIIb   1.34327    0.50723   2.648 0.008091 ** \noriginIVab:destinationVIIb  1.75599    0.45232   3.882 0.000104 ***\noriginIVc:destinationVIIb   4.65198    0.39743  11.705  < 2e-16 ***\noriginV/VI:destinationVIIb  1.80532    0.41541   4.346 1.39e-05 ***\noriginVIIa:destinationVIIb  2.31365    0.42297   5.470 4.50e-08 ***\noriginVIIb:destinationVIIb  5.72803    0.41103  13.936  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 121.3 on 72 degrees of freedom\nAIC: 1085.4\n\nNumber of iterations: 4\n\nanova(fit_O, fit_Common_Pattern, fit_Common)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ origin + destination + country + origin:country + destination:country\nModel 2: Freq ~ origin + destination + country + origin:country + destination:country + \n    levelMatrix\nModel 3: Freq ~ origin + destination + country + origin:country + destination:country + \n    origin:destination\n  Resid. Df Resid. Dev Df Deviance\n1       108     4860.0            \n2       103      505.6  5   4354.4\n3        72      121.3 31    384.3"
  },
  {
    "objectID": "8-Note.html#xie",
    "href": "8-Note.html#xie",
    "title": "補足のノート",
    "section": "Xie",
    "text": "Xie\n\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)\nFreq <- c(5, 3, 10, 11, 4, 5, 8, 6, 26, 11, 3, 6, 23, 11, 1, 2)\nRow <- gl(n = 4, k = 4)\nCol <- gl(n = 4, k = 1, length = 16)\nd <- tibble(Freq, Row, Col)\n\nfit <-\n  gnm(Freq ~ Row + Col + Mult(1, Row, Col),\n      family = poisson,\n      data = d)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\n\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col + Mult(1, Row, Col), family = poisson, \n    data = d)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.51267  -0.25916  -0.03574   0.25369   0.66120  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)            2.26787         NA      NA       NA\nRow2                  -0.11845         NA      NA       NA\nRow3                   0.60428         NA      NA       NA\nRow4                   0.15022         NA      NA       NA\nCol2                  -0.53064         NA      NA       NA\nCol3                  -1.15468         NA      NA       NA\nCol4                  -0.79274         NA      NA       NA\nMult(., Row, Col).   -13.05260         NA      NA       NA\nMult(1, ., Col).Row1   0.46488         NA      NA       NA\nMult(1, ., Col).Row2   0.36051         NA      NA       NA\nMult(1, ., Col).Row3  -0.21228         NA      NA       NA\nMult(1, ., Col).Row4  -0.46968         NA      NA       NA\nMult(1, Row, .).Col1   0.12239         NA      NA       NA\nMult(1, Row, .).Col2   0.06808         NA      NA       NA\nMult(1, Row, .).Col3  -0.20718         NA      NA       NA\nMult(1, Row, .).Col4  -0.13544         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.7442 on 4 degrees of freedom\nAIC: 84.814\n\nNumber of iterations: 8\n\nrowProbs <- with(d, tapply(Freq, Row, sum) / sum(Freq))\ncolProbs <- with(d, tapply(Freq, Col, sum) / sum(Freq))\nmu <- getContrasts(\n  fit,\n  pickCoef(fit, \"[.]Row\"),\n  ref = rowProbs,\n  scaleRef = rowProbs,\n  scaleWeights = rowProbs\n)\nnu <- getContrasts(\n  fit,\n  pickCoef(fit, \"[.]Col\"),\n  ref = colProbs,\n  scaleRef = colProbs,\n  scaleWeights = colProbs\n)\nfit <-\n  gnm(\n    Freq ~ Row + Col + Mult(1, Row, Col),\n    family = poisson,\n    data = d,\n    constrain = 9:16,\n    constrainTo = c(mu$qvframe[, 1], -1 * nu$qvframe[, 1])\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nmu_score <- rep(mu$qvframe[, 1], each = 4)\nnu_score <- rep(nu$qvframe[, 1], 4)\nd <- d |>  mutate(mu = mu_score,\n              nu = nu_score)\n\n# Canonical correlation\nlibrary(wCorr)\n\nwCorr v1.9.6\n\nwith(d, weightedCorr(mu, x = nu, weights = Freq, method=\"polychoric\"))\n\n[1] -0.5602552\n\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col + Mult(1, Row, Col), constrain = 9:16, \n    constrainTo = c(mu$qvframe[, 1], -1 * nu$qvframe[, 1]), family = poisson, \n    data = d)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.51267  -0.25916  -0.03574   0.25369   0.66120  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            2.2730     0.2679   8.484  < 2e-16 ***\nRow2                  -0.1064     0.2823  -0.377 0.706328    \nRow3                   0.6827     0.2698   2.530 0.011397 *  \nRow4                   0.2584     0.2844   0.908 0.363656    \nCol2                  -0.5588     0.2278  -2.454 0.014141 *  \nCol3                  -1.3258     0.3082  -4.301 1.70e-05 ***\nCol4                  -0.9266     0.2677  -3.462 0.000536 ***\nMult(., Row, Col).     0.6577     0.1127   5.836 5.35e-09 ***\nMult(1, ., Col).Row1   1.3355         NA      NA       NA    \nMult(1, ., Col).Row2   1.0593         NA      NA       NA    \nMult(1, ., Col).Row3  -0.4565         NA      NA       NA    \nMult(1, ., Col).Row4  -1.1376         NA      NA       NA    \nMult(1, Row, .).Col1  -0.8514         NA      NA       NA    \nMult(1, Row, .).Col2  -0.4441         NA      NA       NA    \nMult(1, Row, .).Col3   1.6203         NA      NA       NA    \nMult(1, Row, .).Col4   1.0823         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.7442 on 8 degrees of freedom\nAIC: 76.814\n\nNumber of iterations: 3\n\nphi <- fit$coefficients[\"Mult(., Row, Col).\"] %>% abs()\nrho <- (-1 + sqrt(1 + 4 * phi ^ 2)) / (2 * phi)\neta <- (2 * phi) ^ (-1)\ntau <- (1 + eta ^ 2) ^ (1 / 2) - eta\nmu\n\n                       Estimate Std. Error\nMult(1, ., Col).Row1  1.3354658  0.1909635\nMult(1, ., Col).Row2  1.0592605  0.2590555\nMult(1, ., Col).Row3 -0.4564888  0.2467937\nMult(1, ., Col).Row4 -1.1376491  0.2191522\n\nnu\n\n                       Estimate Std. Error\nMult(1, Row, .).Col1  0.8513968  0.1194283\nMult(1, Row, .).Col2  0.4440776  0.2763713\nMult(1, Row, .).Col3 -1.6203060  0.2558555\nMult(1, Row, .).Col4 -1.0822644  0.2870932\n\nphi\n\nMult(., Row, Col). \n         0.6576831 \n\nrho\n\nMult(., Row, Col). \n         0.4959289 \n\ntau\n\nMult(., Row, Col). \n         0.4959289 \n\ndelta_mu <- abs((-1.3354658 - 1.1376491) / (1 - 4))\ndelta_nu <- abs((-0.8513968 - 1.0822644) / (1 - 4))\n# Adjusted\ntau * ((1 - delta_mu / 12) * (1 - delta_nu / 12)) ^ (-1 / 2)\n\nMult(., Row, Col). \n         0.5282781 \n\nlibrary(logmult)\ntab <- matrix(Freq,\n              nrow = 4,\n              ncol = 4,\n              byrow = TRUE)\nrc2 <- rc(tab,\n          nd = 1,\n          weighting = \"marginal\",\n          se = \"bootstrap\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............\nDone\nComputing bootstrap standard errors...\n\n\nLoading required namespace: parallel\n\n\n.\n\n\nWarning in jackboot(se, ncpus, nreplicates, tab, model, assoc1 =\ngetS3method(\"assoc\", : 3 model replicates failed and their results will be\nskipped. Standard errors will not be completely accurate. Consider raising the\nvalue of iterMax.\n\nsummary(rc2)\n\nCall:\nrc(tab = tab, nd = 1, weighting = \"marginal\", se = \"bootstrap\")\n\nDeviance Residuals:\n    Columns\nRows         A         B         C         D\n   A   0.18575  -0.40583  -0.21673   0.32921\n   B  -0.38647   0.66120   0.30497  -0.51267\n   C   0.23692  -0.44850  -0.07819   0.21153\n   D  -0.15877   0.30399   0.00672  -0.14657\n\nAssociation coefficients:\n               Normalized  Adjusted  Std. error   Pr(>|z|)     \nDim1              0.65768        NA      0.2664  0.0135689  *  \nDim1:RowsA        1.33547   1.08303      0.2484  7.561e-08  ***\nDim1:RowsB        1.05926   0.85904      0.3122  0.0006924  ***\nDim1:RowsC       -0.45649  -0.37020      0.2653  0.0852820  .  \nDim1:RowsD       -1.13765  -0.92261      0.2762  3.801e-05  ***\nDim1:ColumnsA    -0.85140  -0.69046      0.1389  8.915e-10  ***\nDim1:ColumnsB    -0.44408  -0.36014      0.3212  0.1667834     \nDim1:ColumnsC     1.62031   1.31403      0.3316  1.029e-06  ***\nDim1:ColumnsD     1.08226   0.87769      0.3666  0.0031545  ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: marginal\nDeviance:              1.744218\nPearson chi-squared:   1.760665\nDissimilarity index:   4.670712%\nResidual df:           4\nBIC:                   -17.87688\nAIC:                   -6.255782\n\nassoc(rc2)\n\n$phi\n          Dim1\n[1,] 0.6576832\n\n$row\n, , 1\n\n        Dim1\nA  1.3354659\nB  1.0592602\nC -0.4564886\nD -1.1376492\n\n\n$col\n, , 1\n\n        Dim1\nA -0.8513968\nB -0.4440776\nC  1.6203060\nD  1.0822643\n\n\n$diagonal\nnumeric(0)\n\n$weighting\n[1] \"marginal\"\n\n$row.weights\n  [,1]\nA   29\nB   23\nC   46\nD   37\n\n$col.weights\n  [,1]\nA   58\nB   30\nC   22\nD   25\n\n$vars\n[1] \"Rows\"    \"Columns\"\n\nattr(,\"class\")\n[1] \"assoc.rc\" \"assoc\""
  }
]