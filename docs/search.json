[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "『カテゴリカルデータのための連関モデル』",
    "section": "",
    "text": "このページは\nRaymond Wong著・藤原翔訳．2021．『カテゴリカルデータの連関分析』共立出版．\nのためのサポートページです．本書の付録や補遺とすることも検討しましたが，Association Modelsは他のQASSに比べて分量が多いため（156ページ！），そしてRのバージョンアップやパッケージの更新などに備えるため，正誤表もあわせて公開するためにオンラインで公開することにしました．本書と関連した連関モデルの適用例の情報についても，このサポートページで補うことができればと思います．\nこのサポートページでは，特にRの基本的な操作方法と，Rを用いた連関分析の方法を紹介します．各章ごとにRの実行方法をまとめています．モデルの意味や結果の解釈などについては本書を参考にしてください．\nなおこのサポートページの内容は英語版のサポートページ https://studysites.sagepub.com/wongstudy/ が元になっています．そちらもぜひ参考にしてください．\n\n\n\n本サポートページのスクリプトはそのままコピー・アンド・ペーストすることが可能です． スクリプトを選択してコピーしても良いですし，各スクリプトの右上の図をクリックしてもコピーされます．\n\nなおRのスクリプトについては https://github.com/ShoFujihara/Association_Models_Japanese の scripts というフォルダに保存されているので，そちらを参照してください．Googleドライブにもスクリプトを保存しておきます． https://drive.google.com/drive/folders/1oP0EURmoD8-dIkC6MCqDS3_0ysOz7t-0?usp=sharing\n\n\n\n\n\n\n2022年4月25日"
  },
  {
    "objectID": "8-Note.html",
    "href": "8-Note.html",
    "title": "補足のノート",
    "section": "",
    "text": "library(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)\nlibrary(vcd)"
  },
  {
    "objectID": "8-Note.html#クロス表の作成",
    "href": "8-Note.html#クロス表の作成",
    "title": "補足のノート",
    "section": "クロス表の作成",
    "text": "クロス表の作成\n\nFreq <- c( 64,  94, 58, 46, \n           57,  94, 54, 40,\n           57, 105, 65, 60,\n           72, 141, 77, 94,\n           36,  97, 54, 78,\n           21,  71, 54, 71)\n# byrow = TRUEとすることを忘れずに．\ntab <- matrix(Freq, nrow = 6, ncol = 4, byrow = TRUE) %>% as.table()\ndimnames(tab)\n\n[[1]]\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\"\n\n[[2]]\n[1] \"A\" \"B\" \"C\" \"D\"\n\ndimnames(tab) <- list(SES = LETTERS[1:6],\n                      MHS = c(\"well\", \"mild\", \"modelrate\", \"impared\"))\ntab\n\n   MHS\nSES well mild modelrate impared\n  A   64   94        58      46\n  B   57   94        54      40\n  C   57  105        65      60\n  D   72  141        77      94\n  E   36   97        54      78\n  F   21   71        54      71"
  },
  {
    "objectID": "8-Note.html#集計データの作成",
    "href": "8-Note.html#集計データの作成",
    "title": "補足のノート",
    "section": "集計データの作成",
    "text": "集計データの作成\n\n表のデータではなく，各変数の組み合わせとその度数からなるデータを作成する．\n度数はまず1行目について数値を並べ（1行1列から1行\\(I\\)列まで），次に2行目について数値を並べる（2行1列から2行\\(I\\)列まで）．これをFreqとする．\n例として「編者による序文」の親の職業と精神的健康の例で考えてみる．これは\\(6\\times4\\)のクロス表なので，まず1行1列から1行4列までの数字を入力し，次に2行1列から2行4列まで入力する．これを3行目から6行目まで繰り返す．表との対応を考えて適当な改行をいれるのもよい．ただしRは改行を入れても入れなくても，単に数値の列（ベクトル）として扱う．\nglによって変数を作成する．度数がどの行と列に対応しているのかに注意してほしい．\n\n\n# 1行1列から1行4列，・・・・，6行1列から6行4列まで順に入力\nFreq <- c( 64, 94, 58, 46, 57, 94, 54, 40, 57, 105, 65, 60, 72, 141, 77, 94, 36,  97, 54, 78, 21, 71, 54, 71)\n\n# 表ようにして入力\nFreq <- c( 64,  94, 58, 46, \n           57,  94, 54, 40,\n           57, 105, 65, 60,\n           72, 141, 77, 94,\n           36,  97, 54, 78,\n           21,  71, 54, 71)\n\n\n行カテゴリと列カテゴリの数は\\(I\\)や\\(J\\)となっている．\nIを使いたいが，Rの関数にすでに用意されているので別の名前を考える．ここではNIとNJとする．\n例のデータでは，行カテゴリ数\\(I = 4\\)，列カテゴリ数\\(J = 5\\)である．\n\n\nNI <- 4\nNJ <- 6\n\n\nでは，Freqに対応する行カテゴリと列カテゴリを並べてみる．先程の入力のルールにしたがうと，行については1行1列から1行4列までの数字を入力しているので1,1,1,1となり，次に2,2,2,2となる．これを繰り返し最後は6,6,6,6となる．列については，1,2,3,4が6回繰り返される．\n\n\nRow <- c(1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6)\nCol <- c(1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4)\nclass(Row)\n\n[1] \"numeric\"\n\nclass(Col)\n\n[1] \"numeric\"\n\n\n\n属性が数値になっているのでas.factor（またはfactor）で因子（factor）に変換する．\n\n\nRow <- as.factor(Row)\nCol <- as.factor(Col)\nclass(Row);class(Col)\n\n[1] \"factor\"\n\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6\nLevels: 1 2 3 4 5 6\n\nCol\n\n [1] 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4\nLevels: 1 2 3 4\n\n\n\n単純な数値の列を作成したければrep関数が便利である．これは整数（integer）となる．\n\n\nRow <- rep(1:4, each = 5)\nCol <- rep(1:5, length.out = 20)\nclass(Row)\n\n[1] \"integer\"\n\nclass(Col)\n\n[1] \"integer\"\n\nRow <- as.factor(Row)\nCol <- as.factor(Col)\nclass(Row)\n\n[1] \"factor\"\n\nclass(Col)\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4\nLevels: 1 2 3 4\n\nCol\n\n [1] 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5\nLevels: 1 2 3 4 5\n\n\n\nglはGenerate Factor Levelsという関数で，repに似ているが，数値ではなく因子を結果として出力する．\n1からnまでの数字をぞれぞれk回繰り返して出力する．\n\n\nRow <- gl(n = 6, k = 4)\nCol <- gl(n = 4, k = 1, length = 24)\nclass(Row)\n\n[1] \"factor\"\n\nclass(Col)\n\n[1] \"factor\"\n\nRow\n\n [1] 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 5 5 5 5 6 6 6 6\nLevels: 1 2 3 4 5 6\n\nCol\n\n [1] 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4\nLevels: 1 2 3 4\n\n\n\n以上より，Freq，Row，Colの3つの変数が作成された．これらからなるデータを作成する．data.frameとtibbleのどちらでもよいが， tibbleの場合は表示させた後に，データの構造（<dbl> <fct> <fct>）が表示される．\n\n\nd <- data.frame(Freq, Row, Col)\nd\n\n   Freq Row Col\n1    64   1   1\n2    94   1   2\n3    58   1   3\n4    46   1   4\n5    57   2   1\n6    94   2   2\n7    54   2   3\n8    40   2   4\n9    57   3   1\n10  105   3   2\n11   65   3   3\n12   60   3   4\n13   72   4   1\n14  141   4   2\n15   77   4   3\n16   94   4   4\n17   36   5   1\n18   97   5   2\n19   54   5   3\n20   78   5   4\n21   21   6   1\n22   71   6   2\n23   54   6   3\n24   71   6   4\n\n# tibble でもよい\nd <- tibble(Freq, Row, Col)\nd\n\n# A tibble: 24 × 3\n    Freq Row   Col  \n   <dbl> <fct> <fct>\n 1    64 1     1    \n 2    94 1     2    \n 3    58 1     3    \n 4    46 1     4    \n 5    57 2     1    \n 6    94 2     2    \n 7    54 2     3    \n 8    40 2     4    \n 9    57 3     1    \n10   105 3     2    \n# ℹ 14 more rows\n\n\n\n以上をまとめると次のようになる．本書のプログラム例ではglを使うことが多いのでここで使用方法を覚えておこう．\n\n\nFreq <- c( 64, 94, 58, 46, 57, 94, 54, 40, 57, 105, 65, 60, 72, 141, 77, 94, 36,  97, 54, 78, 21, 71, 54, 71)\nNI <- 4\nNJ <- 6\nRow <- gl(n = NI, k = NJ, length = NI * NJ)\nCol <- gl(n = NJ, k = 1, length = NI * NJ)\nd <- tibble(Freq, Row, Col)\nd\n\n# A tibble: 24 × 3\n    Freq Row   Col  \n   <dbl> <fct> <fct>\n 1    64 1     1    \n 2    94 1     2    \n 3    58 1     3    \n 4    46 1     4    \n 5    57 1     5    \n 6    94 1     6    \n 7    54 2     1    \n 8    40 2     2    \n 9    57 2     3    \n10   105 2     4    \n# ℹ 14 more rows"
  },
  {
    "objectID": "8-Note.html#glmとgnmの結果の比較",
    "href": "8-Note.html#glmとgnmの結果の比較",
    "title": "補足のノート",
    "section": "GLMとGNMの結果の比較",
    "text": "GLMとGNMの結果の比較\n\nglmとgnmでは適合度や係数は同じだが，出力されるものが異なる．\n\n\nfit_glm <- glm(Freq ~ Row + Col, data = d, family = poisson)\nfit_gnm <- gnm(Freq ~ Row + Col, data = d, family = poisson)\nfit_glm\n\n\nCall:  glm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n(Intercept)         Row2         Row3         Row4         Col2         Col3  \n    4.10604     -0.08065      0.22460     -0.16838      0.36930     -0.13588  \n       Col4         Col5         Col6  \n    0.25857     -0.14058      0.27738  \n\nDegrees of Freedom: 23 Total (i.e. Null);  15 Residual\nNull Deviance:      217.4 \nResidual Deviance: 112  AIC: 274.2\n\nfit_gnm\n\n\nCall:\ngnm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n(Intercept)         Row2         Row3         Row4         Col2         Col3  \n    4.10604     -0.08065      0.22460     -0.16838      0.36930     -0.13588  \n       Col4         Col5         Col6  \n    0.25857     -0.14058      0.27738  \n\nDeviance:            112.0398 \nPearson chi-squared: 102.2928 \nResidual df:         15 \n\n\n\nnames(fit_glm)\n\n [1] \"coefficients\"      \"residuals\"         \"fitted.values\"    \n [4] \"effects\"           \"R\"                 \"rank\"             \n [7] \"qr\"                \"family\"            \"linear.predictors\"\n[10] \"deviance\"          \"aic\"               \"null.deviance\"    \n[13] \"iter\"              \"weights\"           \"prior.weights\"    \n[16] \"df.residual\"       \"df.null\"           \"y\"                \n[19] \"converged\"         \"boundary\"          \"model\"            \n[22] \"call\"              \"formula\"           \"terms\"            \n[25] \"data\"              \"offset\"            \"control\"          \n[28] \"method\"            \"contrasts\"         \"xlevels\"          \n\nnames(fit_gnm)\n\n [1] \"call\"          \"formula\"       \"terms\"         \"data\"         \n [5] \"eliminate\"     \"ofInterest\"    \"na.action\"     \"xlevels\"      \n [9] \"offset\"        \"tolerance\"     \"iterStart\"     \"iterMax\"      \n[13] \"coefficients\"  \"residuals\"     \"fitted.values\" \"rank\"         \n[17] \"family\"        \"predictors\"    \"deviance\"      \"aic\"          \n[21] \"iter\"          \"weights\"       \"prior.weights\" \"df.residual\"  \n[25] \"y\"             \"converged\"     \"constrain\"     \"constrainTo\"  \n[29] \"x\"             \"model\"        \n\n\n\nsummary(fit_glm)\n\n\nCall:\nglm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.10604    0.07692  53.378  < 2e-16 ***\nRow2        -0.08065    0.07104  -1.135 0.256237    \nRow3         0.22460    0.06600   3.403 0.000666 ***\nRow4        -0.16838    0.07271  -2.316 0.020573 *  \nCol2         0.36930    0.08325   4.436 9.17e-06 ***\nCol3        -0.13588    0.09377  -1.449 0.147336    \nCol4         0.25857    0.08522   3.034 0.002413 ** \nCol5        -0.14058    0.09389  -1.497 0.134314    \nCol6         0.27738    0.08488   3.268 0.001083 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 217.40  on 23  degrees of freedom\nResidual deviance: 112.04  on 15  degrees of freedom\nAIC: 274.21\n\nNumber of Fisher Scoring iterations: 4\n\nsummary(fit_gnm)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col, family = poisson, data = d)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-5.0571  -0.4520   0.4274   1.1667   3.5712  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.10604    0.07692  53.378  < 2e-16 ***\nRow2        -0.08065    0.07104  -1.135 0.256237    \nRow3         0.22460    0.06600   3.403 0.000666 ***\nRow4        -0.16838    0.07271  -2.316 0.020573 *  \nCol2         0.36930    0.08325   4.436 9.17e-06 ***\nCol3        -0.13588    0.09377  -1.449 0.147336    \nCol4         0.25857    0.08522   3.034 0.002413 ** \nCol5        -0.14058    0.09389  -1.497 0.134314    \nCol6         0.27738    0.08488   3.268 0.001083 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 112.04 on 15 degrees of freedom\nAIC: 274.21\n\nNumber of iterations: 4\n\n\n\ngnmで独立モデルと飽和モデル\n\n\nfit_O <- gnm(Freq ~ Row + Col, data = d, family = poisson)\nfit_S <- gnm(Freq ~ Row + Col + Row:Col, data = d, family = poisson)\n\n\nモデルの比較はanovaで可能．\n\n\nanova(fit_O, fit_S)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ Row + Col\nModel 2: Freq ~ Row + Col + Row:Col\n  Resid. Df Resid. Dev Df Deviance\n1        15     112.04            \n2         0       0.00 15   112.04"
  },
  {
    "objectID": "8-Note.html#期待度数",
    "href": "8-Note.html#期待度数",
    "title": "補足のノート",
    "section": "期待度数",
    "text": "期待度数\n\n期待度数を保存すれば期待度数についてのクロス表を作成することができる．飽和モデルの場合は，観測度数のクロス表と一致する．また独立モデルでの期待度数をみると，行によって列の幅が異なっていない（列によって行の幅がことなっていない）ことがわかる．\n\n\nd %<>% mutate(O_Freq = fit_O$fitted.values,\n              S_Freq = fit_S$fitted.values)\nd %>% xtabs(Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)\n\n\n\nd %>% xtabs(O_Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)\n\n\n\nd %>% xtabs(S_Freq ~ Row + Col, data = .) %>% mosaic(shade = TRUE)"
  },
  {
    "objectID": "8-Note.html#モザイクプロット",
    "href": "8-Note.html#モザイクプロット",
    "title": "補足のノート",
    "section": "モザイクプロット",
    "text": "モザイクプロット\n\ngnmパッケージには，mentalHealthが用意されているのでこれを使ってみる．\n\n\nmentalHealth\n\n   count SES      MHS\n1     64   A     well\n2     94   A     mild\n3     58   A moderate\n4     46   A impaired\n5     57   B     well\n6     94   B     mild\n7     54   B moderate\n8     40   B impaired\n9     57   C     well\n10   105   C     mild\n11    65   C moderate\n12    60   C impaired\n13    72   D     well\n14   141   D     mild\n15    77   D moderate\n16    94   D impaired\n17    36   E     well\n18    97   E     mild\n19    54   E moderate\n20    78   E impaired\n21    21   F     well\n22    71   F     mild\n23    54   F moderate\n24    71   F impaired\n\n\n\nxtabsは集計データからクロス表を作成する際に用いる．xtabs(度数 ~ 行変数 + 列変数, data = データ名)とすればよい．mentalHealthではcountが度数を示している．\n\n\ntab_mentalHealth <- xtabs(count ~ SES + MHS, data = mentalHealth)\ntab_mentalHealth\n\n   MHS\nSES well mild moderate impaired\n  A   64   94       58       46\n  B   57   94       54       40\n  C   57  105       65       60\n  D   72  141       77       94\n  E   36   97       54       78\n  F   21   71       54       71\n\n\n\nmosaicでモザイクプロットを図示．影をつけたければshade = TRUEとする．\n\n\nmosaic(tab_mentalHealth,\n       shade = TRUE)\n\n\n\n\n\nモデル適合度を表示するための関数\n\n\nmodel.summary <- function(obj) {\n  aic <- obj$deviance - obj$df * 2 # AIC(L2)\n  bic <- obj$deviance - obj$df * log(sum(obj$y)) #BIC(L2)\n  delta <-\n    100 * sum(abs(obj$y - obj$fitted.values)) / (2 * sum(obj$y))\n  p <- 1 - pchisq(obj$deviance, obj$df, lower.tail = F)\n  Model <- deparse(substitute(obj))\n  result <- tibble(\n    \"Model Description\" = Model,\n    \"df\" = obj$df,\n    \"L2\" = obj$deviance,\n    #\"AIC(L2)\" = aic,\n    \"BIC\" = bic,\n    \"Delta\" = delta,\n    \"p\" = p\n  )\n  return(result)\n}\n\n\n変数と係数と係数の順番を表示するための関数\n\n\n# 変数と係数と係数の順番を表示\nvar_num <- function(model) {\n  data.frame(var = names(model$coefficients),\n             estimate = model$coefficients) %>%\n    mutate(estimate = estimate,\n           number = row_number())\n}"
  },
  {
    "objectID": "8-Note.html#正規化",
    "href": "8-Note.html#正規化",
    "title": "補足のノート",
    "section": "正規化",
    "text": "正規化\n\n通常のRCモデルでは行スコアと列スコアが正規化されていない．\nAgresti (2002)\n\n\nset.seed(1)\n##  Goodman Row-Column association model fits well (deviance 3.57, df 8)\nmentalHealth$MHS <- C(mentalHealth$MHS, treatment)\nmentalHealth$SES <- C(mentalHealth$SES, treatment)\n\n# Independent Model\nO <- gnm(count ~ SES + MHS,\n         family = poisson, data = mentalHealth)\n\n# Independent Modelの結果を利用して，初期値を設定\nmult1 <- residSVD(O, SES, MHS)\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  start = c(coef(O), 1, mult1),\n  family = poisson,\n  data = mentalHealth\n)\n\nRunning main iterations..........\nDone\n\n# Estimateには数字があるが，Std. ErrorがNAとなっている．これらのパラメータは識別されていない．\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), family = poisson, \n    data = mentalHealth, start = c(coef(O), 1, mult1))\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  3.866262         NA      NA       NA\nSESB                        -0.067328         NA      NA       NA\nSESC                         0.103101         NA      NA       NA\nSESD                         0.394428         NA      NA       NA\nSESE                         0.005618         NA      NA       NA\nSESF                        -0.227798         NA      NA       NA\nMHSmild                      0.690089         NA      NA       NA\nMHSmoderate                  0.177978         NA      NA       NA\nMHSimpaired                  0.205737         NA      NA       NA\nMult(., SES, MHS).           1.009621         NA      NA       NA\nMult(1, ., MHS).SESA        -0.380306         NA      NA       NA\nMult(1, ., MHS).SESB        -0.383670         NA      NA       NA\nMult(1, ., MHS).SESC        -0.106430         NA      NA       NA\nMult(1, ., MHS).SESD         0.040661         NA      NA       NA\nMult(1, ., MHS).SESE         0.403979         NA      NA       NA\nMult(1, ., MHS).SESF         0.702468         NA      NA       NA\nMult(1, SES, .).MHSwell     -0.738572         NA      NA       NA\nMult(1, SES, .).MHSmild     -0.052542         NA      NA       NA\nMult(1, SES, .).MHSmoderate  0.071261         NA      NA       NA\nMult(1, SES, .).MHSimpaired  0.641064         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 10\n\n# 行スコアと列スコアがどこにあるかを取り出す．\nvar_num(RC1)\n\n                                                    var     estimate number\n(Intercept)                                 (Intercept)  3.866262444      1\nSESB                                               SESB -0.067328418      2\nSESC                                               SESC  0.103101292      3\nSESD                                               SESD  0.394428208      4\nSESE                                               SESE  0.005617771      5\nSESF                                               SESF -0.227798223      6\nMHSmild                                         MHSmild  0.690089175      7\nMHSmoderate                                 MHSmoderate  0.177978240      8\nMHSimpaired                                 MHSimpaired  0.205737053      9\nMult(., SES, MHS).                   Mult(., SES, MHS).  1.009620967     10\nMult(1, ., MHS).SESA               Mult(1, ., MHS).SESA -0.380305582     11\nMult(1, ., MHS).SESB               Mult(1, ., MHS).SESB -0.383670111     12\nMult(1, ., MHS).SESC               Mult(1, ., MHS).SESC -0.106429617     13\nMult(1, ., MHS).SESD               Mult(1, ., MHS).SESD  0.040660843     14\nMult(1, ., MHS).SESE               Mult(1, ., MHS).SESE  0.403978606     15\nMult(1, ., MHS).SESF               Mult(1, ., MHS).SESF  0.702467902     16\nMult(1, SES, .).MHSwell         Mult(1, SES, .).MHSwell -0.738571526     17\nMult(1, SES, .).MHSmild         Mult(1, SES, .).MHSmild -0.052541552     18\nMult(1, SES, .).MHSmoderate Mult(1, SES, .).MHSmoderate  0.071261032     19\nMult(1, SES, .).MHSimpaired Mult(1, SES, .).MHSimpaired  0.641064227     20\n\n# c(11:16,17:20)\n\n# getContrastsによって正規化された推定値とその標準誤差を示す．まずは重み付けのない／単位標準化された解を求める．\nmu_unit <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]SES\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\nnu_unit <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]MHS\"),\n  ref = \"mean\",\n  scaleRef = \"mean\",\n  scaleWeights = \"unit\"\n)\n# 正規化された解を表示\nmu_unit\n\n                         Estimate Std. Error\nMult(1, ., MHS).SESA -0.437796567 0.11273428\nMult(1, ., MHS).SESB -0.441250838 0.11417655\nMult(1, ., MHS).SESC -0.156615503 0.12240952\nMult(1, ., MHS).SESD -0.005601696 0.11265736\nMult(1, ., MHS).SESE  0.367406849 0.12407059\nMult(1, ., MHS).SESF  0.673857756 0.09323652\n\nnu_unit\n\n                               Estimate Std. Error\nMult(1, SES, .).MHSwell     -0.73265419 0.06465624\nMult(1, SES, .).MHSmild     -0.03347417 0.10831243\nMult(1, SES, .).MHSmoderate  0.09270150 0.12250922\nMult(1, SES, .).MHSimpaired  0.67342687 0.07862278\n\n# 正規化制約を確認\nall.equal(sum(mu_unit$qvframe[, 1]), 0)\n\n[1] TRUE\n\nall.equal(sum(nu_unit$qvframe[, 1]), 0)\n\n[1] TRUE\n\nall.equal(sum(mu_unit$qvframe[, 1] ^ 2), 1)\n\n[1] TRUE\n\nall.equal(sum(nu_unit$qvframe[, 1] ^ 2), 1)\n\n[1] TRUE\n\n# 値の制約\ncon <- c(mu_unit$qvframe[, 1][c(1, 6)], nu_unit$qvframe[, 1][c(1, 4)])\ncon\n\n[1] -0.4377966  0.6738578 -0.7326542  0.6734269\n\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  constrain = c(11, 16, 17, 20),\n  constrainTo = con,\n  start = c(coef(O), NA, mult1),\n  family = poisson,\n  data = mentalHealth\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........\nDone\n\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), constrain = c(11, \n    16, 17, 20), constrainTo = con, family = poisson, data = mentalHealth, \n    start = c(coef(O), NA, mult1))\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  3.840354   0.100134  38.352  < 2e-16 ***\nSESB                        -0.067262   0.089460  -0.752   0.4521    \nSESC                         0.097655   0.088726   1.101   0.2711    \nSESD                         0.386057   0.087802   4.397 1.10e-05 ***\nSESE                        -0.009979   0.110426  -0.090   0.9280    \nSESF                        -0.249331   0.133563  -1.867   0.0619 .  \nMHSmild                      0.722031   0.096153   7.509 5.95e-14 ***\nMHSmoderate                  0.215685   0.108885   1.981   0.0476 *  \nMHSimpaired                  0.269974   0.148273   1.821   0.0686 .  \nMult(., SES, MHS).           0.964895   0.191615   5.036 4.76e-07 ***\nMult(1, ., MHS).SESA        -0.437797         NA      NA       NA    \nMult(1, ., MHS).SESB        -0.441251   0.201840  -2.186   0.0288 *  \nMult(1, ., MHS).SESC        -0.156615   0.176666  -0.887   0.3753    \nMult(1, ., MHS).SESD        -0.005602   0.160260  -0.035   0.9721    \nMult(1, ., MHS).SESE         0.367407   0.191566   1.918   0.0551 .  \nMult(1, ., MHS).SESF         0.673858         NA      NA       NA    \nMult(1, SES, .).MHSwell     -0.732654         NA      NA       NA    \nMult(1, SES, .).MHSmild     -0.033474   0.159023  -0.210   0.8333    \nMult(1, SES, .).MHSmoderate  0.092701   0.180220   0.514   0.6070    \nMult(1, SES, .).MHSimpaired  0.673427         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 9\n\n# intrinsic association parameter\nphi <- summary(RC1)$coefficients[\"Mult(., SES, MHS).\", 1]\nrho <- (-1 + sqrt(1 + 4 * phi ^ 2)) / (2 * phi)\neta <- (2 * phi) ^ (-1)\ntau <- (1 + eta ^ 2) ^ (1 / 2) - eta\nlist(phi, rho, eta, tau)\n\n[[1]]\n[1] 0.9648954\n\n[[2]]\n[1] 0.6080959\n\n[[3]]\n[1] 0.5181909\n\n[[4]]\n[1] 0.6080959\n\nall.equal(rho, tau)\n\n[1] TRUE\n\n## Marginal weighted solution\nrowProbs <- with(mentalHealth, tapply(count, SES, sum) / sum(count))\ncolProbs <- with(mentalHealth, tapply(count, MHS, sum) / sum(count))\nmu <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]SES\"),\n  ref = rowProbs,\n  scaleRef = rowProbs,\n  scaleWeights = rowProbs\n)\nnu <- getContrasts(\n  model = RC1,\n  set = pickCoef(RC1, \"[.]MHS\"),\n  ref = colProbs,\n  scaleRef = colProbs,\n  scaleWeights = colProbs\n)\ncon <- c(mu$qvframe[, 1][c(1, 6)], nu$qvframe[, 1][c(1, 4)])\nmu\n\n                        Estimate Std. Error\nMult(1, ., MHS).SESA -1.11233093  0.2990944\nMult(1, ., MHS).SESB -1.12143720  0.3138906\nMult(1, ., MHS).SESC -0.37107614  0.3194546\nMult(1, ., MHS).SESD  0.02702955  0.2734878\nMult(1, ., MHS).SESE  1.01036159  0.3149487\nMult(1, ., MHS).SESF  1.81823273  0.2824637\n\nnu\n\n                              Estimate Std. Error\nMult(1, SES, .).MHSwell     -1.6775143  0.1941179\nMult(1, SES, .).MHSmild     -0.1403989  0.2002803\nMult(1, SES, .).MHSmoderate  0.1369924  0.2799954\nMult(1, SES, .).MHSimpaired  1.4136910  0.1724133\n\ncon\n\n[1] -1.112331  1.818233 -1.677514  1.413691\n\n# 正規化制約を確認\nall.equal(sum(mu$qvframe[, 1] * rowProbs), 0)\n\n[1] TRUE\n\nall.equal(sum(nu$qvframe[, 1] * colProbs), 0)\n\n[1] TRUE\n\nall.equal(sum(mu$qvframe[, 1] ^ 2 * rowProbs), 1)\n\n[1] TRUE\n\nall.equal(sum(nu$qvframe[, 1] ^ 2 * colProbs), 1)\n\n[1] TRUE\n\nRC1 <- gnm(\n  count ~ SES + MHS + Mult(1, SES, MHS),\n  constrain = c(11, 16, 17, 20),\n  constrainTo = con,\n  start = c(coef(O), NA, mult1),\n  family = poisson,\n  data = mentalHealth,\n  tolerance = 1e-12\n)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations................................\nDone\n\nsummary(RC1)\n\n\nCall:\ngnm(formula = count ~ SES + MHS + Mult(1, SES, MHS), constrain = c(11, \n    16, 17, 20), constrainTo = con, family = poisson, data = mentalHealth, \n    start = c(coef(O), NA, mult1), tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.87231  -0.30982   0.01026   0.29898   0.87866  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  3.83919    0.10014  38.338  < 2e-16 ***\nSESB                        -0.06736    0.09033  -0.746   0.4558    \nSESC                         0.10590    0.08929   1.186   0.2356    \nSESD                         0.39873    0.08826   4.517 6.26e-06 ***\nSESE                         0.01363    0.11020   0.124   0.9016    \nSESF                        -0.21674    0.13232  -1.638   0.1014    \nMHSmild                      0.71134    0.09556   7.444 9.77e-14 ***\nMHSmoderate                  0.20306    0.10841   1.873   0.0611 .  \nMHSimpaired                  0.24846    0.14842   1.674   0.0941 .  \nMult(., SES, MHS).           0.16649    0.03306   5.036 4.76e-07 ***\nMult(1, ., MHS).SESA        -1.11233         NA      NA       NA    \nMult(1, ., MHS).SESB        -1.12144    0.53209  -2.108   0.0351 *  \nMult(1, ., MHS).SESC        -0.37108    0.46573  -0.797   0.4256    \nMult(1, ., MHS).SESD         0.02703    0.42248   0.064   0.9490    \nMult(1, ., MHS).SESE         1.01036    0.50501   2.001   0.0454 *  \nMult(1, ., MHS).SESF         1.81823         NA      NA       NA    \nMult(1, SES, .).MHSwell     -1.67751         NA      NA       NA    \nMult(1, SES, .).MHSmild     -0.14040    0.34961  -0.402   0.6880    \nMult(1, SES, .).MHSmoderate  0.13699    0.39621   0.346   0.7295    \nMult(1, SES, .).MHSimpaired  1.41369         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 3.5706 on 8 degrees of freedom\nAIC: 179.74\n\nNumber of iterations: 32"
  },
  {
    "objectID": "8-Note.html#初期値",
    "href": "8-Note.html#初期値",
    "title": "補足のノート",
    "section": "初期値",
    "text": "初期値\n\n# データの準備\nFreq <- c( 39, 50, 18,  4,\n          140,178, 85, 23,\n          108,195, 97, 23,\n          238,598,363,111,\n           78,250,150, 55,\n           50,200,208, 74,\n            8, 29, 46, 21)\n\n\ntab_2.3A <-\n  matrix(Freq,\n         nrow = 7,\n         ncol = 4,\n         byrow = TRUE) %>% as.table()\n\npolviews <- gl(n = 7, k = 4)\nfefam <- gl(n = 4, k = 1, length = 28)\nfreq_tab_2.3A <- tibble(Freq, polviews, fefam)\nfreq_tab_2.3A\n\n# A tibble: 28 × 3\n    Freq polviews fefam\n   <dbl> <fct>    <fct>\n 1    39 1        1    \n 2    50 1        2    \n 3    18 1        3    \n 4     4 1        4    \n 5   140 2        1    \n 6   178 2        2    \n 7    85 2        3    \n 8    23 2        4    \n 9   108 3        1    \n10   195 3        2    \n# ℹ 18 more rows\n\n# 独立モデル\nO <- gnm(\n  Freq ~ polviews + fefam,\n  family = poisson,\n  data = freq_tab_2.3A,\n  tolerance = 1e-12\n)\n\nvar_num(O)\n\n                    var   estimate number\n(Intercept) (Intercept)  3.0603480      1\npolviews2     polviews2  1.3449091      2\npolviews3     polviews3  1.3378420      3\npolviews4     polviews4  2.4682522      4\npolviews5     polviews5  1.5689912      5\npolviews6     polviews6  1.5671133      6\npolviews7     polviews7 -0.0651393      7\nfefam2           fefam2  0.8194665      8\nfefam3           fefam3  0.3804447      9\nfefam4           fefam4 -0.7539609     10\n\nRC <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam +\n      Mult(1, polviews, fefam),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............................\nDone\n\nvar_num(RC)\n\n                                                    var     estimate number\n(Intercept)                                 (Intercept)  2.902702351      1\npolviews2                                     polviews2  1.390548385      2\npolviews3                                     polviews3  1.427149259      3\npolviews4                                     polviews4  2.586614669      4\npolviews5                                     polviews5  1.686005670      5\npolviews6                                     polviews6  1.625948840      6\npolviews7                                     polviews7 -0.114101970      7\nfefam2                                           fefam2  0.889280567      8\nfefam3                                           fefam3  0.414411068      9\nfefam4                                           fefam4 -0.767263370     10\nMult(., polviews, fefam).     Mult(., polviews, fefam).  0.354847803     11\nMult(1, ., fefam).polviews1 Mult(1, ., fefam).polviews1 -4.642973707     12\nMult(1, ., fefam).polviews2 Mult(1, ., fefam).polviews2 -3.587221083     13\nMult(1, ., fefam).polviews3 Mult(1, ., fefam).polviews3 -2.177313145     14\nMult(1, ., fefam).polviews4 Mult(1, ., fefam).polviews4 -0.001967735     15\nMult(1, ., fefam).polviews5 Mult(1, ., fefam).polviews5  0.933577004     16\nMult(1, ., fefam).polviews6 Mult(1, ., fefam).polviews6  3.992993578     17\nMult(1, ., fefam).polviews7 Mult(1, ., fefam).polviews7  6.608154586     18\nMult(1, polviews, .).fefam1 Mult(1, polviews, .).fefam1 -0.468986131     19\nMult(1, polviews, .).fefam2 Mult(1, polviews, .).fefam2 -0.061831609     20\nMult(1, polviews, .).fefam3 Mult(1, polviews, .).fefam3  0.255547101     21\nMult(1, polviews, .).fefam4 Mult(1, polviews, .).fefam4  0.406103105     22\n\nmult1 <- residSVD(O, polviews, fefam)\nmult2 <- residSVD(O, polviews, fefam, d = 2)\nmult3 <- residSVD(O, polviews, fefam, d = 3)\n\nRC <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam + Mult(1, polviews, fefam),\n    start = c(coef(O), NA, mult1),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................\nDone\n\nsummary(RC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    family = poisson, data = ., start = c(coef(O), NA, mult1), \n    tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                              Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  2.9230044         NA      NA       NA\npolviews2                    1.3860689         NA      NA       NA\npolviews3                    1.4166876         NA      NA       NA\npolviews4                    2.5669231         NA      NA       NA\npolviews5                    1.6623446         NA      NA       NA\npolviews6                    1.5893068         NA      NA       NA\npolviews7                   -0.1618400         NA      NA       NA\nfefam2                       0.8887442         NA      NA       NA\nfefam3                       0.4134566         NA      NA       NA\nfefam4                      -0.7684162         NA      NA       NA\nMult(., polviews, fefam).    1.0565632         NA      NA       NA\nMult(1, ., fefam).polviews1 -0.6984576         NA      NA       NA\nMult(1, ., fefam).polviews2 -0.5395102         NA      NA       NA\nMult(1, ., fefam).polviews3 -0.3272434         NA      NA       NA\nMult(1, ., fefam).polviews4  0.0002627         NA      NA       NA\nMult(1, ., fefam).polviews5  0.1411123         NA      NA       NA\nMult(1, ., fefam).polviews6  0.6017186         NA      NA       NA\nMult(1, ., fefam).polviews7  0.9954405         NA      NA       NA\nMult(1, polviews, .).fefam1 -1.0195282         NA      NA       NA\nMult(1, polviews, .).fefam2 -0.1112587         NA      NA       NA\nMult(1, polviews, .).fefam3  0.5967413         NA      NA       NA\nMult(1, polviews, .).fefam4  0.9325976         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 30\n\nRC2 <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam +\n      Mult(1, polviews, fefam, inst = 1) +\n      Mult(1, polviews, fefam, inst = 2),\n    start = c(coef(O), NA, mult2[, 1], NA, mult2[, 2]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.........\nDone\n\nsummary(RC2)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam, \n    inst = 1) + Mult(1, polviews, fefam, inst = 2), family = poisson, \n    data = ., start = c(coef(O), NA, mult2[, 1], NA, mult2[, \n        2]), tolerance = 1e-12)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-0.500439  -0.068726  -0.002705   0.066147   0.535693  \n\nCoefficients:\n                                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)                            2.91818         NA      NA       NA\npolviews2                              1.39397         NA      NA       NA\npolviews3                              1.41864         NA      NA       NA\npolviews4                              2.56797         NA      NA       NA\npolviews5                              1.65784         NA      NA       NA\npolviews6                              1.59467         NA      NA       NA\npolviews7                             -0.14115         NA      NA       NA\nfefam2                                 0.88413         NA      NA       NA\nfefam3                                 0.42556         NA      NA       NA\nfefam4                                -0.75373         NA      NA       NA\nMult(., polviews, fefam, inst = 1).    1.00493         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews1 -0.75964         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews2 -0.52028         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews3 -0.35691         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews4 -0.01452         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews5  0.12908         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews6  0.60927         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews7  0.95886         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam1 -0.91476         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam2 -0.19195         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam3  0.63323         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam4  0.96988         NA      NA       NA\nMult(., polviews, fefam, inst = 2).    0.63836         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews1  0.14115         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews2  0.43421         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews3  0.06788         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews4 -0.07766         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews5 -0.33262         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews6 -0.06627         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews7  0.39888         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam1  0.53563         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam2 -0.41196         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam3  0.20278         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam4  0.06538         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.3691 on 4 degrees of freedom\nAIC: 220.72\n\nNumber of iterations: 66\n\nRC3 <- freq_tab_2.3A %>%\n  gnm(\n    Freq ~ polviews + fefam + Mult(1, polviews, fefam, inst = 1) +\n      Mult(1, polviews, fefam, inst = 2) +\n      Mult(1, polviews, fefam, inst = 3),\n    start = c(coef(O), NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....\nDone\n\nsummary(RC3)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam, \n    inst = 1) + Mult(1, polviews, fefam, inst = 2) + Mult(1, \n    polviews, fefam, inst = 3), family = poisson, data = ., start = c(coef(O), \n    NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]), tolerance = 1e-12)\n\nDeviance Residuals: \n   Min      1Q  Median      3Q     Max  \n     0       0       0       0       0  \n\nCoefficients:\n                                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)                            2.91911         NA      NA       NA\npolviews2                              1.39510         NA      NA       NA\npolviews3                              1.41762         NA      NA       NA\npolviews4                              2.56789         NA      NA       NA\npolviews5                              1.65780         NA      NA       NA\npolviews6                              1.59247         NA      NA       NA\npolviews7                             -0.13766         NA      NA       NA\nfefam2                                 0.88275         NA      NA       NA\nfefam3                                 0.42469         NA      NA       NA\nfefam4                                -0.75453         NA      NA       NA\nMult(., polviews, fefam, inst = 1).    1.00012         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews1 -0.77447         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews2 -0.50580         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews3 -0.39714         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews4 -0.01256         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews5  0.16821         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews6  0.59267         NA      NA       NA\nMult(1, ., fefam, inst = 1).polviews7  0.93686         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam1 -0.91235         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam2 -0.18084         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam3  0.60069         NA      NA       NA\nMult(1, polviews, ., inst = 1).fefam4  1.02514         NA      NA       NA\nMult(., polviews, fefam, inst = 2).    0.61713         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews1  0.11253         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews2  0.48025         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews3 -0.03267         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews4 -0.07847         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews5 -0.22089         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews6 -0.15511         NA      NA       NA\nMult(1, ., fefam, inst = 2).polviews7  0.45886         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam1  0.55593         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam2 -0.37731         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam3  0.06148         NA      NA       NA\nMult(1, polviews, ., inst = 2).fefam4  0.29589         NA      NA       NA\nMult(., polviews, fefam, inst = 3).    0.93372         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews1  0.02726         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews2 -0.03814         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews3  0.19104         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews4 -0.02432         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews5 -0.30078         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews6  0.18379         NA      NA       NA\nMult(1, ., fefam, inst = 3).polviews7  0.15199         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam1 -0.03233         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam2 -0.14527         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam3  0.29780         NA      NA       NA\nMult(1, polviews, ., inst = 3).fefam4 -0.18814         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.1102e-15 on 0 degrees of freedom\nAIC: 227.35\n\nNumber of iterations: 5\n\nlibrary(logmult)\n\n\nAttaching package: 'logmult'\n\n\nThe following object is masked from 'package:vcd':\n\n    assoc\n\n\nThe following object is masked from 'package:gnm':\n\n    se\n\nanoas_model <- anoas(tab_2.3A, nd = 3)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...............................\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nanoas_model\n\n       Res. Df           Res. Dev    Dev./Indep. (%)     Dissim. (%)\nIndep.      18 211.69508974175693 100.00000000000000 8.0917102896466\nRC(1)       10   8.07181892814987   3.81294575041705 1.7673079267546\nRC(2)        4   1.36909098846090   0.64672779615769 0.4963921430961\nRC(3)        0   0.00000000000009   0.00000000000004 0.0000000000002\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617279 -11.92818107185013 -204 -8\nRC(2)  -31.20265305326816  -6.63090901153910   -7 -6\nRC(3)    0.00000000000009   0.00000000000009   -1 -4\n\nsummary(anoas_model)\n\n       Res. Df           Res. Dev    Dev./Indep. (%)     Dissim. (%)\nIndep.      18 211.69508974175693 100.00000000000000 8.0917102896466\nRC(1)       10   8.07181892814987   3.81294575041705 1.7673079267546\nRC(2)        4   1.36909098846090   0.64672779615769 0.4963921430961\nRC(3)        0   0.00000000000009   0.00000000000004 0.0000000000002\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617279 -11.92818107185013 -204 -8\nRC(2)  -31.20265305326816  -6.63090901153910   -7 -6\nRC(3)    0.00000000000009   0.00000000000009   -1 -4\n\nrc(tab_2.3A, d = 3)\n\nLevels are not identical, new factor will be based on sorted combined levels.\n\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\n\n\nWarning in matrix(pickCoef(model, \"Diag\\\\(\", value = TRUE), 1, nrow(tab)): data\nlength [4] is not a sub-multiple or multiple of the number of columns [7]\n\n\nWarning in rownames(tab) == colnames(tab): longer object length is not a\nmultiple of shorter object length\n\n\nCall:\nrc(tab = tab_2.3A, diagonal = 3)\n\nIntrinsic association coefficients:\n Dim1 \n0.259 \n\nNormalized row scores (Rows):\n      A       B       C       D       E       F       G \n 1.4876  1.3963  1.1207 -0.0203 -0.3155 -1.4779 -2.4334 \n\nNormalized column scores (Columns):\n     A      B      C      D \n 1.475  0.354 -1.077 -1.492 \n\nDiagonal coefficients:\n    A:A     B:B     C:C     D:D     E:A     F:B     G:C \n 0.2586 -0.2981  0.2310 -0.0498  0.2586 -0.2981  0.2310 \n\nNormalization weights: marginal\nDeviance:              3.191348\nPearson chi-squared:   3.221668\nDissimilarity index:   0.9476085%\nResidual df:           6\nBIC:                   -45.66627\nAIC:                   -8.808652\n\nbind_rows(model.summary(O),\n          model.summary(RC),\n          model.summary(RC2),\n          model.summary(RC3))\n\n# A tibble: 4 × 6\n  `Model Description`    df       L2       BIC    Delta     p\n  <chr>               <int>    <dbl>     <dbl>    <dbl> <dbl>\n1 O                      18 2.12e+ 2  6.51e+ 1 8.09e+ 0 1    \n2 RC                     10 8.07e+ 0 -7.34e+ 1 1.77e+ 0 0.378\n3 RC2                     4 1.37e+ 0 -3.12e+ 1 4.96e- 1 0.150\n4 RC3                     0 1.11e-15  1.11e-15 4.41e-14 1    \n\n\n\n## 表2.3B\nFreq <- c(518,  95, 6, 35, 5,\n         　 81,  67, 4, 49, 2,\n          452,1003,67,630, 5,\n           71, 157,37,562,12)\n\n\n# データを表形式に変換\ntab_2.3B <-\n  matrix(Freq,\n         nrow = 4,\n         ncol = 5,\n         byrow = TRUE) %>% as.table()\n\ntab_2.3B\n\n     A    B    C    D    E\nA  518   95    6   35    5\nB   81   67    4   49    2\nC  452 1003   67  630    5\nD   71  157   37  562   12\n\n# 度数，行変数，列変数からなる集計データを作成\nEduc <- gl(n = 4, k = 5)\nOcc <- gl(n = 5, k = 1, length = 20)\nfreq_tab_2.3B <- tibble(Freq, Educ, Occ)\nfreq_tab_2.3B\n\n# A tibble: 20 × 3\n    Freq Educ  Occ  \n   <dbl> <fct> <fct>\n 1   518 1     1    \n 2    95 1     2    \n 3     6 1     3    \n 4    35 1     4    \n 5     5 1     5    \n 6    81 2     1    \n 7    67 2     2    \n 8     4 2     3    \n 9    49 2     4    \n10     2 2     5    \n11   452 3     1    \n12  1003 3     2    \n13    67 3     3    \n14   630 3     4    \n15     5 3     5    \n16    71 4     1    \n17   157 4     2    \n18    37 4     3    \n19   562 4     4    \n20    12 4     5    \n\nO <- gnm(Freq ~ Educ + Occ,\n         family = poisson,\n         data = freq_tab_2.3B,\n         tolerance = 1e-12)\n\nmult1 <- residSVD(O, Educ, Occ)\nmult2 <- residSVD(O, Educ, Occ, d = 2)\nmult3 <- residSVD(O, Educ, Occ, d = 3)\n\nRC <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + Mult(1, Educ, Occ),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n................................\nDone\n\nvar_num(RC)\n\n                                        var    estimate number\n(Intercept)                     (Intercept)  4.84228734      1\nEduc2                                 Educ2 -0.83267338      2\nEduc3                                 Educ3  1.44242350      3\nEduc4                                 Educ4 -0.18953286      4\nOcc2                                   Occ2  0.47811221      5\nOcc3                                   Occ3 -2.08212145      6\nOcc4                                   Occ4  0.15944538      7\nOcc5                                   Occ5 -3.57932338      8\nMult(., Educ, Occ).     Mult(., Educ, Occ). -8.94312189      9\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1 -0.93109262     10\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2 -0.20019786     11\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3  0.03703327     12\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4  0.65249407     13\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1  0.16481820     14\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -0.04958694     15\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3 -0.16515958     16\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4 -0.25122571     17\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5 -0.11995114     18\n\nRC <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + Mult(1, Educ, Occ),\n    start = c(coef(O), 10, mult1),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nRunning main iterations.........................................................\n.......................\nDone\n\nRC2 <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), 2),\n    #      start = c(coef(O), NA, mult2[,1], NA, mult2[,2]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations....................\nDone\n\nRC2\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), \n    2), family = poisson, data = ., tolerance = 1e-12)\n\nCoefficients:\n                    (Intercept)                            Educ2  \n                        5.08611                         -0.94740  \n                          Educ3                            Educ4  \n                        1.02546                          0.15018  \n                           Occ2                             Occ3  \n                        0.41826                         -2.08862  \n                           Occ4                             Occ5  \n                        0.19014                         -3.99813  \n  Mult(., Educ, Occ, inst = 1).  Mult(1, ., Occ, inst = 1).Educ1  \n                       11.88745                          0.66539  \nMult(1, ., Occ, inst = 1).Educ2  Mult(1, ., Occ, inst = 1).Educ3  \n                        0.18460                         -0.08627  \nMult(1, ., Occ, inst = 1).Educ4  Mult(1, Educ, ., inst = 1).Occ1  \n                       -0.24059                          0.16592  \nMult(1, Educ, ., inst = 1).Occ2  Mult(1, Educ, ., inst = 1).Occ3  \n                       -0.08774                         -0.16440  \nMult(1, Educ, ., inst = 1).Occ4  Mult(1, Educ, ., inst = 1).Occ5  \n                       -0.22670                          0.02076  \n  Mult(., Educ, Occ, inst = 2).  Mult(1, ., Occ, inst = 2).Educ1  \n                       -0.15456                         -5.97628  \nMult(1, ., Occ, inst = 2).Educ2  Mult(1, ., Occ, inst = 2).Educ3  \n                       -4.15107                          6.90477  \nMult(1, ., Occ, inst = 2).Educ4  Mult(1, Educ, ., inst = 2).Occ1  \n                      -20.09459                         -0.16109  \nMult(1, Educ, ., inst = 2).Occ2  Mult(1, Educ, ., inst = 2).Occ3  \n                       -0.27298                         -0.00488  \nMult(1, Educ, ., inst = 2).Occ4  Mult(1, Educ, ., inst = 2).Occ5  \n                        0.08269                          0.42296  \n\nDeviance:            0.6001022 \nPearson chi-squared: 0.5746549 \nResidual df:         2 \n\nRC3 <- freq_tab_2.3B %>%\n  gnm(\n    Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), 3),\n    start = c(coef(O), NA, mult3[, 1], NA, mult3[, 2], NA, mult3[, 3]),\n    family = poisson,\n    data = .,\n    tolerance = 1e-12\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......\nDone\n\nRC3\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(1, Educ, Occ), \n    3), family = poisson, data = ., start = c(coef(O), NA, mult3[, \n    1], NA, mult3[, 2], NA, mult3[, 3]), tolerance = 1e-12)\n\nCoefficients:\n                    (Intercept)                            Educ2  \n                        4.72385                         -0.74353  \n                          Educ3                            Educ4  \n                        1.59795                          0.41892  \n                           Occ2                             Occ3  \n                        0.25233                         -2.15106  \n                           Occ4                             Occ5  \n                        0.11579                         -3.83099  \n  Mult(., Educ, Occ, inst = 1).  Mult(1, ., Occ, inst = 1).Educ1  \n                        0.92522                          1.33787  \nMult(1, ., Occ, inst = 1).Educ2  Mult(1, ., Occ, inst = 1).Educ3  \n                        0.30336                         -0.07232  \nMult(1, ., Occ, inst = 1).Educ4  Mult(1, Educ, ., inst = 1).Occ1  \n                       -0.99358                          1.16529  \nMult(1, Educ, ., inst = 1).Occ2  Mult(1, Educ, ., inst = 1).Occ3  \n                       -0.17639                         -0.63075  \nMult(1, Educ, ., inst = 1).Occ4  Mult(1, Educ, ., inst = 1).Occ5  \n                       -1.07146                          0.12669  \n  Mult(., Educ, Occ, inst = 2).  Mult(1, ., Occ, inst = 2).Educ1  \n                        0.79669                          0.40226  \nMult(1, ., Occ, inst = 2).Educ2  Mult(1, ., Occ, inst = 2).Educ3  \n                        0.49568                         -0.62304  \nMult(1, ., Occ, inst = 2).Educ4  Mult(1, Educ, ., inst = 2).Occ1  \n                        0.90711                          0.26018  \nMult(1, Educ, ., inst = 2).Occ2  Mult(1, Educ, ., inst = 2).Occ3  \n                       -0.62000                         -0.01683  \nMult(1, Educ, ., inst = 2).Occ4  Mult(1, Educ, ., inst = 2).Occ5  \n                        0.13370                          1.73569  \n  Mult(., Educ, Occ, inst = 3).  Mult(1, ., Occ, inst = 3).Educ1  \n                        0.37121                         -0.01965  \nMult(1, ., Occ, inst = 3).Educ2  Mult(1, ., Occ, inst = 3).Educ3  \n                        0.99469                          0.06372  \nMult(1, ., Occ, inst = 3).Educ4  Mult(1, Educ, ., inst = 3).Occ1  \n                       -0.19768                         -0.04247  \nMult(1, Educ, ., inst = 3).Occ2  Mult(1, Educ, ., inst = 3).Occ3  \n                        0.72146                         -0.70219  \nMult(1, Educ, ., inst = 3).Occ4  Mult(1, Educ, ., inst = 3).Occ5  \n                        0.11819                         -0.47984  \n\nDeviance:            -8.504308e-14 \nPearson chi-squared: 1.609123e-27 \nResidual df:         0 \n\nbind_rows(model.summary(O),\n          model.summary(RC),\n          model.summary(RC2),\n          model.summary(RC3))\n\n# A tibble: 4 × 6\n  `Model Description`    df        L2       BIC    Delta     p\n  <chr>               <int>     <dbl>     <dbl>    <dbl> <dbl>\n1 O                      12  1.37e+ 3  1.27e+ 3 2.39e+ 1 1    \n2 RC                      6  1.25e+ 2  7.55e+ 1 6.44e+ 0 1    \n3 RC2                     2  6.00e- 1 -1.59e+ 1 9.35e- 2 0.259\n4 RC3                     0 -8.50e-14 -8.50e-14 2.49e-14 0    \n\nanoas_model <- anoas(tab_2.3B, nd = 3)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations..........\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\nanoas_model\n\n       Res. Df            Res. Dev     Dev./Indep. (%)   Dissim. (%)\nIndep.      12 1373.17576565224545 100.000000000000000 23.8615752953\nRC(1)        6  125.05974855014668   9.107337289101114  6.4360390984\nRC(2)        2    0.60010223526821   0.043701778772885  0.0935165803\nRC(3)        0   -0.00000000000007  -0.000000000000005  0.0000000003\n                       BIC                 AIC    Dev. Df\nIndep. 1274.08091533065726 1349.17576565224545      NA NA\nRC(1)    75.51232338935264  113.05974855014668 -1248.1 -6\nRC(2)   -15.91570615166313   -3.39989776473179  -124.5 -4\nRC(3)    -0.00000000000007   -0.00000000000007    -0.6 -2"
  },
  {
    "objectID": "8-Note.html#位相モデル",
    "href": "8-Note.html#位相モデル",
    "title": "補足のノート",
    "section": "位相モデル",
    "text": "位相モデル\n\noccupationalStatus\n\n      destination\norigin   1   2   3   4   5   6   7   8\n     1  50  19  26   8   7  11   6   2\n     2  16  40  34  18  11  20   8   3\n     3  12  35  65  66  35  88  23  21\n     4  11  20  58 110  40 183  64  32\n     5   2   8  12  23  25  46  28  12\n     6  12  28 102 162  90 554 230 177\n     7   0   6  19  40  21 158 143  71\n     8   0   3  14  32  15 126  91 106\n\nfreq_occupationalStatus <- data.frame(occupationalStatus)\nfreq_occupationalStatus %<>%\n  mutate(\n    diag = ifelse(origin == destination, origin, 0) %>% factor(),\n    Rscore = scale(as.numeric(origin), scale = FALSE),\n    Cscore = scale(as.numeric(destination), scale = FALSE)\n  )\n\nfit_O <-\n  gnm(Freq ~ origin + destination, family = poisson, data = freq_occupationalStatus)\nfit_QI <-\n  gnm(Freq ~ origin + destination + diag,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_U <-\n  gnm(Freq ~ origin + destination + Rscore:Cscore,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_QI_U <-\n  gnm(Freq ~ origin + destination + diag + Rscore:Cscore,\n      family = poisson,\n      data = freq_occupationalStatus)\nfit_S <-\n  gnm(Freq ~ origin + destination + origin:destination,\n      family = poisson,\n      data = freq_occupationalStatus)\n\nfreq_occupationalStatus %<>%\n  mutate(\n    diag1 = ifelse(origin == 1 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag2 = ifelse(origin == 2 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag3 = ifelse(origin == 3 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag4 = ifelse(origin == 4 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag5 = ifelse(origin == 5 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag6 = ifelse(origin == 6 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag7 = ifelse(origin == 7 &\n                     origin == destination, 1, 0) %>% factor(),\n    diag8 = ifelse(origin == 8 &\n                     origin == destination, 1, 0) %>% factor()\n  )\n\nfit_QI2 <-\n  gnm(\n    Freq ~ origin + destination + diag1 + diag2 + diag3 + diag4 + diag5 + diag6 + diag7 + diag8,\n    family = poisson,\n    data = freq_occupationalStatus\n  )\n\nsummary(fit_QI)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + diag, family = poisson, \n    data = freq_occupationalStatus)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-4.567e+00  -2.318e+00  -1.045e-07   1.018e+00   6.152e+00  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.36346    0.17892   2.031 0.042211 *  \norigin2       0.35445    0.14755   2.402 0.016292 *  \norigin3       1.34923    0.12758  10.575  < 2e-16 ***\norigin4       1.76957    0.12322  14.362  < 2e-16 ***\norigin5       0.56615    0.14257   3.971 7.16e-05 ***\norigin6       2.72612    0.11933  22.845  < 2e-16 ***\norigin7       1.54999    0.12619  12.283  < 2e-16 ***\norigin8       1.37488    0.12757  10.777  < 2e-16 ***\ndestination2  0.82044    0.16521   4.966 6.83e-07 ***\ndestination3  1.69007    0.15065  11.219  < 2e-16 ***\ndestination4  2.02648    0.14771  13.719  < 2e-16 ***\ndestination5  1.43966    0.15317   9.399  < 2e-16 ***\ndestination6  2.96856    0.14439  20.559  < 2e-16 ***\ndestination7  2.24512    0.14547  15.434  < 2e-16 ***\ndestination8  1.87534    0.14855  12.624  < 2e-16 ***\ndiag1         3.54857    0.22806  15.560  < 2e-16 ***\ndiag2         2.15053    0.20737  10.370  < 2e-16 ***\ndiag3         0.77163    0.15275   5.052 4.38e-07 ***\ndiag4         0.54098    0.12287   4.403 1.07e-05 ***\ndiag5         0.84961    0.22965   3.700 0.000216 ***\ndiag6         0.25903    0.07531   3.439 0.000583 ***\ndiag7         0.80428    0.11438   7.031 2.04e-12 ***\ndiag8         1.04976    0.12946   8.109  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 446.84 on 41 degrees of freedom\nAIC: 815.18\n\nNumber of iterations: 5\n\nsummary(fit_QI2)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + diag1 + diag2 + diag3 + \n    diag4 + diag5 + diag6 + diag7 + diag8, family = poisson, \n    data = freq_occupationalStatus)\n\nDeviance Residuals: \n       Min          1Q      Median          3Q         Max  \n-4.567e+00  -2.318e+00  -1.045e-07   1.018e+00   6.152e+00  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.36346    0.17892   2.031 0.042211 *  \norigin2       0.35445    0.14755   2.402 0.016292 *  \norigin3       1.34923    0.12758  10.575  < 2e-16 ***\norigin4       1.76957    0.12322  14.362  < 2e-16 ***\norigin5       0.56615    0.14257   3.971 7.16e-05 ***\norigin6       2.72612    0.11933  22.845  < 2e-16 ***\norigin7       1.54999    0.12619  12.283  < 2e-16 ***\norigin8       1.37488    0.12757  10.777  < 2e-16 ***\ndestination2  0.82044    0.16521   4.966 6.83e-07 ***\ndestination3  1.69007    0.15065  11.219  < 2e-16 ***\ndestination4  2.02648    0.14771  13.719  < 2e-16 ***\ndestination5  1.43966    0.15317   9.399  < 2e-16 ***\ndestination6  2.96856    0.14439  20.559  < 2e-16 ***\ndestination7  2.24512    0.14547  15.434  < 2e-16 ***\ndestination8  1.87534    0.14855  12.624  < 2e-16 ***\ndiag11        3.54857    0.22806  15.560  < 2e-16 ***\ndiag21        2.15053    0.20737  10.370  < 2e-16 ***\ndiag31        0.77163    0.15275   5.052 4.38e-07 ***\ndiag41        0.54098    0.12287   4.403 1.07e-05 ***\ndiag51        0.84961    0.22965   3.700 0.000216 ***\ndiag61        0.25903    0.07531   3.439 0.000583 ***\ndiag71        0.80428    0.11438   7.031 2.04e-12 ***\ndiag81        1.04976    0.12946   8.109  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 446.84 on 41 degrees of freedom\nAIC: 815.18\n\nNumber of iterations: 5\n\nanova(fit_O, fit_QI, fit_U, fit_QI_U, fit_S)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ origin + destination\nModel 2: Freq ~ origin + destination + diag\nModel 3: Freq ~ origin + destination + Rscore:Cscore\nModel 4: Freq ~ origin + destination + diag + Rscore:Cscore\nModel 5: Freq ~ origin + destination + origin:destination\n  Resid. Df Resid. Dev Df Deviance\n1        49     954.49            \n2        41     446.84  8   507.65\n3        48     164.33 -7   282.51\n4        40      58.44  8   105.89\n5         0       0.00 40    58.44\n\nbind_rows(\n  model.summary(fit_O),\n  model.summary(fit_QI),\n  model.summary(fit_U),\n  model.summary(fit_QI_U),\n  model.summary(fit_S)\n)\n\n# A tibble: 5 × 6\n  `Model Description`    df      L2      BIC    Delta     p\n  <chr>               <int>   <dbl>    <dbl>    <dbl> <dbl>\n1 fit_O                  49 9.54e+2  5.55e+2 1.66e+ 1 1    \n2 fit_QI                 41 4.47e+2  1.12e+2 1.00e+ 1 1    \n3 fit_U                  48 1.64e+2 -2.27e+2 7.26e+ 0 1.00 \n4 fit_QI_U               40 5.84e+1 -2.68e+2 3.53e+ 0 0.970\n5 fit_S                   0 4.50e-8  4.50e-8 3.22e-10 1    \n\n\n\ndata(erikson)\nerikson\n\n, , country = EW\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I     311  130   79   24   22    7   70   44    1\n  II    161  128   66   22   11    6  112   47    1\n  III   128  109   89   26   25    3  197  113    4\n  IVa    88   83   43   72   41    5  112   64    4\n  IVb    36   45   38   27   47    3  110   80    4\n  IVc    43   23   25   16   14   99   86   81   40\n  V/VI  356  375  325  108  140    5 1506  839   22\n  VIIa  150  180  187   48   74    9  802  685   15\n  VIIb   12   14   18    5   18   10   96  114   56\n\n, , country = F\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I     105   72   19    9    8    3   26   11    1\n  II     59  113   37    9   14    0   54   34    2\n  III    40   86   64   10   20    4  103   61    4\n  IVa    38   37   17   38   23    2   36   22    1\n  IVb    40   68   55   38   95   10   92   74    7\n  IVc    27   74   77   27   52  461  156  286   73\n  V/VI   36  138   93   22   38    5  339  189    9\n  VIIa   22   88   79   18   24    8  235  209   11\n  VIIb    4   18   26    9   14   19   68  107   47\n\n, , country = S\n\n      destination\norigin    I   II  III  IVa  IVb  IVc V/VI VIIa VIIb\n  I      52   15   13    3    2    0   11    7    0\n  II     30   27   14    3    4    0   27   12    2\n  III    10   19   10    2    4    0   16   11    1\n  IVa    26   24    5   20    8    1   33   22    0\n  IVb     8   13    6    3    9    4   31   20    1\n  IVc    24   47   44   17   22   92  132  144   21\n  V/VI   33   89   40   13   18    5  188  104    5\n  VIIa   32   49   28   14   17    5  159  109    4\n  VIIb    5   10    3    0    6    3   33   42    8\n\ndimnames(erikson)\n\n$origin\n[1] \"I\"    \"II\"   \"III\"  \"IVa\"  \"IVb\"  \"IVc\"  \"V/VI\" \"VIIa\" \"VIIb\"\n\n$destination\n[1] \"I\"    \"II\"   \"III\"  \"IVa\"  \"IVb\"  \"IVc\"  \"V/VI\" \"VIIa\" \"VIIb\"\n\n$country\n[1] \"EW\" \"F\"  \"S\" \n\ndimnames(erikson)$origin <-\n  c(\"I+II\",\"I+II\",\"III\",\"IVab\",\"IVab\",\"IVc\",\"V/VI\",\"VIIa\",\"VIIb\")\ndimnames(erikson)$destination <-\n  c(\"I+II\",\"I+II\",\"III\",\"IVab\",\"IVab\",\"IVc\",\"V/VI\",\"VIIa\",\"VIIb\")\nfreq_erikson <- data.frame(erikson)\nerikson2 <-\n  xtabs(Freq ~ origin + destination + country, data = freq_erikson)\nfreq_erikson <- data.frame(erikson2)\n\nlevelMatrix <- rep(c(2, 3, 4, 6, 5, 6, 6,\n                     3, 3, 4, 6, 4, 5, 6,\n                     4, 4, 2, 5, 5, 5, 5,\n                     6, 6, 5, 1, 6, 5, 2,\n                     4, 4, 5, 6, 3, 4, 5,\n                     5, 4, 5, 5, 3, 3, 5,\n                     6, 6, 5, 3, 5, 4, 1), times = 3) %>% as.factor()\nd <- bind_cols(freq_erikson, levelMatrix = levelMatrix)\n\nfit_O <-\n  gnm(\n    Freq ~ origin + destination + country + origin * country +\n      destination * country,\n    family = poisson,\n    data = d\n  )\n\n\nfit_Common <- gnm(\n  Freq ~ origin + destination + country +\n    origin * country + destination * country +\n    origin * destination,\n  family = poisson,\n  data = d\n)\n\nfit_Common_Pattern <- gnm(\n  Freq ~ origin + destination + country +\n    origin * country + destination * country + levelMatrix,\n  family = poisson,\n  data = d\n)\n\nd %<>% mutate(\n  pred1 = fit_O$fitted.values,\n  pred2 = fit_Common$fitted.values,\n  pred3 = fit_Common_Pattern$fitted.values\n)\n\nsummary(fit_O)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + country + origin * \n    country + destination * country, family = poisson, data = d)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-12.763   -3.562   -1.393    1.767   22.208  \n\nCoefficients:\n                         Estimate Std. Error z value Pr(>|z|)    \n(Intercept)               5.74389    0.03348 171.575  < 2e-16 ***\noriginIII                -0.58201    0.04739 -12.281  < 2e-16 ***\noriginIVab               -0.31986    0.04375  -7.312 2.64e-13 ***\noriginIVc                -1.06769    0.05610 -19.032  < 2e-16 ***\noriginV/VI                1.08510    0.03282  33.062  < 2e-16 ***\noriginVIIa                0.54874    0.03564  15.397  < 2e-16 ***\noriginVIIb               -1.28675    0.06100 -21.095  < 2e-16 ***\ndestinationIII           -1.00300    0.03964 -25.305  < 2e-16 ***\ndestinationIVab          -1.16484    0.04211 -27.664  < 2e-16 ***\ndestinationIVc           -2.78106    0.08498 -32.724  < 2e-16 ***\ndestinationV/VI           0.26476    0.02730   9.699  < 2e-16 ***\ndestinationVIIa          -0.13764    0.03009  -4.574 4.78e-06 ***\ndestinationVIIb          -2.78106    0.08500 -32.720  < 2e-16 ***\ncountryF                 -0.88695    0.05988 -14.811  < 2e-16 ***\ncountryS                 -1.74777    0.08424 -20.747  < 2e-16 ***\noriginIII:countryF        0.19716    0.08083   2.439 0.014718 *  \noriginIVab:countryF       0.50479    0.07136   7.073 1.51e-12 ***\noriginIVc:countryF        1.82879    0.07546  24.235  < 2e-16 ***\noriginV/VI:countryF      -0.67387    0.06296 -10.703  < 2e-16 ***\noriginVIIa:countryF      -0.36238    0.06669  -5.434 5.51e-08 ***\noriginVIIb:countryF       0.67364    0.09307   7.238 4.55e-13 ***\noriginIII:countryS       -0.53021    0.14300  -3.708 0.000209 ***\noriginIVab:countryS       0.37251    0.10340   3.603 0.000315 ***\noriginIVc:countryS        1.96213    0.09743  20.138  < 2e-16 ***\noriginV/VI:countryS      -0.28322    0.08719  -3.248 0.001161 ** \noriginVIIa:countryS       0.08166    0.09040   0.903 0.366354    \noriginVIIb:countryS       0.58455    0.13159   4.442 8.90e-06 ***\ndestinationIII:countryF   0.17859    0.06820   2.619 0.008827 ** \ndestinationIVab:countryF  0.34258    0.06963   4.920 8.66e-07 ***\ndestinationIVc:countryF   2.04865    0.10057  20.370  < 2e-16 ***\ndestinationV/VI:countryF -0.22428    0.05085  -4.411 1.03e-05 ***\ndestinationVIIa:countryF  0.06764    0.05340   1.267 0.205290    \ndestinationVIIb:countryF  0.85375    0.12089   7.062 1.64e-12 ***\ndestinationIII:countryS  -0.14353    0.09826  -1.461 0.144099    \ndestinationIVab:countryS  0.03051    0.09891   0.308 0.757741    \ndestinationIVc:countryS   1.24126    0.13514   9.185  < 2e-16 ***\ndestinationV/VI:countryS -0.05932    0.06543  -0.907 0.364667    \ndestinationVIIa:countryS  0.05222    0.07055   0.740 0.459234    \ndestinationVIIb:countryS  0.27845    0.18161   1.533 0.125225    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 4860 on 108 degrees of freedom\nAIC: 5752.1\n\nNumber of iterations: 6\n\nnames(fit_Common)\n\n [1] \"call\"          \"formula\"       \"terms\"         \"data\"         \n [5] \"eliminate\"     \"ofInterest\"    \"na.action\"     \"xlevels\"      \n [9] \"offset\"        \"tolerance\"     \"iterStart\"     \"iterMax\"      \n[13] \"coefficients\"  \"residuals\"     \"fitted.values\" \"rank\"         \n[17] \"family\"        \"predictors\"    \"deviance\"      \"aic\"          \n[21] \"iter\"          \"weights\"       \"prior.weights\" \"df.residual\"  \n[25] \"y\"             \"converged\"     \"constrain\"     \"constrainTo\"  \n[29] \"x\"             \"model\"        \n\nnames(summary(fit_Common))\n\n [1] \"call\"           \"ofInterest\"     \"family\"         \"deviance\"      \n [5] \"aic\"            \"df.residual\"    \"iter\"           \"deviance.resid\"\n [9] \"coefficients\"   \"eliminated\"     \"dispersion\"     \"df\"            \n[13] \"cov.scaled\"    \n\nsummary(fit_Common)\n\n\nCall:\ngnm(formula = Freq ~ origin + destination + country + origin * \n    country + destination * country + origin * destination, family = poisson, \n    data = d)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-2.894368  -0.493141  -0.001321   0.470201   2.903940  \n\nCoefficients:\n                           Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                 6.59629    0.03453 191.003  < 2e-16 ***\noriginIII                  -1.13823    0.06560 -17.351  < 2e-16 ***\noriginIVab                 -1.07370    0.06143 -17.479  < 2e-16 ***\noriginIVc                  -2.70361    0.09016 -29.987  < 2e-16 ***\noriginV/VI                  0.01007    0.04703   0.214 0.830527    \noriginVIIa                 -0.77338    0.05726 -13.507  < 2e-16 ***\noriginVIIb                 -3.26650    0.13781 -23.702  < 2e-16 ***\ndestinationIII             -1.69227    0.07692 -22.001  < 2e-16 ***\ndestinationIVab            -2.25353    0.09612 -23.445  < 2e-16 ***\ndestinationIVc             -4.55452    0.25826 -17.635  < 2e-16 ***\ndestinationV/VI            -1.34800    0.06703 -20.112  < 2e-16 ***\ndestinationVIIa            -2.03630    0.08773 -23.212  < 2e-16 ***\ndestinationVIIb            -5.12499    0.38197 -13.417  < 2e-16 ***\ncountryF                   -0.79371    0.05423 -14.637  < 2e-16 ***\ncountryS                   -1.65837    0.07661 -21.646  < 2e-16 ***\noriginIII:countryF          0.20390    0.08179   2.493 0.012668 *  \noriginIVab:countryF         0.48071    0.07350   6.540 6.15e-11 ***\noriginIVc:countryF          1.61954    0.08393  19.295  < 2e-16 ***\noriginV/VI:countryF        -0.64330    0.06586  -9.767  < 2e-16 ***\noriginVIIa:countryF        -0.33935    0.07019  -4.835 1.33e-06 ***\noriginVIIb:countryF         0.64616    0.09861   6.553 5.65e-11 ***\noriginIII:countryS         -0.49402    0.14390  -3.433 0.000597 ***\noriginIVab:countryS         0.42215    0.10589   3.987 6.70e-05 ***\noriginIVc:countryS          2.10894    0.10644  19.814  < 2e-16 ***\noriginV/VI:countryS        -0.23466    0.09102  -2.578 0.009934 ** \noriginVIIa:countryS         0.14235    0.09505   1.498 0.134221    \noriginVIIb:countryS         0.72346    0.13754   5.260 1.44e-07 ***\ndestinationIII:countryF     0.17483    0.07130   2.452 0.014209 *  \ndestinationIVab:countryF    0.18250    0.07402   2.465 0.013684 *  \ndestinationIVc:countryF     0.73972    0.11572   6.392 1.64e-10 ***\ndestinationV/VI:countryF   -0.11294    0.05496  -2.055 0.039884 *  \ndestinationVIIa:countryF    0.02129    0.05885   0.362 0.717449    \ndestinationVIIb:countryF    0.11636    0.13452   0.865 0.387023    \ndestinationIII:countryS    -0.22236    0.10142  -2.192 0.028352 *  \ndestinationIVab:countryS   -0.17172    0.10342  -1.660 0.096839 .  \ndestinationIVc:countryS    -0.38697    0.15155  -2.553 0.010668 *  \ndestinationV/VI:countryS   -0.09561    0.07021  -1.362 0.173263    \ndestinationVIIa:countryS   -0.17583    0.07672  -2.292 0.021913 *  \ndestinationVIIb:countryS   -0.64986    0.19498  -3.333 0.000859 ***\noriginIII:destinationIII    0.76642    0.11807   6.491 8.52e-11 ***\noriginIVab:destinationIII   0.52595    0.11560   4.550 5.37e-06 ***\noriginIVc:destinationIII    1.17849    0.13041   9.037  < 2e-16 ***\noriginV/VI:destinationIII   0.87374    0.09195   9.502  < 2e-16 ***\noriginVIIa:destinationIII   1.10866    0.10285  10.779  < 2e-16 ***\noriginVIIb:destinationIII   1.36163    0.20619   6.604 4.01e-11 ***\noriginIII:destinationIVab   0.69419    0.15016   4.623 3.78e-06 ***\noriginIVab:destinationIVab  2.02108    0.11352  17.804  < 2e-16 ***\noriginIVc:destinationIVab   1.73618    0.14216  12.213  < 2e-16 ***\noriginV/VI:destinationIVab  1.12813    0.11169  10.101  < 2e-16 ***\noriginVIIa:destinationIVab  1.25162    0.12471  10.036  < 2e-16 ***\noriginVIIb:destinationIVab  2.01369    0.20909   9.631  < 2e-16 ***\noriginIII:destinationIVc    0.23560    0.45713   0.515 0.606273    \noriginIVab:destinationIVc   1.24669    0.32500   3.836 0.000125 ***\noriginIVc:destinationIVc    5.21749    0.26575  19.633  < 2e-16 ***\noriginV/VI:destinationIVc   0.18607    0.36231   0.514 0.607553    \noriginVIIa:destinationIVc   1.22166    0.33304   3.668 0.000244 ***\noriginVIIb:destinationIVc   3.56730    0.33324  10.705  < 2e-16 ***\noriginIII:destinationV/VI   1.17516    0.09949  11.812  < 2e-16 ***\noriginIVab:destinationV/VI  1.20044    0.09270  12.950  < 2e-16 ***\noriginIVc:destinationV/VI   1.88309    0.10710  17.582  < 2e-16 ***\noriginV/VI:destinationV/VI  2.05945    0.07524  27.372  < 2e-16 ***\noriginVIIa:destinationV/VI  2.21492    0.08327  26.601  < 2e-16 ***\noriginVIIb:destinationV/VI  2.54647    0.15871  16.045  < 2e-16 ***\noriginIII:destinationVIIa   1.28947    0.12352  10.440  < 2e-16 ***\noriginIVab:destinationVIIa  1.46717    0.11334  12.944  < 2e-16 ***\noriginIVc:destinationVIIa   2.84331    0.11806  24.084  < 2e-16 ***\noriginV/VI:destinationVIIa  2.14755    0.09583  22.410  < 2e-16 ***\noriginVIIa:destinationVIIa  2.70994    0.10109  26.807  < 2e-16 ***\noriginVIIb:destinationVIIa  3.48535    0.16446  21.193  < 2e-16 ***\noriginIII:destinationVIIb   1.34327    0.50723   2.648 0.008091 ** \noriginIVab:destinationVIIb  1.75599    0.45232   3.882 0.000104 ***\noriginIVc:destinationVIIb   4.65198    0.39743  11.705  < 2e-16 ***\noriginV/VI:destinationVIIb  1.80532    0.41541   4.346 1.39e-05 ***\noriginVIIa:destinationVIIb  2.31365    0.42297   5.470 4.50e-08 ***\noriginVIIb:destinationVIIb  5.72803    0.41103  13.936  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 121.3 on 72 degrees of freedom\nAIC: 1085.4\n\nNumber of iterations: 4\n\nanova(fit_O, fit_Common_Pattern, fit_Common)\n\nAnalysis of Deviance Table\n\nModel 1: Freq ~ origin + destination + country + origin:country + destination:country\nModel 2: Freq ~ origin + destination + country + origin:country + destination:country + \n    levelMatrix\nModel 3: Freq ~ origin + destination + country + origin:country + destination:country + \n    origin:destination\n  Resid. Df Resid. Dev Df Deviance\n1       108     4860.0            \n2       103      505.6  5   4354.4\n3        72      121.3 31    384.3"
  },
  {
    "objectID": "8-Note.html#xie",
    "href": "8-Note.html#xie",
    "title": "補足のノート",
    "section": "Xie",
    "text": "Xie\n\nlibrary(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)\nFreq <- c(5, 3, 10, 11, 4, 5, 8, 6, 26, 11, 3, 6, 23, 11, 1, 2)\nRow <- gl(n = 4, k = 4)\nCol <- gl(n = 4, k = 1, length = 16)\nd <- tibble(Freq, Row, Col)\n\nfit <-\n  gnm(Freq ~ Row + Col + Mult(1, Row, Col),\n      family = poisson,\n      data = d)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\n\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col + Mult(1, Row, Col), family = poisson, \n    data = d)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.51267  -0.25916  -0.03574   0.25369   0.66120  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)            2.26787         NA      NA       NA\nRow2                  -0.11845         NA      NA       NA\nRow3                   0.60428         NA      NA       NA\nRow4                   0.15022         NA      NA       NA\nCol2                  -0.53064         NA      NA       NA\nCol3                  -1.15468         NA      NA       NA\nCol4                  -0.79274         NA      NA       NA\nMult(., Row, Col).   -13.05260         NA      NA       NA\nMult(1, ., Col).Row1   0.46488         NA      NA       NA\nMult(1, ., Col).Row2   0.36051         NA      NA       NA\nMult(1, ., Col).Row3  -0.21228         NA      NA       NA\nMult(1, ., Col).Row4  -0.46968         NA      NA       NA\nMult(1, Row, .).Col1   0.12239         NA      NA       NA\nMult(1, Row, .).Col2   0.06808         NA      NA       NA\nMult(1, Row, .).Col3  -0.20718         NA      NA       NA\nMult(1, Row, .).Col4  -0.13544         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.7442 on 4 degrees of freedom\nAIC: 84.814\n\nNumber of iterations: 8\n\nrowProbs <- with(d, tapply(Freq, Row, sum) / sum(Freq))\ncolProbs <- with(d, tapply(Freq, Col, sum) / sum(Freq))\nmu <- getContrasts(\n  fit,\n  pickCoef(fit, \"[.]Row\"),\n  ref = rowProbs,\n  scaleRef = rowProbs,\n  scaleWeights = rowProbs\n)\nnu <- getContrasts(\n  fit,\n  pickCoef(fit, \"[.]Col\"),\n  ref = colProbs,\n  scaleRef = colProbs,\n  scaleWeights = colProbs\n)\nfit <-\n  gnm(\n    Freq ~ Row + Col + Mult(1, Row, Col),\n    family = poisson,\n    data = d,\n    constrain = 9:16,\n    constrainTo = c(mu$qvframe[, 1], -1 * nu$qvframe[, 1])\n  )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\nmu_score <- rep(mu$qvframe[, 1], each = 4)\nnu_score <- rep(nu$qvframe[, 1], 4)\nd <- d |>  mutate(mu = mu_score,\n              nu = nu_score)\n\n# Canonical correlation\nlibrary(wCorr)\n\nwCorr v1.9.6\n\nwith(d, weightedCorr(mu, x = nu, weights = Freq, method=\"polychoric\"))\n\n[1] -0.5602552\n\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ Row + Col + Mult(1, Row, Col), constrain = 9:16, \n    constrainTo = c(mu$qvframe[, 1], -1 * nu$qvframe[, 1]), family = poisson, \n    data = d)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.51267  -0.25916  -0.03574   0.25369   0.66120  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            2.2730     0.2679   8.484  < 2e-16 ***\nRow2                  -0.1064     0.2823  -0.377 0.706328    \nRow3                   0.6827     0.2698   2.530 0.011397 *  \nRow4                   0.2584     0.2844   0.908 0.363656    \nCol2                  -0.5588     0.2278  -2.454 0.014141 *  \nCol3                  -1.3258     0.3082  -4.301 1.70e-05 ***\nCol4                  -0.9266     0.2677  -3.462 0.000536 ***\nMult(., Row, Col).     0.6577     0.1127   5.836 5.35e-09 ***\nMult(1, ., Col).Row1   1.3355         NA      NA       NA    \nMult(1, ., Col).Row2   1.0593         NA      NA       NA    \nMult(1, ., Col).Row3  -0.4565         NA      NA       NA    \nMult(1, ., Col).Row4  -1.1376         NA      NA       NA    \nMult(1, Row, .).Col1  -0.8514         NA      NA       NA    \nMult(1, Row, .).Col2  -0.4441         NA      NA       NA    \nMult(1, Row, .).Col3   1.6203         NA      NA       NA    \nMult(1, Row, .).Col4   1.0823         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 1.7442 on 8 degrees of freedom\nAIC: 76.814\n\nNumber of iterations: 3\n\nphi <- fit$coefficients[\"Mult(., Row, Col).\"] %>% abs()\nrho <- (-1 + sqrt(1 + 4 * phi ^ 2)) / (2 * phi)\neta <- (2 * phi) ^ (-1)\ntau <- (1 + eta ^ 2) ^ (1 / 2) - eta\nmu\n\n                       Estimate Std. Error\nMult(1, ., Col).Row1  1.3354658  0.1909635\nMult(1, ., Col).Row2  1.0592605  0.2590555\nMult(1, ., Col).Row3 -0.4564888  0.2467937\nMult(1, ., Col).Row4 -1.1376491  0.2191522\n\nnu\n\n                       Estimate Std. Error\nMult(1, Row, .).Col1  0.8513968  0.1194283\nMult(1, Row, .).Col2  0.4440776  0.2763713\nMult(1, Row, .).Col3 -1.6203060  0.2558555\nMult(1, Row, .).Col4 -1.0822644  0.2870932\n\nphi\n\nMult(., Row, Col). \n         0.6576831 \n\nrho\n\nMult(., Row, Col). \n         0.4959289 \n\ntau\n\nMult(., Row, Col). \n         0.4959289 \n\ndelta_mu <- abs((-1.3354658 - 1.1376491) / (1 - 4))\ndelta_nu <- abs((-0.8513968 - 1.0822644) / (1 - 4))\n# Adjusted\ntau * ((1 - delta_mu / 12) * (1 - delta_nu / 12)) ^ (-1 / 2)\n\nMult(., Row, Col). \n         0.5282781 \n\nlibrary(logmult)\ntab <- matrix(Freq,\n              nrow = 4,\n              ncol = 4,\n              byrow = TRUE)\nrc2 <- rc(tab,\n          nd = 1,\n          weighting = \"marginal\",\n          se = \"bootstrap\")\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............\nDone\nComputing bootstrap standard errors...\n\n\nLoading required namespace: parallel\n\n\n.\n\n\nWarning in jackboot(se, ncpus, nreplicates, tab, model, assoc1 =\ngetS3method(\"assoc\", : 3 model replicates failed and their results will be\nskipped. Standard errors will not be completely accurate. Consider raising the\nvalue of iterMax.\n\nsummary(rc2)\n\nCall:\nrc(tab = tab, nd = 1, weighting = \"marginal\", se = \"bootstrap\")\n\nDeviance Residuals:\n    Columns\nRows         A         B         C         D\n   A   0.18575  -0.40583  -0.21673   0.32921\n   B  -0.38647   0.66120   0.30497  -0.51267\n   C   0.23692  -0.44850  -0.07819   0.21153\n   D  -0.15877   0.30399   0.00672  -0.14657\n\nAssociation coefficients:\n               Normalized  Adjusted  Std. error   Pr(>|z|)     \nDim1              0.65768        NA      0.2664  0.0135689  *  \nDim1:RowsA        1.33547   1.08303      0.2484  7.561e-08  ***\nDim1:RowsB        1.05926   0.85904      0.3122  0.0006924  ***\nDim1:RowsC       -0.45649  -0.37020      0.2653  0.0852820  .  \nDim1:RowsD       -1.13765  -0.92261      0.2762  3.801e-05  ***\nDim1:ColumnsA    -0.85140  -0.69046      0.1389  8.915e-10  ***\nDim1:ColumnsB    -0.44408  -0.36014      0.3212  0.1667834     \nDim1:ColumnsC     1.62031   1.31403      0.3316  1.029e-06  ***\nDim1:ColumnsD     1.08226   0.87769      0.3666  0.0031545  ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: marginal\nDeviance:              1.744218\nPearson chi-squared:   1.760665\nDissimilarity index:   4.670712%\nResidual df:           4\nBIC:                   -17.87688\nAIC:                   -6.255782\n\nassoc(rc2)\n\n$phi\n          Dim1\n[1,] 0.6576832\n\n$row\n, , 1\n\n        Dim1\nA  1.3354659\nB  1.0592602\nC -0.4564886\nD -1.1376492\n\n\n$col\n, , 1\n\n        Dim1\nA -0.8513968\nB -0.4440776\nC  1.6203060\nD  1.0822643\n\n\n$diagonal\nnumeric(0)\n\n$weighting\n[1] \"marginal\"\n\n$row.weights\n  [,1]\nA   29\nB   23\nC   46\nD   37\n\n$col.weights\n  [,1]\nA   58\nB   30\nC   22\nD   25\n\n$vars\n[1] \"Rows\"    \"Columns\"\n\nattr(,\"class\")\n[1] \"assoc.rc\" \"assoc\""
  }
]