[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "『カテゴリカルデータのための連関モデル』",
    "section": "",
    "text": "このページは\nRaymond Wong著・藤原翔訳．2021．『カテゴリカルデータの連関分析』共立出版．\nのためのサポートページです．本書の付録や補遺とすることも検討しましたが，Association Modelsは他のQASSに比べて分量が多いため（156ページ！），そしてRのバージョンアップやパッケージの更新などに備えるため，正誤表もあわせて公開するためにオンラインで公開することにしました．本書と関連した連関モデルの適用例の情報についても，このサポートページで補うことができればと思います．\nこのサポートページでは，特にRの基本的な操作方法と，Rを用いた連関分析の方法を紹介します．各章ごとにRの実行方法をまとめています．モデルの意味や結果の解釈などについては本書を参考にしてください．\nなおこのサポートページの内容は英語版のサポートページ https://studysites.sagepub.com/wongstudy/ が元になっています．そちらもぜひ参考にしてください．\n\n\n\n本サポートページのスクリプトはそのままコピー・アンド・ペーストすることが可能です． スクリプトを選択してコピーしても良いですし，各スクリプトの右上の図をクリックしてもコピーされます．\n\nなおRのスクリプトについては https://github.com/ShoFujihara/Association_Models_Japanese の scripts というフォルダに保存されているので，そちらを参照してください．Googleドライブにもスクリプトを保存しておきます． https://drive.google.com/drive/folders/1oP0EURmoD8-dIkC6MCqDS3_0ysOz7t-0?usp=sharing\n\n\n\n\n特になし．\n\n\n\n\n\n2023年5月1日: version 0.1."
  },
  {
    "objectID": "1-Introduction.html",
    "href": "1-Introduction.html",
    "title": "シリーズ編者による内容紹介",
    "section": "",
    "text": "「シリーズ編者による内容紹介」の分析は短いが，Rによるカテゴリカルデータ分析の方法の基礎を身につける上ではよい例である．少し長くなるが，基本的な操作方法の説明やクロス表の分析方法について説明したい．\nパッケージはtidyverse（データセットの処理のため），DescTools（記述統計を求めるため），vcdパッケージ（カテゴリカルデータの分析のため），gnm（連関分析の処理のため）を使用する．"
  },
  {
    "objectID": "1-Introduction.html#度数行変数列変数のデータからクロス表を作成",
    "href": "1-Introduction.html#度数行変数列変数のデータからクロス表を作成",
    "title": "シリーズ編者による内容紹介",
    "section": "度数，行変数，列変数のデータからクロス表を作成",
    "text": "度数，行変数，列変数のデータからクロス表を作成\n\n度数，行変数，列変数のデータからクロス表を作成するにはxtabs関数を用いる．\n\n\nd |> xtabs(Freq ~ PSES + MHS, data = _)\n\n    MHS\nPSES   1   2   3   4\n   1  64  94  58  46\n   2  57  94  54  40\n   3  57 105  65  60\n   4  72 141  77  94\n   5  36  97  54  78\n   6  21  71  54  71\n\n\n\nRに初めから準備されているTitanicデータは，多少特殊な集計がされているが，これにdata.frame関数を適用すると，集計データになる．これに対してxtabs関数を用いればクロス表を簡単に作成できる．\n\n\ndata.frame(Titanic) |> xtabs(Freq ~ Class + Survived, data = _)\n\n      Survived\nClass   No Yes\n  1st  122 203\n  2nd  167 118\n  3rd  528 178\n  Crew 673 212\n\ndata.frame(Titanic) |> xtabs(Freq ~ Sex + Survived, data = _)\n\n        Survived\nSex        No  Yes\n  Male   1364  367\n  Female  126  344\n\ndata.frame(Titanic) |> xtabs(Freq ~ Age + Survived, data = _)\n\n       Survived\nAge       No  Yes\n  Child   52   57\n  Adult 1438  654"
  },
  {
    "objectID": "1-Introduction.html#個票データから集計データを作成",
    "href": "1-Introduction.html#個票データから集計データを作成",
    "title": "シリーズ編者による内容紹介",
    "section": "個票データから集計データを作成",
    "text": "個票データから集計データを作成\n\n個票データから集計データを作成する方法はいくつか考えられるが，ここではcount関数を用いる．\n\n\n# スターウォーズデータ\nstarwars\n\n# A tibble: 87 × 14\n   name     height  mass hair_color skin_color eye_color birth_year sex   gender\n   <chr>     <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n 1 Luke Sk…    172    77 blond      fair       blue            19   male  mascu…\n 2 C-3PO       167    75 <NA>       gold       yellow         112   none  mascu…\n 3 R2-D2        96    32 <NA>       white, bl… red             33   none  mascu…\n 4 Darth V…    202   136 none       white      yellow          41.9 male  mascu…\n 5 Leia Or…    150    49 brown      light      brown           19   fema… femin…\n 6 Owen La…    178   120 brown, gr… light      blue            52   male  mascu…\n 7 Beru Wh…    165    75 brown      light      blue            47   fema… femin…\n 8 R5-D4        97    32 <NA>       white, red red             NA   none  mascu…\n 9 Biggs D…    183    84 black      light      brown           24   male  mascu…\n10 Obi-Wan…    182    77 auburn, w… fair       blue-gray       57   male  mascu…\n# ℹ 77 more rows\n# ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#   vehicles <list>, starships <list>\n\n# 1つの変数にcount関数を適用\nstarwars |> \n  count(sex)\n\n# A tibble: 5 × 2\n  sex                n\n  <chr>          <int>\n1 female            16\n2 hermaphroditic     1\n3 male              60\n4 none               6\n5 <NA>               4\n\n# 2つの変数にcount関数を適用し，集計レベルのデータを作成\nstarwars |> \n  count(sex, gender)\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\n# 欠損値を処理し，nをFreqと名前を変更し，df_dstarwarsとしてデータを保存\ndf_dstarwars <- starwars |> \n  count(sex, gender) |> \n  drop_na() |>\n  rename(Freq = n)\n\n# 確認\ndf_dstarwars\n\n# A tibble: 5 × 3\n  sex            gender     Freq\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5"
  },
  {
    "objectID": "1-Introduction.html#集計データを個票データに変換",
    "href": "1-Introduction.html#集計データを個票データに変換",
    "title": "シリーズ編者による内容紹介",
    "section": "集計データを個票データに変換",
    "text": "集計データを個票データに変換\n集計データを個票データに変換したいときにはvcdExtraパッケージのexpand.dftを用いる．\n\nlibrary(vcdExtra)\nd_ind <- expand.dft(d, dreq = \"Freq\")\nd_ind\n\n# A tibble: 1,660 × 4\n    PSES   MHS Rscore Cscore\n   <int> <int>  <int>  <int>\n 1     1     1      1      1\n 2     1     1      1      1\n 3     1     1      1      1\n 4     1     1      1      1\n 5     1     1      1      1\n 6     1     1      1      1\n 7     1     1      1      1\n 8     1     1      1      1\n 9     1     1      1      1\n10     1     1      1      1\n# ℹ 1,650 more rows"
  },
  {
    "objectID": "1-Introduction.html#元クロス分類表の入力",
    "href": "1-Introduction.html#元クロス分類表の入力",
    "title": "シリーズ編者による内容紹介",
    "section": "3元クロス分類表の入力",
    "text": "3元クロス分類表の入力\n\ndata <- c(2,5,1,\n  2,4,7,\n  \n  4,7,5,\n  8,0,1,\n  \n  10,11,5,\n  1,3,4,\n  \n  1,1,1,\n  2,3,4)\n\narray(data, dim = c(2,3,4))\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    2    1    4\n[2,]    5    2    7\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    4    5    0\n[2,]    7    8    1\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   10    5    3\n[2,]   11    1    4\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]    1    1    3\n[2,]    1    2    4\n\ntab1 <- c(2,5,1,\n          2,4,7) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\n\ntab2 <- c(4,7,5,\n          8,0,1) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab3 <- c(10,11,5,\n          1,3,4) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab4 <- c(1,1,1,\n          2,3,4) |> matrix(nrow = 2, ncol = 3, byrow =TRUE)\n\ntab_merge <- array(c(tab1,tab2,tab3,tab4), dim = c(2,3,4))\ntab_merge\n\n, , 1\n\n     [,1] [,2] [,3]\n[1,]    2    5    1\n[2,]    2    4    7\n\n, , 2\n\n     [,1] [,2] [,3]\n[1,]    4    7    5\n[2,]    8    0    1\n\n, , 3\n\n     [,1] [,2] [,3]\n[1,]   10   11    5\n[2,]    1    3    4\n\n, , 4\n\n     [,1] [,2] [,3]\n[1,]    1    1    1\n[2,]    2    3    4\n\ndimnames(tab_merge) <- list(R = c(\"men\",\"women\"),\n                            C = c(\"blue\",\"red\",\"green\"),\n                            L = c(\"north\",\"south\",\"east\",\"west\"))\ntab_merge\n\n, , L = north\n\n       C\nR       blue red green\n  men      2   5     1\n  women    2   4     7\n\n, , L = south\n\n       C\nR       blue red green\n  men      4   7     5\n  women    8   0     1\n\n, , L = east\n\n       C\nR       blue red green\n  men     10  11     5\n  women    1   3     4\n\n, , L = west\n\n       C\nR       blue red green\n  men      1   1     1\n  women    2   3     4\n\n# フラットな形式で3元表を表示\nftable(tab_merge)\n\n            L north south east west\nR     C                            \nmen   blue        2     4   10    1\n      red         5     7   11    1\n      green       1     5    5    1\nwomen blue        2     8    1    2\n      red         4     0    3    3\n      green       7     1    4    4\n\n\nFriendly and Meyer (2016) を参考に表を作成．\n\n\n\n元のデータ形式\n変換後のデータ形式\n方法\n\n\n\n\nケース形式\n度数形式\ndata.frame(table(d$A,d$B))\n\n\nケース形式\n表形式\ntable(d$A,d$B)\n\n\n度数形式\nケース形式\nexpand.dfr(X)\n\n\n度数形式\n表形式\nxtabs(Freq ~ A + B)\n\n\n表形式\nケース形式\nexpand.dfr(X)\n\n\n表形式\n度数形式\ndata.frame(tab)"
  },
  {
    "objectID": "1-Introduction.html#練習問題",
    "href": "1-Introduction.html#練習問題",
    "title": "シリーズ編者による内容紹介",
    "section": "練習問題",
    "text": "練習問題\n\nせっかくデータを入力したので，このデータを使ってGoodman（1979）の表5A，表5B，表5Cの結果を再現しよう．\n分析方法については第2章のプログラムを参考にしてほしい．"
  },
  {
    "objectID": "1-Introduction.html#参考文献",
    "href": "1-Introduction.html#参考文献",
    "title": "シリーズ編者による内容紹介",
    "section": "参考文献",
    "text": "参考文献\n\nGoodman, Leo A. 1979. “Simple Models for the Analysis of Association in Cross-Classifications Having Ordered Categories.”Journal of the American Statistical Association 74(367):537–52."
  },
  {
    "objectID": "2-Chapter_1.html",
    "href": "2-Chapter_1.html",
    "title": "1  第1章",
    "section": "",
    "text": "# 元データの入力（xページ）\nFreq <- c( 64,  94, 58, 46,\n           57,  94, 54, 40,\n           57, 105, 65, 60,\n           72, 141, 77, 94,\n           36,  97, 54, 78,\n           21,  71, 54, 71)\n\n# データを表形式に変換\ntab <- matrix(\n  Freq,\n  nrow = 6,\n  ncol = 4,\n  byrow = TRUE,\n  dimnames = list(\n    SES = LETTERS[1:6],\n    MHS = c(\"well\",\n            \"mild\",\n            \"modelrate\",\n            \"impared\")\n  )\n)\ntab\n\n   MHS\nSES well mild modelrate impared\n  A   64   94        58      46\n  B   57   94        54      40\n  C   57  105        65      60\n  D   72  141        77      94\n  E   36   97        54      78\n  F   21   71        54      71\n\n\n\nDescTools::Desc(tab)\n\n------------------------------------------------------------------------------ \ntab (matrix, array)\n\nSummary: \nn: 1'660, rows: 6, columns: 4\n\nPearson's Chi-squared test:\n  X-squared = 45.985, df = 15, p-value = 5.346e-05\nLog likelihood ratio (G-test) test of independence:\n  G = 47.418, X-squared df = 15, p-value = 3.155e-05\nMantel-Haenszel Chi-squared:\n  X-squared = 37.156, df = 1, p-value = 1.091e-09\n\nContingency Coeff.     0.164\nCramer's V             0.096\nKendall Tau-b          0.120\n\n                                                      \n      MHS     well   mild   modelrate   impared    Sum\nSES                                                   \n                                                      \nA     freq      64     94          58        46    262\n      perc    3.9%   5.7%        3.5%      2.8%  15.8%\n      p.row  24.4%  35.9%       22.1%     17.6%      .\n      p.col  20.8%  15.6%       16.0%     11.8%      .\n                                                      \nB     freq      57     94          54        40    245\n      perc    3.4%   5.7%        3.3%      2.4%  14.8%\n      p.row  23.3%  38.4%       22.0%     16.3%      .\n      p.col  18.6%  15.6%       14.9%     10.3%      .\n                                                      \nC     freq      57    105          65        60    287\n      perc    3.4%   6.3%        3.9%      3.6%  17.3%\n      p.row  19.9%  36.6%       22.6%     20.9%      .\n      p.col  18.6%  17.4%       18.0%     15.4%      .\n                                                      \nD     freq      72    141          77        94    384\n      perc    4.3%   8.5%        4.6%      5.7%  23.1%\n      p.row  18.8%  36.7%       20.1%     24.5%      .\n      p.col  23.5%  23.4%       21.3%     24.2%      .\n                                                      \nE     freq      36     97          54        78    265\n      perc    2.2%   5.8%        3.3%      4.7%  16.0%\n      p.row  13.6%  36.6%       20.4%     29.4%      .\n      p.col  11.7%  16.1%       14.9%     20.1%      .\n                                                      \nF     freq      21     71          54        71    217\n      perc    1.3%   4.3%        3.3%      4.3%  13.1%\n      p.row   9.7%  32.7%       24.9%     32.7%      .\n      p.col   6.8%  11.8%       14.9%     18.3%      .\n                                                      \nSum   freq     307    602         362       389  1'660\n      perc   18.5%  36.3%       21.8%     23.4% 100.0%\n      p.row      .      .           .         .      .\n      p.col      .      .           .         .      .\n                                                      \n\n\n\n\nDescTools::Assocs(tab)\n\n                       estimate  lwr.ci  upr.ci\nContingency Coeff.       0.1642       -       -\nCramer V                 0.0961  0.0482  0.1102\nKendall Tau-b            0.1202  0.0822  0.1583\nGoodman Kruskal Gamma    0.1543  0.1056  0.2029\nStuart Tau-c             0.1247  0.0852  0.1643\nSomers D C|R             0.1131  0.0773  0.1489\nSomers D R|C             0.1278  0.0873  0.1684\nPearson Correlation      0.1497  0.1023  0.1964\nSpearman Correlation     0.1485  0.1011  0.1952\nLambda C|R               0.0000  0.0000  0.0000\nLambda R|C               0.0000  0.0000  0.0000\nLambda sym               0.0000  0.0000  0.0000\nUncertainty Coeff. C|R   0.0106  0.0047  0.0164\nUncertainty Coeff. R|C   0.0080  0.0036  0.0125\nUncertainty Coeff. sym   0.0091  0.0041  0.0142\nMutual Information       0.0206       -       -\n\n\n次のように個別に尺度を求めることもできる． 詳しくは?DescToolsのStatistics:を確認してほしい．\n\nDescTools::CramerV(tab, conf.level = 0.95)\n\n  Cramer V     lwr.ci     upr.ci \n0.09609364 0.04817087 0.11017098 \n\nDescTools::Lambda(tab, conf.level = 0.95)\n\nlambda lwr.ci upr.ci \n     0      0      0 \n\nDescTools::GoodmanKruskalTau(tab, conf.level = 0.95)\n\n       tauA      lwr.ci      upr.ci \n0.004913157 0.002173427 0.007652887 \n\nDescTools::KendallTauB(tab, conf.level = 0.95)\n\n     tau_b     lwr.ci     upr.ci \n0.12023215 0.08217305 0.15829125 \n\nDescTools::StuartTauC(tab, conf.level = 0.95)\n\n      tauc     lwr.ci     upr.ci \n0.12473799 0.08520269 0.16427329 \n\nDescTools::GoodmanKruskalGamma(tab, conf.level = 0.95)\n\n    gamma    lwr.ci    upr.ci \n0.1542894 0.1056412 0.2029376 \n\nDescTools::SomersDelta(tab, conf.level = 0.95)\n\n    somers     lwr.ci     upr.ci \n0.12783809 0.08727872 0.16839747 \n\nDescTools::UncertCoef(tab, conf.level = 0.95)\n\n         uc      lwr.ci      upr.ci \n0.009135369 0.004068778 0.014201959"
  },
  {
    "objectID": "3-Chapter_2.html",
    "href": "3-Chapter_2.html",
    "title": "2  第2章",
    "section": "",
    "text": "第2章では2元表の連関モデルが紹介されている．制約のかけかたは少し複雑なのでプログラムとテキストをみながら手順を確認して欲しい．\nパッケージはtidyverse（データセットの処理のため），DescTools（記述統計を求めるため），vcdパッケージ（カテゴリカルデータの分析のため），broom（回帰係数の整理），gnm（連関分析の処理のため），logmult（連関モデルのため）を使用する．"
  },
  {
    "objectID": "3-Chapter_2.html#対比について",
    "href": "3-Chapter_2.html#対比について",
    "title": "2  第2章",
    "section": "2.1 対比について",
    "text": "2.1 対比について\n回帰モデルにおけるカテゴリカル変数の係数を解釈する上では対比 （contrasts）が重要である．まず，デフォルトでのcontrastsを確認したい．factor変数についてはcontr.treatment，ordered変数についてはcontr.polyという対比が用いられている．contr.treatmentは基準となっている水準とそれぞれの水準を対比する．これはダミーコーディングと呼ばれる． contr.polyは直交多項式（orthogonal polynomials）に基づいた対比を行う（気にしなくてよい）．\n\n# デフォルトのcontrastsを確認\noptions('contrasts')\n\n$contrasts\n        unordered           ordered \n\"contr.treatment\"      \"contr.poly\" \n\n\n\n# defaultのcontrastsの設定（ここでは特に意味はない．constrastをいじった後にデフォルトに戻す）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\n\n具体的に何をしているのかを以下のプログラムで確認する． ダミーコーディングのcontr.treatment以外にも効果コーディングのcontr.sumがある．両者を比較してみたい．\n\n# データの作成\nx <- c(\"A\",\"B\",\"C\",\"D\",\"E\")\n# 確認\nx\n\n[1] \"A\" \"B\" \"C\" \"D\" \"E\"\n\n# 基準カテゴリが0となるような対比\ncontr.treatment(x)\n\n  B C D E\nA 0 0 0 0\nB 1 0 0 0\nC 0 1 0 0\nD 0 0 1 0\nE 0 0 0 1\n\n# 合計が0となるような対比\ncontr.sum(x)\n\n  [,1] [,2] [,3] [,4]\nA    1    0    0    0\nB    0    1    0    0\nC    0    0    1    0\nD    0    0    0    1\nE   -1   -1   -1   -1\n\n\n実際に回帰分析を例にcontr.treatmentとcontr.sumの違いを確認する．データはmpg（Fuel economy data from 1999 to 2008 for 38 popular models of cars）である．従属変数はhwy（highway miles per gallon）であり，独立変数はclass（“type” of car）とする．\n\n# class別のhwyの平均値\nmpg |> \n  dplyr::summarise(n = sum(!is.na(hwy)),\n                   Mean = mean(hwy, na.rm = TRUE),\n                   .by = class) |> \n  mutate(Diff_1 = Mean - Mean[class == \"2seater\"],\n         Diff_2 = Mean - mean(Mean))\n\n# A tibble: 7 × 5\n  class          n  Mean Diff_1 Diff_2\n  <chr>      <int> <dbl>  <dbl>  <dbl>\n1 compact       47  28.3   3.50   4.60\n2 midsize       41  27.3   2.49   3.59\n3 suv           62  18.1  -6.67  -5.57\n4 2seater        5  24.8   0      1.10\n5 minivan       11  22.4  -2.44  -1.34\n6 pickup        33  16.9  -7.92  -6.82\n7 subcompact    35  28.1   3.34   4.44\n\n\nまずダミーコーディング（dummy coding）の結果を確認する．\n\n# 回帰分析の例（contr.treatmentを使用）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\n# 回帰分析\nfit_ct <- lm(hwy ~ class, data = mpg)\n# 回帰分析の結果\nsummary(fit_ct)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       24.800      1.507  16.454  < 2e-16 ***\nclasscompact       3.498      1.585   2.206   0.0284 *  \nclassmidsize       2.493      1.596   1.561   0.1198    \nclassminivan      -2.436      1.818  -1.340   0.1815    \nclasspickup       -7.921      1.617  -4.898 1.84e-06 ***\nclasssubcompact    3.343      1.611   2.075   0.0391 *  \nclasssuv          -6.671      1.567  -4.258 3.03e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\n# モデルマトリックス\nmodel.matrix(fit_ct) |> unique()\n\n   (Intercept) classcompact classmidsize classminivan classpickup\n1            1            1            0            0           0\n16           1            0            1            0           0\n19           1            0            0            0           0\n24           1            0            0            0           0\n38           1            0            0            1           0\n49           1            0            0            0           1\n91           1            0            0            0           0\n   classsubcompact classsuv\n1                0        0\n16               0        0\n19               0        1\n24               0        0\n38               0        0\n49               0        0\n91               1        0\n\n\n出力される係数は6つである．classはfactorによって水準が設定されているわけではないので，2seaterが基準カテゴリとなっており，出力からは省略されている．つまり，2seaterの係数は0であり，(Intercept)の値は2seaterの平均値を示している．\n次に効果コーディングの結果を確認する．\n\n# 回帰分析の例（contr.sumを使用）\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.poly\"))\n# 回帰分析\nfit_cs <- lm(hwy ~ class, data = mpg)\n# 回帰分析の結果\nsummary(fit_cs)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  23.7007     0.3089  76.730  < 2e-16 ***\nclass1        1.0993     1.3108   0.839    0.403    \nclass2        4.5972     0.5177   8.880  < 2e-16 ***\nclass3        3.5920     0.5416   6.633 2.39e-10 ***\nclass4       -1.3371     0.9127  -1.465    0.144    \nclass5       -6.8219     0.5842 -11.678  < 2e-16 ***\nclass6        4.4422     0.5720   7.766 2.77e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\n# モデルマトリックス\nmodel.matrix(fit_cs) |> unique()\n\n   (Intercept) class1 class2 class3 class4 class5 class6\n1            1      0      1      0      0      0      0\n16           1      0      0      1      0      0      0\n19           1     -1     -1     -1     -1     -1     -1\n24           1      1      0      0      0      0      0\n38           1      0      0      0      1      0      0\n49           1      0      0      0      0      1      0\n91           1      0      0      0      0      0      1\n\n\nここでも出力される係数は6つであるが，ここでは最後のカテゴリが省略されている．しかし，最後のカテゴリであるclasssuvの係数は0ではない．すべての係数の和が0になるという制約を与えているので，classsuvの係数は他の係数の値の和を0から引いたものとなる．\n\n# classという文字が含まれる係数を取り出し，係数の番号を調べる（2から7）\npickCoef(fit_cs, \"class\")\n\nclass1 class2 class3 class4 class5 class6 \n     2      3      4      5      6      7 \n\n# 係数の2から7までを取り出し，その和を求める．\nfit_cs$coefficients[2:7] |> sum()\n\n[1] 5.571663\n\n# 和を0から引く\n0 - (fit_cs$coefficients[2:7] |> sum())\n\n[1] -5.571663\n\n\nしたがって，classsuvの係数は-5.571663となる．\ncontrastsの設定を変更して分析を終えたら必ずもとに戻しておく．\n\n# デフォルトに戻す\noptions(contrasts = c(factor = \"contr.treatment\", ordered = \"contr.poly\"))\n\nlmではモデルの中でcontrastsを指定することもできる．2つの方法で係数を比較してみる．\n\n# 回帰分析\nfit_cs2_1 <- lm(hwy ~ class, data = mpg)\n# 回帰分析の結果\nsummary(fit_cs2_1)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       24.800      1.507  16.454  < 2e-16 ***\nclasscompact       3.498      1.585   2.206   0.0284 *  \nclassmidsize       2.493      1.596   1.561   0.1198    \nclassminivan      -2.436      1.818  -1.340   0.1815    \nclasspickup       -7.921      1.617  -4.898 1.84e-06 ***\nclasssubcompact    3.343      1.611   2.075   0.0391 *  \nclasssuv          -6.671      1.567  -4.258 3.03e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16\n\n# 回帰分析\nfit_cs2_2 <- lm(hwy ~ class, data = mpg,\n              contrasts = list(class = \"contr.sum\"))\n# 回帰分析の結果\nsummary(fit_cs2_2)\n\n\nCall:\nlm(formula = hwy ~ class, data = mpg, contrasts = list(class = \"contr.sum\"))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.1429 -1.8788 -0.2927  1.1803 15.8571 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  23.7007     0.3089  76.730  < 2e-16 ***\nclass1        1.0993     1.3108   0.839    0.403    \nclass2        4.5972     0.5177   8.880  < 2e-16 ***\nclass3        3.5920     0.5416   6.633 2.39e-10 ***\nclass4       -1.3371     0.9127  -1.465    0.144    \nclass5       -6.8219     0.5842 -11.678  < 2e-16 ***\nclass6        4.4422     0.5720   7.766 2.77e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.37 on 227 degrees of freedom\nMultiple R-squared:  0.6879,    Adjusted R-squared:  0.6797 \nF-statistic: 83.39 on 6 and 227 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "3-Chapter_2.html#表2.1-p.8",
    "href": "3-Chapter_2.html#表2.1-p.8",
    "title": "2  第2章",
    "section": "2.2 表2.1 (p.8)",
    "text": "2.2 表2.1 (p.8)\nまずp.8の表2.1を再現する．クロス表に周辺度数を追加する場合は，addmarginsを用いる．\n\n# 度数\nFreq <- c( 40, 250,\n          160,3000)\nFreq\n\n[1]   40  250  160 3000\n\n\nベクトルを表にする．ここではas.tableでクラスをtableとしている．\n\n# 行列を作成し，表とする．\ntab_2.1 <- matrix(\n  Freq,\n  nrow = 2,\n  ncol = 2,\n  byrow = TRUE,\n  dimnames = c(list(\n    Member = c(\"Member\", \"Nonmember\"),\n    Position = c(\"Have subordinates\",\n            \"No subordinates\")\n  ))\n) |> as.table()\ntab_2.1\n\n           Position\nMember      Have subordinates No subordinates\n  Member                   40             250\n  Nonmember               160            3000\n\n\n周辺分布とモザイクプロットも確認する．\n\n# 周辺分布の表示\nMargins(tab_2.1)\n\n$Member\n       level   freq   perc  cumfreq  cumperc\n1     Member    290   8.4%      290     8.4%\n2  Nonmember  3'160  91.6%    3'450   100.0%\n\n$Position\n               level   freq   perc  cumfreq  cumperc\n1  Have subordinates    200   5.8%      200     5.8%\n2    No subordinates  3'250  94.2%    3'450   100.0%\n\n# モザイクプロット\nvcd::mosaic(tab_2.1, shade = TRUE, keep_aspect_ratio = FALSE)\n\n\n\n\n\n\n\n\n\n\nggplotでモザイクプロット\n\n\n\n図はすべてggplot()を使用して描きたいという場合は，ggmosaicパッケージを用いる． その前に集計データをvcdExtra::expand.dft()によって個票データに変換し，ggmosaic::geom_mosaicを使用する．\n\n# パッケージの呼び出し\nlibrary(ggmosaic)\n\n\nAttaching package: 'ggmosaic'\n\n\nThe following objects are masked from 'package:vcd':\n\n    mosaic, spine\n\nlibrary(vcdExtra)\n\n\nAttaching package: 'vcdExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    summarise\n\n# データの変換\ndf_tab_2.1 <- vcdExtra::expand.dft(data.frame(tab_2.1), dreq = \"Freq\") |> tibble()\ndf_tab_2.1\n\n# A tibble: 3,450 × 2\n   Member Position         \n   <chr>  <chr>            \n 1 Member Have subordinates\n 2 Member Have subordinates\n 3 Member Have subordinates\n 4 Member Have subordinates\n 5 Member Have subordinates\n 6 Member Have subordinates\n 7 Member Have subordinates\n 8 Member Have subordinates\n 9 Member Have subordinates\n10 Member Have subordinates\n# ℹ 3,440 more rows\n\n# ggplotでモザイクプロット\ndf_tab_2.1 |> \n  ggplot() + \n  ggmosaic::geom_mosaic(aes(x = product(Position, Member), fill = Position)) + \n  scale_fill_viridis_d() + \n  coord_flip()   # mosaicと表示をあわせる\n\nWarning: `unite_()` was deprecated in tidyr 1.2.0.\nℹ Please use `unite()` instead.\nℹ The deprecated feature was likely used in the ggmosaic package.\n  Please report the issue at <https://github.com/haleyjeppson/ggmosaic>.\n\n\n\n\n\n\n\n表にaddmargins()で周辺度数を追加する．\n\n# A. 度数（周辺度数の追加）\ntab_2.1 |> addmargins()\n\n           Position\nMember      Have subordinates No subordinates  Sum\n  Member                   40             250  290\n  Nonmember               160            3000 3160\n  Sum                     200            3250 3450\n\n\n表の数字を用いてオッズ比を計算する．\n\n# B. Odds \nx <- tab_2.1\nx[1,1]/x[1,2]\n\n[1] 0.16\n\nx[2,1]/x[2,2]\n\n[1] 0.05333333\n\n# C. Odds ratio\nOR <- (x[1,1]/x[1,2]) / (x[2,1]/x[2,2])\nOR\n\n[1] 3\n\n\n（対数）オッズ比の信頼区間をもとめる．\n\n# 対数オッズの標準誤差を求める\nSD <- sqrt(1/x[1,1] + 1/x[1,2] + 1/x[2,1] + 1/x[2,2]) \n# 対数オッズ比の信頼区間を求める\nCI_log_OR <- log(OR) + qnorm(c(0.025, 0.975)) * SD\nCI_log_OR\n\n[1] 0.7288936 1.4683310\n\n# オッズ比の信頼区間を求める\nexp(CI_log_OR)\n\n[1] 2.072786 4.341982\n\n\nDescToolsパッケージのOddsRatio関数を用いてオッズ比を求める．conf.level = 0.95とすることで信頼区間を求めることもできる． 先程計算したものと値が一致している．\n\nOddsRatio(tab_2.1, conf.level = 0.95)\n\nodds ratio     lwr.ci     upr.ci \n  3.000000   2.072786   4.341982 \n\n\n\n\n\n\n\n\n関数の中身を確認する．\n\n\n\nOddsRatio()がどのような処理をしているのかについてはOddsRatioと入力し，関数の中身をみることで確認できる． ただし，UseMethod(\"OddsRatio\")となっており，詳細が分からないことがある．その場合は，methods()を用いる． そして，OddsRatio.default*のように*がついているものについてDescTools:::OddsRatio.defaultのように入力することで中身を確認することができる．getAnywhere(OddsRatio.default)としてもよい．\n\nOddsRatio\nmethods(OddsRatio)\nDescTools:::OddsRatio.default\ngetAnywhere(OddsRatio.default)\n\n\n\nさらに詳細な結果をみたければDescToolsパッケージのDescを用いる．\n\nDesc(tab_2.1)\n\n------------------------------------------------------------------------------ \ntab_2.1 (table)\n\nSummary: \nn: 3'450, rows: 2, columns: 2\n\nPearson's Chi-squared test (cont. adj):\n  X-squared = 35.487, df = 1, p-value = 2.568e-09\nFisher's exact test p-value = 9.541e-08\nMcNemar's chi-squared = 19.32, df = 1, p-value = 1.106e-05\n\n                    estimate lwr.ci upr.ci'\n                                          \nodds ratio             3.000  2.073  4.342\nrel. risk (col1)       2.724  1.968  3.770\nrel. risk (col2)       0.908  0.867  0.951\n\n\nContingency Coeff.     0.103\nCramer's V             0.104\nKendall Tau-b          0.104\n\n                                                                 \n            Position   Have subordinates   No subordinates    Sum\nMember                                                           \n                                                                 \nMember      freq                      40               250    290\n            perc                    1.2%              7.2%   8.4%\n            p.row                  13.8%             86.2%      .\n            p.col                  20.0%              7.7%      .\n                                                                 \nNonmember   freq                     160             3'000  3'160\n            perc                    4.6%             87.0%  91.6%\n            p.row                   5.1%             94.9%      .\n            p.col                  80.0%             92.3%      .\n                                                                 \nSum         freq                     200             3'250  3'450\n            perc                    5.8%             94.2% 100.0%\n            p.row                      .                 .      .\n            p.col                      .                 .      .\n                                                                 \n\n----------\n' 95% conf. level\n\n\n\n\n\n次にセルの組み合わせを単位とした集計データを作成し，gnmを適用することでオッズ比を求めてみたい．gl()はn個の水準のある因子を作成する．kは各水準を何度繰り返すのかを指定する．lengthでベクトルの長さを設定することで，その長さになるまで因子の作成が繰り返される．\n\n# 度数のベクトル\nFreq\n\n[1]   40  250  160 3000\n\n# 行変数\nCOMM <- gl(n = 2, k = 2)\nCOMM\n\n[1] 1 1 2 2\nLevels: 1 2\n\n# 列変数\nSUP  <- gl(n = 2, k = 1, length = 4)\nSUP\n\n[1] 1 2 1 2\nLevels: 1 2\n\n# 度数，行変数，列変数からなるデータを作成\nfreq_tab_2.1 <- tibble(COMM, SUP, Freq)\n# データの確認\nfreq_tab_2.1\n\n# A tibble: 4 × 3\n  COMM  SUP    Freq\n  <fct> <fct> <dbl>\n1 1     1        40\n2 1     2       250\n3 2     1       160\n4 2     2      3000\n\n\n分析には通常はglmを用いるが，後の分析とあわせてgnmによって推定する．結果は異ならない．family = poissonという指定を忘れないようにすること．\n\n# gnmで推定\nfit <- freq_tab_2.1 |> \n  gnm(Freq ~ COMM + SUP + COMM:SUP, data = _, family = poisson)\n# 結果\nsummary(fit)\n\n\nCall:\ngnm(formula = Freq ~ COMM + SUP + COMM:SUP, family = poisson, \n    data = freq_tab_2.1)\n\nDeviance Residuals: \n[1]  0  0  0  0\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   3.6889     0.1581  23.331  < 2e-16 ***\nCOMM2         1.3863     0.1768   7.842  < 2e-16 ***\nSUP2          1.8326     0.1703  10.761  < 2e-16 ***\nCOMM2:SUP2    1.0986     0.1886   5.824 5.75e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: -5.3113e-13 on 0 degrees of freedom\nAIC: 37.649\n\nNumber of iterations: 2\n\n\nCOMM2:SUP2の係数は1.0986である．これは対数オッズなので，指数関数expを適用してオッズ比を求める．\n\n# Odds ratios fit$coefficientsのCOMM2:SUP2の要素のみを取り出し，指数関数expを適用\nfit$coefficients[\"COMM2:SUP2\"] |> exp()\n\nCOMM2:SUP2 \n         3 \n\nfit |> confint(\"COMM2:SUP2\") |> exp()\n\nWaiting for profiling to be done...\n\n\n   2.5 %   97.5 % \n2.049627 4.301359"
  },
  {
    "objectID": "3-Chapter_2.html#表2.3a-p.32",
    "href": "3-Chapter_2.html#表2.3a-p.32",
    "title": "2  第2章",
    "section": "2.3 表2.3A (p.32)",
    "text": "2.3 表2.3A (p.32)\nまずは表2.3Aを作成する．値をベクトルの形式で入力する．\n\nFreq <- c( 39, 50, 18,  4,\n          140,178, 85, 23,\n          108,195, 97, 23,\n          238,598,363,111,\n           78,250,150, 55,\n           50,200,208, 74,\n            8, 29, 46, 21)\n\nベクトルのデータをmatrixで行列にし，最終的にはas.tableでtable形式にする．\n\n# データを表形式に変換\ntab_2.3A <- matrix(\n  Freq,\n  nrow = 7,\n  ncol = 4,\n  byrow = TRUE,\n  dimnames = c(list(\n    polviews =  c(\n      \"Strongly liberal\",\n      \"Liberal\",\n      \"Slightly liberal\",\n      \"Moderate\",\n      \"Slightly conservative\",\n      \"Conservative\",\n      \"Strongly conservative\"),\n    fefam = c(\"Strongly Disagree\",\n                               \"Disagree\",\n                               \"Agree\",\n                               \"Strongly agree\")\n  ))) |> as.table()\ntab_2.3A\n\n                       fefam\npolviews                Strongly Disagree Disagree Agree Strongly agree\n  Strongly liberal                     39       50    18              4\n  Liberal                             140      178    85             23\n  Slightly liberal                    108      195    97             23\n  Moderate                            238      598   363            111\n  Slightly conservative                78      250   150             55\n  Conservative                         50      200   208             74\n  Strongly conservative                 8       29    46             21\n\n\n\n# 度数，行変数，列変数からなる集計データを作成\npolviews <- gl(n = 7, k = 4)   # 1-7までの各数字について4つ値を出す\nfefam <- gl(n = 4, k = 1, length = 28)   # 1-4までの数字の列を長さが28になるまで繰り返す\nfreq_tab_2.3A <- tibble(Freq, polviews, fefam)\nfreq_tab_2.3A\n\n# A tibble: 28 × 3\n    Freq polviews fefam\n   <dbl> <fct>    <fct>\n 1    39 1        1    \n 2    50 1        2    \n 3    18 1        3    \n 4     4 1        4    \n 5   140 2        1    \n 6   178 2        2    \n 7    85 2        3    \n 8    23 2        4    \n 9   108 3        1    \n10   195 3        2    \n# ℹ 18 more rows\n\n\n\nなおtab_2.3Aに対して，data.frameを適用しても集計データは作成される．tableの行変数と列変数が指定されていないと，行変数はVar1，列変数はVar2となるので，必要に応じて名前をrenameで修正する ．\n\n\ndata.frame(tab_2.3A) |> \n  tibble()\n\n# A tibble: 28 × 3\n   polviews              fefam              Freq\n   <fct>                 <fct>             <dbl>\n 1 Strongly liberal      Strongly Disagree    39\n 2 Liberal               Strongly Disagree   140\n 3 Slightly liberal      Strongly Disagree   108\n 4 Moderate              Strongly Disagree   238\n 5 Slightly conservative Strongly Disagree    78\n 6 Conservative          Strongly Disagree    50\n 7 Strongly conservative Strongly Disagree     8\n 8 Strongly liberal      Disagree             50\n 9 Liberal               Disagree            178\n10 Slightly liberal      Disagree            195\n# ℹ 18 more rows\n\n\n以下では複数のモデルの適合度を比較する．そこで，モデル適合度を表示するための関数を作成する．モデルはすべてgnmによって推定されることを前提としている．glmの場合はエラーが出るので注意すること．\n\n# 引数となるobjはgnmの結果\nmodel.summary <- function(obj, Model = NULL){\n  if (sum(class(obj) == \"gnm\") != 1)\n    stop(\"estimate with gnm\")\n  aic <- obj$deviance - obj$df * 2 # AIC(L2)\n  bic <- obj$deviance - obj$df * log(sum(obj$y)) #BIC(L2)\n  delta <- 100 * sum(abs(obj$y - obj$fitted.values)) / (2 * sum(obj$y))\n  p <- pchisq(obj$deviance, obj$df, lower.tail = FALSE)     #p<-ifelse(p<0.001,\"<0.001\",p)\n  result <- matrix(0, 1, 7)\n  if (is.null(Model)){ \n  Model <- deparse(substitute(obj))\n  }\n  result <- tibble(\n    \"Model Description\" = Model,\n    \"df\" = obj$df,\n    \"L2\" = obj$deviance,\n    #\"AIC(L2)\" = aic,\n    \"BIC\" = bic,\n    \"Delta\" = delta,\n    \"p\" = p\n  )\n  return(result)\n  }\n\nコントラストがデフォルトのfactor = \"contr.treatment\"とordered = \"contr.poly\"になっているのかを確認する．\n\n# デフォルトのcontrasts\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n\"contr.treatment\"      \"contr.poly\" \n\n# defaultのcontrastsの設定（ここでは特に意味はない．constrastをいじった後にデフォルトに戻す）\noptions(contrasts = c(factor = \"contr.treatment\", \n                      ordered = \"contr.poly\"))\n\n行スコアと列スコアを用いるので，まずas.integerを用いて行スコア（Rscore）と列スコア（Cscore）の変数を作成する．\n\n# 行変数と列変数の整数値を作成\nfreq_tab_2.3A <- freq_tab_2.3A |> \n  mutate(Rscore = as.integer(polviews),\n         Cscore = as.integer(fefam))\nfreq_tab_2.3A\n\n# A tibble: 28 × 5\n    Freq polviews fefam Rscore Cscore\n   <dbl> <fct>    <fct>  <int>  <int>\n 1    39 1        1          1      1\n 2    50 1        2          1      2\n 3    18 1        3          1      3\n 4     4 1        4          1      4\n 5   140 2        1          2      1\n 6   178 2        2          2      2\n 7    85 2        3          2      3\n 8    23 2        4          2      4\n 9   108 3        1          3      1\n10   195 3        2          3      2\n# ℹ 18 more rows\n\n\n\n2.3.1 独立モデル\n独立モデルは次のようになる．\n\n#  1. O: Independence/Null Association Model\nO <- freq_tab_2.3A |>\n  gnm(Freq ~ polviews + fefam,\n      family = poisson,\n      data = _,\n      tolerance = 1e-12\n      )\n# 結果\nsummary(O)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam, family = poisson, data = freq_tab_2.3A, \n    tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-5.7415  -2.5344  -0.4283   1.5557   5.8265  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  3.06035    0.10115  30.256  < 2e-16 ***\npolviews2    1.34491    0.10657  12.620  < 2e-16 ***\npolviews3    1.33784    0.10664  12.545  < 2e-16 ***\npolviews4    2.46825    0.09886  24.968  < 2e-16 ***\npolviews5    1.56899    0.10433  15.038  < 2e-16 ***\npolviews6    1.56711    0.10435  15.018  < 2e-16 ***\npolviews7   -0.06514    0.13647  -0.477    0.633    \nfefam2       0.81947    0.04669  17.553  < 2e-16 ***\nfefam3       0.38044    0.05047   7.538 4.76e-14 ***\nfefam4      -0.75396    0.06876 -10.965  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 211.7 on 18 degrees of freedom\nAIC: 403.05\n\nNumber of iterations: 5\n\n\n先ほど作成した適合度の関数を用いる．2つめの引数はモデルの名前の詳細を記述可能だが，これは省略してもよい．\n\n# モデル適合度\nmodel.summary(O, \"O:Independent\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta        p\n  <chr>               <int> <dbl> <dbl> <dbl>    <dbl>\n1 O:Independent          18  212.  65.1  8.09 4.54e-35\n\n\nテキストの表2.4と同じ結果になっているのかを確認してみる．\n\n\n2.3.2 一様連関モデル\n一様連関モデルでは先ほど作成した行変数と列変数の整数スコアの積であるRscore:Cscoreを加える．Rscore*CscoreあるいはI(Rscore*Cscore)でもよい．\n\n# 2. U: Uniform Association Model\nU <- freq_tab_2.3A |>\n  gnm(Freq ~ polviews + fefam + Rscore:Cscore,\n    family = poisson,\n    data = _,\n    tolerance = 1e-12)\n\n\n# 結果\nsummary(U)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.62563  -0.41050  -0.06989   0.53746   1.67998  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    3.47979    0.10109  34.422  < 2e-16 ***\npolviews2      0.95906    0.10934   8.771  < 2e-16 ***\npolviews3      0.53993    0.11884   4.543 5.54e-06 ***\npolviews4      1.23013    0.12993   9.468  < 2e-16 ***\npolviews5     -0.13911    0.15936  -0.873 0.382733    \npolviews6     -0.64184    0.19196  -3.344 0.000827 ***\npolviews7     -2.80636    0.24740 -11.344  < 2e-16 ***\nfefam2         0.05148    0.07139   0.721 0.470857    \nfefam3        -1.23188    0.12922  -9.533  < 2e-16 ***\nfefam4        -3.28436    0.20609 -15.936  < 2e-16 ***\nRscore:Cscore  0.20211    0.01520  13.299  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nResidual deviance: 20.125 on 17 degrees of freedom\nAIC: 213.48\n\nNumber of iterations: 4\n\n\n表2.4Aと同じ結果になっているのかを確認する．\n\n# モデル適合度\nmodel.summary(U, \"U:Uniform\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 U:Uniform              17  20.1 -118.  2.77 0.268\n\n\nモデル行列を確認するのもよいだろう．\n\n# model.matrixを適用し，ユニークな値だけを表示\nmodel.matrix(U) |> unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Rscore:Cscore\n1       0      0      0             1\n2       1      0      0             2\n3       0      1      0             3\n4       0      0      1             4\n5       0      0      0             2\n6       1      0      0             4\n7       0      1      0             6\n8       0      0      1             8\n9       0      0      0             3\n10      1      0      0             6\n11      0      1      0             9\n12      0      0      1            12\n13      0      0      0             4\n14      1      0      0             8\n15      0      1      0            12\n16      0      0      1            16\n17      0      0      0             5\n18      1      0      0            10\n19      0      1      0            15\n20      0      0      1            20\n21      0      0      0             6\n22      1      0      0            12\n23      0      1      0            18\n24      0      0      1            24\n25      0      0      0             7\n26      1      0      0            14\n27      0      1      0            21\n28      0      0      1            28\n\n\n\n\n2.3.3 行効果モデル\ncontrastを修正し，polviewsの係数のすべてを足すと0になるように効果コーディングを行ってる．なお行変数と列スコアの積についてはCscore*polviewsとし，Cscore:polviewsとしない．\n\n# 3. R: Row Effect Model\n# contrastを修正している．\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.treatment\"))\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n      \"contr.sum\" \"contr.treatment\" \n\nR <- freq_tab_2.3A |>\n  gnm(Freq ~ polviews + fefam + Cscore*polviews, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n# 結果\nsummary(R)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Cscore * polviews, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.5962  -0.4603   0.0477   0.3840   1.5700  \n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       4.262045   0.029618 143.902  < 2e-16 ***\npolviews1         0.040378   0.222896   0.181   0.8562    \npolviews2         1.088684   0.130977   8.312  < 2e-16 ***\npolviews3         0.763635   0.132427   5.766 8.09e-09 ***\npolviews4         1.335170   0.096565  13.827  < 2e-16 ***\npolviews5         0.197587   0.127059   1.555   0.1199    \npolviews6        -0.558409   0.134998  -4.136 3.53e-05 ***\nfefam1           -0.112887   0.046238  -2.441   0.0146 *  \nfefam2            0.758505   0.030086  25.211  < 2e-16 ***\nfefam3            0.295555   0.032630   9.058  < 2e-16 ***\nCscore            0.000000         NA      NA       NA    \npolviews1:Cscore -0.558727   0.107668  -5.189 2.11e-07 ***\npolviews2:Cscore -0.405076   0.059149  -6.848 7.47e-12 ***\npolviews3:Cscore -0.248459   0.057741  -4.303 1.69e-05 ***\npolviews4:Cscore  0.008764   0.039709   0.221   0.8253    \npolviews5:Cscore  0.112245   0.051284   2.189   0.0286 *  \npolviews6:Cscore  0.419079   0.051434   8.148  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 15.906 on 12 degrees of freedom\nAIC: 219.26\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(R, \"R:Row effect\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 R:Row effect           12  15.9 -81.8  2.47 0.196\n\n# モデル行列の確認\nmodel.matrix(R) |> unique()\n\n   (Intercept) polviews1 polviews2 polviews3 polviews4 polviews5 polviews6\n1            1         1         0         0         0         0         0\n2            1         1         0         0         0         0         0\n3            1         1         0         0         0         0         0\n4            1         1         0         0         0         0         0\n5            1         0         1         0         0         0         0\n6            1         0         1         0         0         0         0\n7            1         0         1         0         0         0         0\n8            1         0         1         0         0         0         0\n9            1         0         0         1         0         0         0\n10           1         0         0         1         0         0         0\n11           1         0         0         1         0         0         0\n12           1         0         0         1         0         0         0\n13           1         0         0         0         1         0         0\n14           1         0         0         0         1         0         0\n15           1         0         0         0         1         0         0\n16           1         0         0         0         1         0         0\n17           1         0         0         0         0         1         0\n18           1         0         0         0         0         1         0\n19           1         0         0         0         0         1         0\n20           1         0         0         0         0         1         0\n21           1         0         0         0         0         0         1\n22           1         0         0         0         0         0         1\n23           1         0         0         0         0         0         1\n24           1         0         0         0         0         0         1\n25           1        -1        -1        -1        -1        -1        -1\n26           1        -1        -1        -1        -1        -1        -1\n27           1        -1        -1        -1        -1        -1        -1\n28           1        -1        -1        -1        -1        -1        -1\n   fefam1 fefam2 fefam3 Cscore polviews1:Cscore polviews2:Cscore\n1       1      0      0      1                1                0\n2       0      1      0      2                2                0\n3       0      0      1      3                3                0\n4      -1     -1     -1      4                4                0\n5       1      0      0      1                0                1\n6       0      1      0      2                0                2\n7       0      0      1      3                0                3\n8      -1     -1     -1      4                0                4\n9       1      0      0      1                0                0\n10      0      1      0      2                0                0\n11      0      0      1      3                0                0\n12     -1     -1     -1      4                0                0\n13      1      0      0      1                0                0\n14      0      1      0      2                0                0\n15      0      0      1      3                0                0\n16     -1     -1     -1      4                0                0\n17      1      0      0      1                0                0\n18      0      1      0      2                0                0\n19      0      0      1      3                0                0\n20     -1     -1     -1      4                0                0\n21      1      0      0      1                0                0\n22      0      1      0      2                0                0\n23      0      0      1      3                0                0\n24     -1     -1     -1      4                0                0\n25      1      0      0      1               -1               -1\n26      0      1      0      2               -2               -2\n27      0      0      1      3               -3               -3\n28     -1     -1     -1      4               -4               -4\n   polviews3:Cscore polviews4:Cscore polviews5:Cscore polviews6:Cscore\n1                 0                0                0                0\n2                 0                0                0                0\n3                 0                0                0                0\n4                 0                0                0                0\n5                 0                0                0                0\n6                 0                0                0                0\n7                 0                0                0                0\n8                 0                0                0                0\n9                 1                0                0                0\n10                2                0                0                0\n11                3                0                0                0\n12                4                0                0                0\n13                0                1                0                0\n14                0                2                0                0\n15                0                3                0                0\n16                0                4                0                0\n17                0                0                1                0\n18                0                0                2                0\n19                0                0                3                0\n20                0                0                4                0\n21                0                0                0                1\n22                0                0                0                2\n23                0                0                0                3\n24                0                0                0                4\n25               -1               -1               -1               -1\n26               -2               -2               -2               -2\n27               -3               -3               -3               -3\n28               -4               -4               -4               -4\n\n\n表2.4の適合度を確認しよう．また，パラメータ推定値については，表2.5のBから確認する． Rの結果では，polviews1からpolviews6までの結果が表示されているが，polviews7は示されていない．パラメータのすべての値を足すと0となることから(\\(\\sum \\tau_i^A=0\\))，polviews7の係数は0-(-0.6721737)=0.6721737となる．これをRで計算するためには係数を取り出し，それらを足したものを0から引けばよい．\n\n# R\n# 取り出す係数を探す\npickCoef(R, \":Cscore\")\n\npolviews1:Cscore polviews2:Cscore polviews3:Cscore polviews4:Cscore \n              12               13               14               15 \npolviews5:Cscore polviews6:Cscore \n              16               17 \n\n# 12から17番目の係数を取り出し，足す\nR$coefficients[12:17] |> sum()\n\n[1] -0.6721737\n\n# 0から足したものを引く\n0 - (R$coefficients[12:17] |> sum())\n\n[1] 0.6721737\n\n\ncontrastsをもとに戻して同様の分析を行う． 今度はpolviews1:Cscoreの係数が省略されているが，この値は0である（\\(\\tau_1^A=0\\)）．\n\n# alternative (default)\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\nRalt <- freq_tab_2.3A |>\n  gnm(Freq ~ polviews + fefam + Cscore*polviews, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\n結果は表2.5Bの「他の正規化」の行を確認して欲しい．\n\n# 結果\nsummary(Ralt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Cscore * polviews, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.5962  -0.4603   0.0477   0.3840   1.5700  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        3.6308     0.1443  25.160  < 2e-16 ***\npolviews2          1.0483     0.2801   3.742 0.000182 ***\npolviews3          0.7233     0.2818   2.567 0.010258 *  \npolviews4          1.2948     0.2617   4.947 7.52e-07 ***\npolviews5          0.1572     0.2798   0.562 0.574154    \npolviews6         -0.5988     0.2859  -2.094 0.036244 *  \npolviews7         -2.9074     0.4145  -7.015 2.30e-12 ***\nfefam2             0.3127     0.1265   2.471 0.013455 *  \nfefam3            -0.7090     0.2447  -2.897 0.003763 ** \nfefam4            -2.5045     0.3703  -6.763 1.36e-11 ***\nCscore             0.0000         NA      NA       NA    \npolviews2:Cscore   0.1537     0.1362   1.128 0.259246    \npolviews3:Cscore   0.3103     0.1357   2.287 0.022191 *  \npolviews4:Cscore   0.5675     0.1268   4.477 7.58e-06 ***\npolviews5:Cscore   0.6710     0.1326   5.059 4.21e-07 ***\npolviews6:Cscore   0.9778     0.1331   7.346 2.04e-13 ***\npolviews7:Cscore   1.2309     0.1678   7.335 2.22e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 15.906 on 12 degrees of freedom\nAIC: 219.26\n\nNumber of iterations: 4\n\n\nモデルの適合度は全く同じであることがわかる．\n\n# モデル適合度\nmodel.summary(R, \"R: Row effect (effect coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`              df    L2   BIC Delta     p\n  <chr>                         <int> <dbl> <dbl> <dbl> <dbl>\n1 R: Row effect (effect coding)    12  15.9 -81.8  2.47 0.196\n\nmodel.summary(Ralt, \"R: Row effect (dummy coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`             df    L2   BIC Delta     p\n  <chr>                        <int> <dbl> <dbl> <dbl> <dbl>\n1 R: Row effect (dummy coding)    12  15.9 -81.8  2.47 0.196\n\n\n\n# モデル行列の確認\nmodel.matrix(Ralt) |> unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Cscore polviews2:Cscore polviews3:Cscore\n1       0      0      0      1                0                0\n2       1      0      0      2                0                0\n3       0      1      0      3                0                0\n4       0      0      1      4                0                0\n5       0      0      0      1                1                0\n6       1      0      0      2                2                0\n7       0      1      0      3                3                0\n8       0      0      1      4                4                0\n9       0      0      0      1                0                1\n10      1      0      0      2                0                2\n11      0      1      0      3                0                3\n12      0      0      1      4                0                4\n13      0      0      0      1                0                0\n14      1      0      0      2                0                0\n15      0      1      0      3                0                0\n16      0      0      1      4                0                0\n17      0      0      0      1                0                0\n18      1      0      0      2                0                0\n19      0      1      0      3                0                0\n20      0      0      1      4                0                0\n21      0      0      0      1                0                0\n22      1      0      0      2                0                0\n23      0      1      0      3                0                0\n24      0      0      1      4                0                0\n25      0      0      0      1                0                0\n26      1      0      0      2                0                0\n27      0      1      0      3                0                0\n28      0      0      1      4                0                0\n   polviews4:Cscore polviews5:Cscore polviews6:Cscore polviews7:Cscore\n1                 0                0                0                0\n2                 0                0                0                0\n3                 0                0                0                0\n4                 0                0                0                0\n5                 0                0                0                0\n6                 0                0                0                0\n7                 0                0                0                0\n8                 0                0                0                0\n9                 0                0                0                0\n10                0                0                0                0\n11                0                0                0                0\n12                0                0                0                0\n13                1                0                0                0\n14                2                0                0                0\n15                3                0                0                0\n16                4                0                0                0\n17                0                1                0                0\n18                0                2                0                0\n19                0                3                0                0\n20                0                4                0                0\n21                0                0                1                0\n22                0                0                2                0\n23                0                0                3                0\n24                0                0                4                0\n25                0                0                0                1\n26                0                0                0                2\n27                0                0                0                3\n28                0                0                0                4"
  },
  {
    "objectID": "3-Chapter_2.html#列効果モデル",
    "href": "3-Chapter_2.html#列効果モデル",
    "title": "2  第2章",
    "section": "2.4 列効果モデル",
    "text": "2.4 列効果モデル\n列効果モデルは行効果モデルと同様の方法で推定すればよい．まずは効果コーディングで推定し，その後にダミーコーディングで推定する．\n\n# 4. C: Column Effect Model\n# contrast\noptions(contrasts = c(factor = \"contr.sum\", \n                      ordered = \"contr.treatment\"))\nC <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Rscore*fefam, family = poisson, \n      data = _, \n      tolerance = 1e-12)\n# 結果\nsummary(C)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore * fefam, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7572  -0.4920   0.1628   0.4922   1.4247  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    4.26735    0.02842 150.161  < 2e-16 ***\npolviews1     -1.34764    0.08885 -15.167  < 2e-16 ***\npolviews2      0.10725    0.05058   2.120 0.033978 *  \npolviews3      0.17817    0.04852   3.672 0.000241 ***\npolviews4      1.35465    0.03449  39.280  < 2e-16 ***\npolviews5      0.47060    0.04547  10.349  < 2e-16 ***\npolviews6      0.45489    0.04714   9.650  < 2e-16 ***\nfefam1         1.16938    0.10545  11.089  < 2e-16 ***\nfefam2         1.01794    0.08835  11.521  < 2e-16 ***\nfefam3        -0.27421    0.10365  -2.646 0.008155 ** \nRscore         0.00000         NA      NA       NA    \nfefam1:Rscore -0.32183    0.02601 -12.373  < 2e-16 ***\nfefam2:Rscore -0.06518    0.02013  -3.238 0.001203 ** \nfefam3:Rscore  0.13740    0.02282   6.021 1.73e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 14.237 on 15 degrees of freedom\nAIC: 211.59\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(C, \"C:Column effect\")\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect        15  14.2 -108.  2.32 0.508\n\n# モデル行列の確認\nmodel.matrix(C) |> unique()\n\n   (Intercept) polviews1 polviews2 polviews3 polviews4 polviews5 polviews6\n1            1         1         0         0         0         0         0\n2            1         1         0         0         0         0         0\n3            1         1         0         0         0         0         0\n4            1         1         0         0         0         0         0\n5            1         0         1         0         0         0         0\n6            1         0         1         0         0         0         0\n7            1         0         1         0         0         0         0\n8            1         0         1         0         0         0         0\n9            1         0         0         1         0         0         0\n10           1         0         0         1         0         0         0\n11           1         0         0         1         0         0         0\n12           1         0         0         1         0         0         0\n13           1         0         0         0         1         0         0\n14           1         0         0         0         1         0         0\n15           1         0         0         0         1         0         0\n16           1         0         0         0         1         0         0\n17           1         0         0         0         0         1         0\n18           1         0         0         0         0         1         0\n19           1         0         0         0         0         1         0\n20           1         0         0         0         0         1         0\n21           1         0         0         0         0         0         1\n22           1         0         0         0         0         0         1\n23           1         0         0         0         0         0         1\n24           1         0         0         0         0         0         1\n25           1        -1        -1        -1        -1        -1        -1\n26           1        -1        -1        -1        -1        -1        -1\n27           1        -1        -1        -1        -1        -1        -1\n28           1        -1        -1        -1        -1        -1        -1\n   fefam1 fefam2 fefam3 Rscore fefam1:Rscore fefam2:Rscore fefam3:Rscore\n1       1      0      0      1             1             0             0\n2       0      1      0      1             0             1             0\n3       0      0      1      1             0             0             1\n4      -1     -1     -1      1            -1            -1            -1\n5       1      0      0      2             2             0             0\n6       0      1      0      2             0             2             0\n7       0      0      1      2             0             0             2\n8      -1     -1     -1      2            -2            -2            -2\n9       1      0      0      3             3             0             0\n10      0      1      0      3             0             3             0\n11      0      0      1      3             0             0             3\n12     -1     -1     -1      3            -3            -3            -3\n13      1      0      0      4             4             0             0\n14      0      1      0      4             0             4             0\n15      0      0      1      4             0             0             4\n16     -1     -1     -1      4            -4            -4            -4\n17      1      0      0      5             5             0             0\n18      0      1      0      5             0             5             0\n19      0      0      1      5             0             0             5\n20     -1     -1     -1      5            -5            -5            -5\n21      1      0      0      6             6             0             0\n22      0      1      0      6             0             6             0\n23      0      0      1      6             0             0             6\n24     -1     -1     -1      6            -6            -6            -6\n25      1      0      0      7             7             0             0\n26      0      1      0      7             0             7             0\n27      0      0      1      7             0             0             7\n28     -1     -1     -1      7            -7            -7            -7\n\n\nすべてを足すと0となることから(\\(\\sum \\tau_j^B=0\\))，polviews7の係数は0-(-0.2496118)=0.2496118となる\n\npickCoef(C, \":Rscore\")\n\nfefam1:Rscore fefam2:Rscore fefam3:Rscore \n           12            13            14 \n\nC$coefficients[12:14] |> sum()\n\n[1] -0.2496118\n\n0 - (C$coefficients[12:14] |> sum())\n\n[1] 0.2496118\n\n\n以下はダミーコーディングを用いている．\n\n# alternative (default)\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\nCalt <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Rscore*fefam, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\n推定値は表2.5Cを確認せよ．\n\n# 結果\nsummary(Calt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore * fefam, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7572  -0.4920   0.1628   0.4922   1.4247  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    3.76726    0.11222  33.571  < 2e-16 ***\npolviews2      1.13306    0.10785  10.506  < 2e-16 ***\npolviews3      0.88215    0.11310   7.800  < 2e-16 ***\npolviews4      1.73680    0.11708  14.834  < 2e-16 ***\npolviews5      0.53092    0.13848   3.834 0.000126 ***\npolviews6      0.19337    0.16048   1.205 0.228239    \npolviews7     -1.80128    0.20632  -8.730  < 2e-16 ***\nfefam2        -0.15144    0.13618  -1.112 0.266095    \nfefam3        -1.44359    0.15929  -9.063  < 2e-16 ***\nfefam4        -3.08249    0.23741 -12.984  < 2e-16 ***\nRscore         0.00000         NA      NA       NA    \nfefam2:Rscore  0.25665    0.03459   7.421 1.17e-13 ***\nfefam3:Rscore  0.45924    0.03851  11.926  < 2e-16 ***\nfefam4:Rscore  0.57144    0.05297  10.788  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 14.237 on 15 degrees of freedom\nAIC: 211.59\n\nNumber of iterations: 4\n\n\n適合度は効果コーディングとダミーコーディングで変化しない．\n\n# モデル適合度\nmodel.summary(C, \"C:Column effect (effect coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`                df    L2   BIC Delta     p\n  <chr>                           <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect (effect coding)    15  14.2 -108.  2.32 0.508\n\nmodel.summary(Calt, \"C:Column effect (dummy coding)\")\n\n# A tibble: 1 × 6\n  `Model Description`               df    L2   BIC Delta     p\n  <chr>                          <int> <dbl> <dbl> <dbl> <dbl>\n1 C:Column effect (dummy coding)    15  14.2 -108.  2.32 0.508\n\n\n\n# モデル行列の確認\nmodel.matrix(Calt) |> unique()\n\n   (Intercept) polviews2 polviews3 polviews4 polviews5 polviews6 polviews7\n1            1         0         0         0         0         0         0\n2            1         0         0         0         0         0         0\n3            1         0         0         0         0         0         0\n4            1         0         0         0         0         0         0\n5            1         1         0         0         0         0         0\n6            1         1         0         0         0         0         0\n7            1         1         0         0         0         0         0\n8            1         1         0         0         0         0         0\n9            1         0         1         0         0         0         0\n10           1         0         1         0         0         0         0\n11           1         0         1         0         0         0         0\n12           1         0         1         0         0         0         0\n13           1         0         0         1         0         0         0\n14           1         0         0         1         0         0         0\n15           1         0         0         1         0         0         0\n16           1         0         0         1         0         0         0\n17           1         0         0         0         1         0         0\n18           1         0         0         0         1         0         0\n19           1         0         0         0         1         0         0\n20           1         0         0         0         1         0         0\n21           1         0         0         0         0         1         0\n22           1         0         0         0         0         1         0\n23           1         0         0         0         0         1         0\n24           1         0         0         0         0         1         0\n25           1         0         0         0         0         0         1\n26           1         0         0         0         0         0         1\n27           1         0         0         0         0         0         1\n28           1         0         0         0         0         0         1\n   fefam2 fefam3 fefam4 Rscore fefam2:Rscore fefam3:Rscore fefam4:Rscore\n1       0      0      0      1             0             0             0\n2       1      0      0      1             1             0             0\n3       0      1      0      1             0             1             0\n4       0      0      1      1             0             0             1\n5       0      0      0      2             0             0             0\n6       1      0      0      2             2             0             0\n7       0      1      0      2             0             2             0\n8       0      0      1      2             0             0             2\n9       0      0      0      3             0             0             0\n10      1      0      0      3             3             0             0\n11      0      1      0      3             0             3             0\n12      0      0      1      3             0             0             3\n13      0      0      0      4             0             0             0\n14      1      0      0      4             4             0             0\n15      0      1      0      4             0             4             0\n16      0      0      1      4             0             0             4\n17      0      0      0      5             0             0             0\n18      1      0      0      5             5             0             0\n19      0      1      0      5             0             5             0\n20      0      0      1      5             0             0             5\n21      0      0      0      6             0             0             0\n22      1      0      0      6             6             0             0\n23      0      1      0      6             0             6             0\n24      0      0      1      6             0             0             6\n25      0      0      0      7             0             0             0\n26      1      0      0      7             7             0             0\n27      0      1      0      7             0             7             0\n28      0      0      1      7             0             0             7"
  },
  {
    "objectID": "3-Chapter_2.html#行列効果モデルrc",
    "href": "3-Chapter_2.html#行列効果モデルrc",
    "title": "2  第2章",
    "section": "2.5 行・列効果モデル（\\(R+C\\)）",
    "text": "2.5 行・列効果モデル（\\(R+C\\)）\n\n# コントラスト\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.treatment\"))\n\n# 5. R+C: Row and Column Effect Model\n# 収束しない\nRplusCno <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\n係数を確認する．この場合，制約は3つ必要であるが2つしかNAとなっていない．テキストや表2.5Dを参照し，どのような制約を課すのかをきめる．ここでは表2.5Dのような制約を課す．\n\nRplusCno\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    family = poisson, data = freq_tab_2.3A, tolerance = 1e-12)\n\nCoefficients:\n     (Intercept)         polviews2         polviews3         polviews4  \n          4.5899            1.4543            1.5167            2.4534  \n       polviews5         polviews6         polviews7            fefam2  \n          1.6458            1.1561           -0.9443            0.6009  \n          fefam3            fefam4  polviews1:Cscore  polviews2:Cscore  \n          0.1389           -0.6167           -0.6101           -0.5942  \npolviews3:Cscore  polviews4:Cscore  polviews5:Cscore  polviews6:Cscore  \n         -0.5660           -0.4267           -0.4258           -0.1962  \npolviews7:Cscore     fefam1:Rscore     fefam2:Rscore     fefam3:Rscore  \n              NA           -0.2808           -0.1031                NA  \n   fefam4:Rscore  \n              NA  \n\nDeviance:            7.678265 \nPearson chi-squared: 7.790921 \nResidual df:         10 \n\npickCoef(RplusCno, \":Cscore\")  # 行効果\n\npolviews1:Cscore polviews2:Cscore polviews3:Cscore polviews4:Cscore \n              11               12               13               14 \npolviews5:Cscore polviews6:Cscore polviews7:Cscore \n              15               16               17 \n\npickCoef(RplusCno, \":Rscore\")  # 列効果\n\nfefam1:Rscore fefam2:Rscore fefam3:Rscore fefam4:Rscore \n           18            19            20            21 \n\n\nあるいは次のように一覧にしてもよい．\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(RplusCno$coefficients),\n           estimate = RplusCno$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n\n                              var   estimate number\n(Intercept)           (Intercept)  4.5899015      1\npolviews2               polviews2  1.4543053      2\npolviews3               polviews3  1.5166866      3\npolviews4               polviews4  2.4534277      4\npolviews5               polviews5  1.6457919      5\npolviews6               polviews6  1.1561295      6\npolviews7               polviews7 -0.9442830      7\nfefam2                     fefam2  0.6009497      8\nfefam3                     fefam3  0.1389105      9\nfefam4                     fefam4 -0.6166671     10\npolviews1:Cscore polviews1:Cscore -0.6101464     11\npolviews2:Cscore polviews2:Cscore -0.5942374     12\npolviews3:Cscore polviews3:Cscore -0.5659952     13\npolviews4:Cscore polviews4:Cscore -0.4267150     14\npolviews5:Cscore polviews5:Cscore -0.4258108     15\npolviews6:Cscore polviews6:Cscore -0.1962125     16\npolviews7:Cscore polviews7:Cscore         NA     17\nfefam1:Rscore       fefam1:Rscore -0.2807905     18\nfefam2:Rscore       fefam2:Rscore -0.1031243     19\nfefam3:Rscore       fefam3:Rscore         NA     20\nfefam4:Rscore       fefam4:Rscore         NA     21\n\n\n制約を課すのは11番目，17番目，18番目の係数であり，これらを0にする．対象となる係数はconstrain = c(11,17,18)で指定し，制約はconstrainTo = c(0, 0, 0)とする．あとは同じである．\n\n# polviews1:Cscore(11) = polviews7:Cscore(17) = fefam1:Rscore(18) = 0\nRplusC <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      constrain = c(11, 17, 18), \n      constrainTo = c(0, 0, 0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n# 結果\nsummary(RplusC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    constrain = c(11, 17, 18), constrainTo = c(0, 0, 0), family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.69896    0.14301  25.866  < 2e-16 ***\npolviews2         1.27521    0.25278   5.045 4.54e-07 ***\npolviews3         1.15849    0.24328   4.762 1.92e-06 ***\npolviews4         1.91613    0.21048   9.104  < 2e-16 ***\npolviews5         0.92939    0.22891   4.060 4.91e-05 ***\npolviews6         0.26063    0.24331   1.071   0.2841    \npolviews7        -2.01888    0.30512  -6.617 3.67e-11 ***\nfefam2           -0.11089    0.17635  -0.629   0.5295    \nfefam3           -1.28476    0.28350  -4.532 5.85e-06 ***\nfefam4           -2.75218    0.43313  -6.354 2.10e-10 ***\npolviews1:Cscore  0.00000         NA      NA       NA    \npolviews2:Cscore -0.08578    0.11437  -0.750   0.4532    \npolviews3:Cscore -0.15923    0.10585  -1.504   0.1325    \npolviews4:Cscore -0.12164    0.09246  -1.316   0.1883    \npolviews5:Cscore -0.22243    0.10510  -2.116   0.0343 *  \npolviews6:Cscore -0.09452    0.11454  -0.825   0.4092    \npolviews7:Cscore  0.00000         NA      NA       NA    \nfefam1:Rscore     0.00000         NA      NA       NA    \nfefam2:Rscore     0.27936    0.04372   6.389 1.67e-10 ***\nfefam3:Rscore     0.48417    0.06239   7.761  < 2e-16 ***\nfefam4:Rscore     0.58586    0.08655   6.769 1.30e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusC                 10  7.68 -73.8  1.77 0.660\n\n\n11番目，18番目，21番目の係数を0にして推定する．\n\n# polviews1:Cscore(11) = polviews7:Cscore(17) = fefam1:Rscore(18) = 0\nRplusC_2 <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam,\n      constrain = c(11, 18, 21), \n      constrainTo = c(0, 0, 0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n# 結果\nsummary(RplusC_2)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Cscore:polviews + Rscore:fefam, \n    constrain = c(11, 18, 21), constrainTo = c(0, 0, 0), family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.69896    0.14301  25.866  < 2e-16 ***\npolviews2         1.07992    0.26750   4.037 5.41e-05 ***\npolviews3         0.76791    0.27072   2.837 0.004560 ** \npolviews4         1.33027    0.25273   5.264 1.41e-07 ***\npolviews5         0.14824    0.27598   0.537 0.591164    \npolviews6        -0.71581    0.29336  -2.440 0.014688 *  \npolviews7        -3.19061    0.44608  -7.153 8.52e-13 ***\nfefam2            0.08440    0.15987   0.528 0.597543    \nfefam3           -0.89419    0.24903  -3.591 0.000330 ***\nfefam4           -2.16632    0.36822  -5.883 4.03e-09 ***\npolviews1:Cscore  0.00000         NA      NA       NA    \npolviews2:Cscore  0.10951    0.12956   0.845 0.397978    \npolviews3:Cscore  0.23134    0.13130   1.762 0.078073 .  \npolviews4:Cscore  0.46422    0.12511   3.711 0.000207 ***\npolviews5:Cscore  0.55872    0.13347   4.186 2.84e-05 ***\npolviews6:Cscore  0.88192    0.13507   6.529 6.61e-11 ***\npolviews7:Cscore  1.17173    0.17310   6.769 1.30e-11 ***\nfefam1:Rscore     0.00000         NA      NA       NA    \nfefam2:Rscore     0.08407    0.03224   2.607 0.009124 ** \nfefam3:Rscore     0.09360    0.03861   2.424 0.015346 *  \nfefam4:Rscore     0.00000         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusC_2)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusC_2               10  7.68 -73.8  1.77 0.660\n\n\nRscore:Cscoreを含めて推定すれば，制約は自動的に課されており（polviewsの1番目と7番目，fefamの1 番目と4番目），特に指定する必要はない．\n\n# 5. R+C: Row and Column Effect Model (Alternative)\nRplusCalt <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + Rscore:fefam,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\nRplusCalt\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + \n    Rscore:fefam, family = poisson, data = freq_tab_2.3A, tolerance = 1e-12)\n\nCoefficients:\n     (Intercept)         polviews2         polviews3         polviews4  \n         3.50368           1.07992           0.76791           1.33027  \n       polviews5         polviews6         polviews7            fefam2  \n         0.14824          -0.71581          -3.19061          -0.11089  \n          fefam3            fefam4     Rscore:Cscore  polviews2:Cscore  \n        -1.28476          -2.75218           0.19529          -0.08578  \npolviews3:Cscore  polviews4:Cscore  polviews5:Cscore  polviews6:Cscore  \n        -0.15923          -0.12164          -0.22243          -0.09452  \npolviews7:Cscore     fefam2:Rscore     fefam3:Rscore     fefam4:Rscore  \n              NA           0.08407           0.09360                NA  \n\nDeviance:            7.678265 \nPearson chi-squared: 7.790921 \nResidual df:         10 \n\n# 結果\nsummary(RplusCalt)\n\n\nCall:\n\ngnm(formula = Freq ~ polviews + fefam + Rscore:Cscore + Cscore:polviews + \n    Rscore:fefam, family = poisson, data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07536  -0.33353   0.01859   0.37548   1.05912  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       3.50368    0.13171  26.601  < 2e-16 ***\npolviews2         1.07992    0.26750   4.037 5.41e-05 ***\npolviews3         0.76791    0.27072   2.837  0.00456 ** \npolviews4         1.33027    0.25273   5.264 1.41e-07 ***\npolviews5         0.14824    0.27598   0.537  0.59116    \npolviews6        -0.71581    0.29336  -2.440  0.01469 *  \npolviews7        -3.19061    0.44608  -7.153 8.52e-13 ***\nfefam2           -0.11089    0.17635  -0.629  0.52949    \nfefam3           -1.28476    0.28350  -4.532 5.85e-06 ***\nfefam4           -2.75218    0.43313  -6.354 2.10e-10 ***\nRscore:Cscore     0.19529    0.02885   6.769 1.30e-11 ***\npolviews2:Cscore -0.08578    0.11437  -0.750  0.45321    \npolviews3:Cscore -0.15923    0.10585  -1.504  0.13250    \npolviews4:Cscore -0.12164    0.09246  -1.316  0.18831    \npolviews5:Cscore -0.22243    0.10510  -2.116  0.03431 *  \npolviews6:Cscore -0.09452    0.11454  -0.825  0.40923    \npolviews7:Cscore  0.00000         NA      NA       NA    \nfefam2:Rscore     0.08407    0.03224   2.607  0.00912 ** \nfefam3:Rscore     0.09360    0.03861   2.424  0.01535 *  \nfefam4:Rscore     0.00000         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 7.6783 on 10 degrees of freedom\nAIC: 215.03\n\nNumber of iterations: 4\n\n# モデル適合度\nmodel.summary(RplusCalt)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RplusCalt              10  7.68 -73.8  1.77 0.660"
  },
  {
    "objectID": "3-Chapter_2.html#行列効果モデルrc1",
    "href": "3-Chapter_2.html#行列効果モデルrc1",
    "title": "2  第2章",
    "section": "2.6 行・列効果モデル（\\(RC(1)\\)）",
    "text": "2.6 行・列効果モデル（\\(RC(1)\\)）\nRC(1)についてはMult(1,polviews,fefam)を含んだモデルで推定する．結果をみると係数は表示されているものの，標準誤差はNAとなっている．\n\n# 6. RC: RC(1) model\nRC.un <- freq_tab_2.3A |>\n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................................\nDone\n\n# 結果\nsummary(RC.un)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    family = poisson, data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)\n(Intercept)                  2.91866         NA      NA       NA\npolviews2                    1.38975         NA      NA       NA\npolviews3                    1.42529         NA      NA       NA\npolviews4                    2.58312         NA      NA       NA\npolviews5                    1.68181         NA      NA       NA\npolviews6                    1.61945         NA      NA       NA\npolviews7                   -0.12257         NA      NA       NA\nfefam2                       0.87841         NA      NA       NA\nfefam3                       0.39507         NA      NA       NA\nfefam4                      -0.79062         NA      NA       NA\nMult(., polviews, fefam).   -0.59172         NA      NA       NA\nMult(1, ., fefam).polviews1 -2.03940         NA      NA       NA\nMult(1, ., fefam).polviews2 -1.56803         NA      NA       NA\nMult(1, ., fefam).polviews3 -0.93853         NA      NA       NA\nMult(1, ., fefam).polviews4  0.03271         NA      NA       NA\nMult(1, ., fefam).polviews5  0.45041         NA      NA       NA\nMult(1, ., fefam).polviews6  1.81638         NA      NA       NA\nMult(1, ., fefam).polviews7  2.98399         NA      NA       NA\nMult(1, polviews, .).fefam1  0.62707         NA      NA       NA\nMult(1, polviews, .).fefam2  0.08020         NA      NA       NA\nMult(1, polviews, .).fefam3 -0.34609         NA      NA       NA\nMult(1, polviews, .).fefam4 -0.54831         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 39\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\n\nまずは「重みづけのないまたは単位標準化した解」を求める．scaleWeights = \"unit\"とする．RC.unから.polviewsのある変数をpickCoef(RC.un, \"[.]polviews\")によって取り出す．\n\n# mu[i], i = 1 to 7\nmu <- getContrasts(RC.un, pickCoef(RC.un,\n                                   \"[.]polviews\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# 合計が0，2乗和が1となっていること確認する．\nlist(\"和\" = sum(mu$qvframe[,1]), \n     \"2乗和\" = sum(mu$qvframe[,1]^2))\n\n$和\n[1] 1.110223e-16\n\n$`2乗和`\n[1] 1\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(RC.un, pickCoef(RC.un, \"[.]fefam\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\",\n                   scaleWeights = \"unit\")\n\n# 合計が0，2乗和が1となっていること確認する．\nlist(\"和\" = sum(nu$qvframe[,1]), \n     \"2乗和\" = sum(nu$qvframe[,1]^2))\n\n$和\n[1] -2.220446e-16\n\n$`2乗和`\n[1] 1\n\n# muの1番目と7番目，nuの1番目と4番目の値を取り出し保存する．\ncon <- c(mu$qvframe[,1][c(1,7)],\n         nu$qvframe[,1][c(1,4)])\n\n\n#保存した値で制約を課した上で，再推定する．\nset.seed(1234)\nRC <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam), \n      constrain = c(12,18,19,22),\n      constrainTo = con, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................\nDone\n\n\nDeviance is not finite 警告メッセージ: Algorithm failed - no model could be estimatedと表示されたらもう一度推定する．set.seedの値をいくつか変えて実行するのがよい．\n表2.5Eの値と一致しているのかを確認する．\n\n# 結果\nsummary(RC)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    constrain = c(12, 18, 19, 22), constrainTo = con, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  2.82020    0.14578  19.346  < 2e-16 ***\npolviews2                    1.40280    0.12442  11.275  < 2e-16 ***\npolviews3                    1.45577    0.12746  11.421  < 2e-16 ***\npolviews4                    2.64048    0.13143  20.090  < 2e-16 ***\npolviews5                    1.75073    0.14175  12.351  < 2e-16 ***\npolviews6                    1.72618    0.16727  10.320  < 2e-16 ***\npolviews7                    0.01648    0.21938   0.075 0.940107    \nfefam2                       0.91251    0.12222   7.466 8.25e-14 ***\nfefam3                       0.45574    0.20388   2.235 0.025396 *  \nfefam4                      -0.71735    0.24913  -2.879 0.003985 ** \nMult(., polviews, fefam).   -2.37331    0.34813  -6.817 9.27e-12 ***\nMult(1, ., fefam).polviews1 -0.48165         NA      NA       NA    \nMult(1, ., fefam).polviews2 -0.37580    0.10049  -3.740 0.000184 ***\nMult(1, ., fefam).polviews3 -0.23443    0.09461  -2.478 0.013216 *  \nMult(1, ., fefam).polviews4 -0.01632    0.08366  -0.195 0.845376    \nMult(1, ., fefam).polviews5  0.07749    0.09263   0.837 0.402872    \nMult(1, ., fefam).polviews6  0.38425    0.10926   3.517 0.000437 ***\nMult(1, ., fefam).polviews7  0.64646         NA      NA       NA    \nMult(1, polviews, .).fefam1  0.74812         NA      NA       NA    \nMult(1, polviews, .).fefam2  0.14098    0.07469   1.888 0.059090 .  \nMult(1, polviews, .).fefam3 -0.33229    0.09162  -3.627 0.000287 ***\nMult(1, polviews, .).fefam4 -0.55680         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 30\n\n\n先ほどの単位標準化した解と推定の結果が一致しているのかを確認する．\n\n# 指定したmuとnuの値と結果が一致しているかを確認\nlist(mu = mu, nu = nu)\n\n$mu\n                               Estimate Std. Error\nMult(1, ., fefam).polviews1 -0.48165420 0.06776575\nMult(1, ., fefam).polviews2 -0.37579722 0.05016783\nMult(1, ., fefam).polviews3 -0.23443020 0.04842778\nMult(1, ., fefam).polviews4 -0.01631519 0.03689088\nMult(1, ., fefam).polviews5  0.07748893 0.04931050\nMult(1, ., fefam).polviews6  0.38424697 0.06009815\nMult(1, ., fefam).polviews7  0.64646091 0.06145462\n\n$nu\n                              Estimate Std. Error\nMult(1, polviews, .).fefam1  0.7481178 0.02662158\nMult(1, polviews, .).fefam2  0.1409760 0.04671343\nMult(1, polviews, .).fefam3 -0.3322937 0.05164241\nMult(1, polviews, .).fefam4 -0.5568002 0.04821776\n\n\n適合度は変化していない．\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC                     10  8.07 -73.4  1.77 0.622"
  },
  {
    "objectID": "3-Chapter_2.html#周辺重みづけ",
    "href": "3-Chapter_2.html#周辺重みづけ",
    "title": "2  第2章",
    "section": "2.7 周辺重みづけ",
    "text": "2.7 周辺重みづけ\n\n# 行の周辺確率\nrp <- prop.table(apply(tab_2.3A, 1, sum, na.rm = TRUE))\nrp\n\n     Strongly liberal               Liberal      Slightly liberal \n           0.03227682            0.12387322            0.12300087 \n             Moderate Slightly conservative          Conservative \n           0.38092469            0.15498691            0.15469613 \nStrongly conservative \n           0.03024135 \n\nsum(rp)\n\n[1] 1\n\n# 列の周辺確率\ncp <- prop.table(apply(tab_2.3A, 2, sum, na.rm = TRUE))\ncp\n\nStrongly Disagree          Disagree             Agree    Strongly agree \n       0.19220704        0.43617331        0.28118639        0.09043327 \n\nsum(cp)\n\n[1] 1\n\n# mu[i], i = 1 to 7\nmu <- getContrasts(RC.un, pickCoef(RC.un,\n                                   \"[.]polviews\"),\n                   ref = rp,\n                   scaleRef = rp, \n                   scaleWeights = rp)\n\n# nu[j], j = 1 to 4\nnu <- getContrasts(RC.un, pickCoef(RC.un, \"[.]fefam\"), \n                   ref = cp,\n                   scaleRef = cp,\n                   scaleWeights = cp)\n\n# muの1番目と7番目，nuの1番目と4番目の値を取り出し保存する．\ncon <- c(mu$qvframe[,1][c(1,7)],\n         nu$qvframe[,1][c(1,4)])\n\n\n#保存した値で制約を課した上で，再推定する．\nset.seed(1234)\nRC_mw <- freq_tab_2.3A |> \n  gnm(Freq ~ polviews + fefam + Mult(1,polviews,fefam), \n      constrain = c(12,18,19,22),\n      constrainTo = con, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations....................................\nDone\n\n\n\n# 結果\nsummary(RC_mw)\n\n\nCall:\ngnm(formula = Freq ~ polviews + fefam + Mult(1, polviews, fefam), \n    constrain = c(12, 18, 19, 22), constrainTo = con, family = poisson, \n    data = freq_tab_2.3A, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.07428  -0.27239   0.03038   0.36792   1.03721  \n\nCoefficients:\n                            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                  2.90051    0.14144  20.507  < 2e-16 ***\npolviews2                    1.38735    0.11722  11.835  < 2e-16 ***\npolviews3                    1.41969    0.12024  11.807  < 2e-16 ***\npolviews4                    2.57257    0.12376  20.787  < 2e-16 ***\npolviews5                    1.66913    0.13414  12.443  < 2e-16 ***\npolviews6                    1.59981    0.16013   9.991  < 2e-16 ***\npolviews7                   -0.14816    0.21832  -0.679 0.497376    \nfefam2                       0.90365    0.12173   7.423 1.14e-13 ***\nfefam3                       0.43998    0.20350   2.162 0.030615 *  \nfefam4                      -0.73638    0.24896  -2.958 0.003098 ** \nMult(., polviews, fefam).   -0.25673    0.03766  -6.817 9.27e-12 ***\nMult(1, ., fefam).polviews1 -1.82062         NA      NA       NA    \nMult(1, ., fefam).polviews2 -1.41532    0.38476  -3.678 0.000235 ***\nMult(1, ., fefam).polviews3 -0.87405    0.36224  -2.413 0.015825 *  \nMult(1, ., fefam).polviews4 -0.03893    0.32031  -0.122 0.903253    \nMult(1, ., fefam).polviews5  0.32022    0.35468   0.903 0.366604    \nMult(1, ., fefam).polviews6  1.49474    0.41835   3.573 0.000353 ***\nMult(1, ., fefam).polviews7  2.49870         NA      NA       NA    \nMult(1, polviews, .).fefam1  1.65778         NA      NA       NA    \nMult(1, polviews, .).fefam2  0.19190    0.18033   1.064 0.287244    \nMult(1, polviews, .).fefam3 -0.95076    0.22120  -4.298 1.72e-05 ***\nMult(1, polviews, .).fefam4 -1.49281         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 8.0718 on 10 degrees of freedom\nAIC: 215.43\n\nNumber of iterations: 36\n\n\n内在的連関パラメータが0.25673となっている．\n適合度は変化していない．\n\n# モデル適合度\nmodel.summary(RC.un)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC.un                  10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC                     10  8.07 -73.4  1.77 0.622\n\nmodel.summary(RC_mw)\n\n# A tibble: 1 × 6\n  `Model Description`    df    L2   BIC Delta     p\n  <chr>               <int> <dbl> <dbl> <dbl> <dbl>\n1 RC_mw                  10  8.07 -73.4  1.77 0.622"
  },
  {
    "objectID": "3-Chapter_2.html#表2.4a",
    "href": "3-Chapter_2.html#表2.4a",
    "title": "2  第2章",
    "section": "2.8 表2.4A",
    "text": "2.8 表2.4A\n表2.4Aを再現する．\n\nmodels <- list()\nmodels[[1]] <- model.summary(O)\nmodels[[2]] <- model.summary(U)\nmodels[[3]] <- model.summary(R)\nmodels[[4]] <- model.summary(C)\nmodels[[5]] <- model.summary(RplusC)\nmodels[[6]] <- model.summary(RC)\nmodels |> bind_rows() |> kable(digit = 3)\n\n\n\n\nModel Description\ndf\nL2\nBIC\nDelta\np\n\n\n\n\nO\n18\n211.695\n65.122\n8.092\n0.000\n\n\nU\n17\n20.125\n-118.305\n2.766\n0.268\n\n\nR\n12\n15.906\n-81.809\n2.466\n0.196\n\n\nC\n15\n14.237\n-107.907\n2.321\n0.508\n\n\nRplusC\n10\n7.678\n-73.751\n1.772\n0.660\n\n\nRC\n10\n8.072\n-73.358\n1.767\n0.622"
  },
  {
    "objectID": "3-Chapter_2.html#表2.4b",
    "href": "3-Chapter_2.html#表2.4b",
    "title": "2  第2章",
    "section": "2.9 表2.4B",
    "text": "2.9 表2.4B\nモデルの比較のための関数を作成する．引数は2つであり，1つめのモデルと2つめのモデルの比較を行う．2つめが指定されていなければ比較ではなくそのモデルの適合度を示す．\n\nmodel_comparison <- function(x, y = 0) {\n  models |> \n    bind_rows() |>\n    dplyr::summarise(`Model Used` = \n                ifelse(y == 0,\n                       paste0(x),\n                       paste0(x,\"-\",y)),\n              df = ifelse(y == 0, \n                          df[x], \n                          df[x] - df[y]),\n              L2 = ifelse(y == 0, \n                          L2[x], \n                          L2[x] - L2[y]))\n}\n\n表2.4Bは次のように再現できる．\n\n# Table 2.4 Panel B\nbind_rows(model_comparison(1,2),\n          model_comparison(2,6),\n          model_comparison(6),\n          model_comparison(1))\n\n# A tibble: 4 × 3\n  `Model Used`    df     L2\n  <chr>        <int>  <dbl>\n1 1-2              1 192.  \n2 2-6              7  12.1 \n3 6               10   8.07\n4 1               18 212.  \n\n\n表2.4Cも再現できる．\n\n# Table 2.4 Panel C\nbind_rows(model_comparison(2,4),\n          model_comparison(4,6),\n          model_comparison(2,6))\n\n# A tibble: 3 × 3\n  `Model Used`    df    L2\n  <chr>        <int> <dbl>\n1 2-4              2  5.89\n2 4-6              5  6.17\n3 2-6              7 12.1"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5a",
    "href": "3-Chapter_2.html#表2.5a",
    "title": "2  第2章",
    "section": "2.10 表2.5A",
    "text": "2.10 表2.5A\n係数を取り出して表2.5Aを再現する．\n\nsummary(U)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore:Cscore\", Variable))\n\n       Variable  Estimate Std..Error  z.value     Pr...z..\n1 Rscore:Cscore 0.2021125 0.01519706 13.29945 2.331718e-40"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5b",
    "href": "3-Chapter_2.html#表2.5b",
    "title": "2  第2章",
    "section": "2.11 表2.5B",
    "text": "2.11 表2.5B\n省略された係数について，値を標準誤差を求める方法は次の通り．\n\n# Table 2.5 Panel B \nsummary(R)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\":Cscore\", Variable))\n\n          Variable     Estimate Std..Error    z.value     Pr...z..\n1 polviews1:Cscore -0.558726563 0.10766840 -5.1893275 2.110549e-07\n2 polviews2:Cscore -0.405075736 0.05914888 -6.8484091 7.467575e-12\n3 polviews3:Cscore -0.248458921 0.05774110 -4.3029822 1.685144e-05\n4 polviews4:Cscore  0.008763861 0.03970853  0.2207048 8.253223e-01\n5 polviews5:Cscore  0.112245001 0.05128383  2.1887016 2.861853e-02\n6 polviews6:Cscore  0.419078627 0.05143368  8.1479420 3.701697e-16\n\n# polviews7:Cscoreを求める\nmycontrast <- numeric(length(coef(R)))\nterms <- pickCoef(R,\"[:]Cscore\")\nmycontrast[terms] <- rep(-1,6)\nmycontrast <- cbind(mycontrast)\ncolnames(mycontrast) <- \"polviews7:Cscore\"\ngnm::se(R, mycontrast)\n\n                  Estimate Std. Error\npolviews7:Cscore 0.6721737  0.1003211"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5b他の正規化",
    "href": "3-Chapter_2.html#表2.5b他の正規化",
    "title": "2  第2章",
    "section": "2.12 表2.5B（他の正規化）",
    "text": "2.12 表2.5B（他の正規化）\n\n# Table 2.5 Panel B Alternative\nsummary(Ralt)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\":Cscore\", Variable))\n\n          Variable  Estimate Std..Error  z.value     Pr...z..\n1 polviews2:Cscore 0.1536508  0.1361941 1.128176 2.592458e-01\n2 polviews3:Cscore 0.3102676  0.1356609 2.287082 2.219102e-02\n3 polviews4:Cscore 0.5674904  0.1267654 4.476699 7.580590e-06\n4 polviews5:Cscore 0.6709716  0.1326215 5.059297 4.208051e-07\n5 polviews6:Cscore 0.9778052  0.1331060 7.346062 2.041319e-13\n6 polviews7:Cscore 1.2309003  0.1678130 7.334954 2.217982e-13"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5c",
    "href": "3-Chapter_2.html#表2.5c",
    "title": "2  第2章",
    "section": "2.13 表2.5C",
    "text": "2.13 表2.5C\n同様に列効果の最後のカテゴリの推定値と標準誤差を求める．\n\n# Table 2.5 Panel C\nsummary(C)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\":Rscore\", Variable))\n\n       Variable    Estimate Std..Error    z.value     Pr...z..\n1 fefam1:Rscore -0.32183233 0.02601065 -12.373099 3.654449e-35\n2 fefam2:Rscore -0.06518238 0.02012977  -3.238109 1.203247e-03\n3 fefam3:Rscore  0.13740293 0.02281996   6.021174 1.731567e-09\n\n# fefam4:Rscoreを求める\nmycontrast <- numeric(length(coef(C)))\nterms <- pickCoef(C,\"[:]Rscore\")\nmycontrast[terms] <- rep(-1,3)\nmycontrast <- cbind(mycontrast)\ncolnames(mycontrast) <- \"fefam4:Rscore\"\ngnm::se(C, mycontrast)\n\n               Estimate Std. Error\nfefam4:Rscore 0.2496118 0.03429697"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5c他の正規化",
    "href": "3-Chapter_2.html#表2.5c他の正規化",
    "title": "2  第2章",
    "section": "2.14 表2.5C（他の正規化）",
    "text": "2.14 表2.5C（他の正規化）\n1つ目のカテゴリの値を0とした正規化の場合は次のようになる．\n\n# Table 2.5 Panel C Alternative\nsummary(Calt)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\":Rscore\", Variable))\n\n       Variable  Estimate Std..Error   z.value     Pr...z..\n1 fefam2:Rscore 0.2566499 0.03458604  7.420624 1.165702e-13\n2 fefam3:Rscore 0.4592353 0.03850703 11.926012 8.662502e-33\n3 fefam4:Rscore 0.5714441 0.05297192 10.787680 3.935998e-27"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5d",
    "href": "3-Chapter_2.html#表2.5d",
    "title": "2  第2章",
    "section": "2.15 表2.5D",
    "text": "2.15 表2.5D\n\n# Table 2.5 Panel D\nsummary(RplusC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore\", Variable))\n\n           Variable    Estimate Std..Error    z.value     Pr...z..\n1  polviews1:Cscore  0.00000000         NA         NA           NA\n2  polviews2:Cscore -0.08578207 0.11436513 -0.7500719 4.532114e-01\n3  polviews3:Cscore -0.15923097 0.10584890 -1.5043233 1.324981e-01\n4  polviews4:Cscore -0.12164181 0.09246130 -1.3155970 1.883093e-01\n5  polviews5:Cscore -0.22242867 0.10509647 -2.1164238 3.430878e-02\n6  polviews6:Cscore -0.09452143 0.11453734 -0.8252455 4.092322e-01\n7  polviews7:Cscore  0.00000000         NA         NA           NA\n8     fefam1:Rscore  0.00000000         NA         NA           NA\n9     fefam2:Rscore  0.27935717 0.04372418  6.3890770 1.668900e-10\n10    fefam3:Rscore  0.48417258 0.06238681  7.7608170 8.438398e-15\n11    fefam4:Rscore  0.58586364 0.08654948  6.7691179 1.295700e-11"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5d他の正規化",
    "href": "3-Chapter_2.html#表2.5d他の正規化",
    "title": "2  第2章",
    "section": "2.16 表2.5D（他の正規化）",
    "text": "2.16 表2.5D（他の正規化）\n\nsummary(RplusCalt)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore\", Variable))\n\n           Variable    Estimate Std..Error    z.value     Pr...z..\n1     Rscore:Cscore  0.19528788 0.02884983  6.7691179 1.295700e-11\n2  polviews2:Cscore -0.08578207 0.11436513 -0.7500719 4.532114e-01\n3  polviews3:Cscore -0.15923097 0.10584890 -1.5043233 1.324981e-01\n4  polviews4:Cscore -0.12164181 0.09246130 -1.3155970 1.883093e-01\n5  polviews5:Cscore -0.22242867 0.10509647 -2.1164238 3.430878e-02\n6  polviews6:Cscore -0.09452143 0.11453734 -0.8252455 4.092322e-01\n7  polviews7:Cscore  0.00000000         NA         NA           NA\n8     fefam2:Rscore  0.08406929 0.03224287  2.6073757 9.123918e-03\n9     fefam3:Rscore  0.09359682 0.03861067  2.4241178 1.534563e-02\n10    fefam4:Rscore  0.00000000         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.5e",
    "href": "3-Chapter_2.html#表2.5e",
    "title": "2  第2章",
    "section": "2.17 表2.5E",
    "text": "2.17 表2.5E\n\nsummary(RC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Mult\", Variable))\n\n                      Variable    Estimate Std..Error    z.value     Pr...z..\n1    Mult(., polviews, fefam). -2.37330693 0.34812532 -6.8173924 9.270782e-12\n2  Mult(1, ., fefam).polviews1 -0.48165420         NA         NA           NA\n3  Mult(1, ., fefam).polviews2 -0.37579722 0.10049018 -3.7396411 1.842832e-04\n4  Mult(1, ., fefam).polviews3 -0.23443020 0.09460850 -2.4778980 1.321589e-02\n5  Mult(1, ., fefam).polviews4 -0.01631519 0.08365831 -0.1950217 8.453760e-01\n6  Mult(1, ., fefam).polviews5  0.07748893 0.09263438  0.8365030 4.028720e-01\n7  Mult(1, ., fefam).polviews6  0.38424697 0.10926427  3.5166753 4.369880e-04\n8  Mult(1, ., fefam).polviews7  0.64646091         NA         NA           NA\n9  Mult(1, polviews, .).fefam1  0.74811781         NA         NA           NA\n10 Mult(1, polviews, .).fefam2  0.14097601 0.07468829  1.8875250 5.908974e-02\n11 Mult(1, polviews, .).fefam3 -0.33229365 0.09161751 -3.6269668 2.867702e-04\n12 Mult(1, polviews, .).fefam4 -0.55680017         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#logmultパッケージの利用",
    "href": "3-Chapter_2.html#logmultパッケージの利用",
    "title": "2  第2章",
    "section": "2.18 logmultパッケージの利用",
    "text": "2.18 logmultパッケージの利用\nlogmultはgnmをベースとしてRCモデルを簡単に実行できる関数である．\nまずはlogmultパッケージのanoasで連関分析を行う．データはtableなのでtab_2.3Aを使用する．\nanoasは独立モデル，RC(1)，RC(2)，RC(3)，…と次元がmin(nrow(tab) - 1, ncol(tab) - 1)までのRCモデルを推定する．RC(1)の結果は表2.4Aと一致している．\n\nanoas(tab_2.3A)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations...................\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations..........................\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations...\nDone\n\n\n       Res. Df           Res. Dev     Dev./Indep. (%)   Dissim. (%)\nIndep.      18 211.69508974175693 100.000000000000000 8.09171028965\nRC(1)       10   8.07181892815000   3.812945750417107 1.76730792765\nRC(2)        4   1.36909098846095   0.646727796157711 0.49639212377\nRC(3)        0  -0.00000000000001  -0.000000000000005 0.00000000004\n                      BIC                AIC Dev. Df\nIndep.  65.12224155397615 175.69508974175693   NA NA\nRC(1)  -73.35754117617265 -11.92818107185000 -204 -8\nRC(2)  -31.20265305326811  -6.63090901153905   -7 -6\nRC(3)   -0.00000000000001  -0.00000000000001   -1 -4\n\n\n表2.5Eの推定値（RC(1)）はrcを用いて次のように再現できる．nd = 1で次元を1としている．標準誤差を求める上で，ブートストラップ法を用いている．結果には\\(\\gamma=\\delta=1/2\\)の場合の係数（Adjusted）が示されている．\n\nrc_fit <- rc(tab_2.3A, \n             nd = 1, \n             se = \"bootstrap\", \n             weighting = \"none\",\n             nreplicates = 100, \n             ncpus = getOption(\"boot.ncpus\")\n             )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\nComputing bootstrap standard errors...\n\n\nLoading required namespace: parallel\n\n\n.\n\nsummary(rc_fit, weighting = \"none\")\n\nCall:\nrc(tab = tab_2.3A, nd = 1, weighting = \"none\", se = \"bootstrap\", \n    nreplicates = 100, ncpus = getOption(\"boot.ncpus\"))\n\nDeviance Residuals:\n    Min       1Q   Median       3Q      Max  \n-1.0743  -0.2724   0.0304   0.3679   1.0372  \n\nAssociation coefficients:\n                                    Normalized   Adjusted  Std. error\nDim1                                  2.373307         NA      0.2735\nDim1:polviewsStrongly liberal         0.481654   0.742014      0.0732\nDim1:polviewsLiberal                  0.375797   0.578936      0.0505\nDim1:polviewsSlightly liberal         0.234430   0.361152      0.0544\nDim1:polviewsModerate                 0.016315   0.025134      0.0326\nDim1:polviewsSlightly conservative   -0.077489  -0.119376      0.0492\nDim1:polviewsConservative            -0.384247  -0.591953      0.0596\nDim1:polviewsStrongly conservative   -0.646461  -0.995908      0.0621\nDim1:fefamStrongly Disagree           0.748118   1.152516      0.0252\nDim1:fefamDisagree                    0.140976   0.217181      0.0470\nDim1:fefamAgree                      -0.332294  -0.511916      0.0583\nDim1:fefamStrongly agree             -0.556800  -0.857781      0.0489\n                                     Pr(>|z|)     \nDim1                                < 2.2e-16  ***\nDim1:polviewsStrongly liberal       4.834e-11  ***\nDim1:polviewsLiberal                1.003e-13  ***\nDim1:polviewsSlightly liberal       1.609e-05  ***\nDim1:polviewsModerate                0.616651     \nDim1:polviewsSlightly conservative   0.114925     \nDim1:polviewsConservative           1.121e-10  ***\nDim1:polviewsStrongly conservative  < 2.2e-16  ***\nDim1:fefamStrongly Disagree         < 2.2e-16  ***\nDim1:fefamDisagree                   0.002683  ** \nDim1:fefamAgree                     1.214e-08  ***\nDim1:fefamStrongly agree            < 2.2e-16  ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: none\nDeviance:              8.071819\nPearson chi-squared:   8.168769\nDissimilarity index:   1.767308%\nResidual df:           10\nBIC:                   -73.35754\nAIC:                   -11.92818\n\n\n周辺重みづけを用いたい場合は`weighting = “marginal”とする．\n\nrc_fit_wm <- rc(tab_2.3A, \n             nd = 1, \n             se = \"bootstrap\", \n             weighting = \"marginal\",\n             nreplicates = 100, \n             ncpus = getOption(\"boot.ncpus\")\n             )\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............\nDone\nComputing bootstrap standard errors...\n.\n\nsummary(rc_fit_wm)\n\nCall:\nrc(tab = tab_2.3A, nd = 1, weighting = \"marginal\", se = \"bootstrap\", \n    nreplicates = 100, ncpus = getOption(\"boot.ncpus\"))\n\nDeviance Residuals:\n    Min       1Q   Median       3Q      Max  \n-1.0743  -0.2724   0.0304   0.3679   1.0372  \n\nAssociation coefficients:\n                                    Normalized   Adjusted  Std. error\nDim1                                  0.256734         NA      0.0185\nDim1:polviewsStrongly liberal         1.820624   0.922490      0.3333\nDim1:polviewsLiberal                  1.415319   0.717126      0.1601\nDim1:polviewsSlightly liberal         0.874053   0.442873      0.1882\nDim1:polviewsModerate                 0.038935   0.019728      0.0944\nDim1:polviewsSlightly conservative   -0.320222  -0.162253      0.1777\nDim1:polviewsConservative            -1.494737  -0.757366      0.1303\nDim1:polviewsStrongly conservative   -2.498701  -1.266064      0.4518\nDim1:fefamStrongly Disagree           1.657784   0.839980      0.0847\nDim1:fefamDisagree                    0.191902   0.097234      0.0811\nDim1:fefamAgree                      -0.950760  -0.481739      0.0891\nDim1:fefamStrongly agree             -1.492808  -0.756389      0.1960\n                                     Pr(>|z|)     \nDim1                                < 2.2e-16  ***\nDim1:polviewsStrongly liberal       4.701e-08  ***\nDim1:polviewsLiberal                < 2.2e-16  ***\nDim1:polviewsSlightly liberal       3.393e-06  ***\nDim1:polviewsModerate                 0.67992     \nDim1:polviewsSlightly conservative    0.07150  .  \nDim1:polviewsConservative           < 2.2e-16  ***\nDim1:polviewsStrongly conservative  3.197e-08  ***\nDim1:fefamStrongly Disagree         < 2.2e-16  ***\nDim1:fefamDisagree                    0.01798  *  \nDim1:fefamAgree                     < 2.2e-16  ***\nDim1:fefamStrongly agree            2.616e-14  ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: marginal\nDeviance:              8.071819\nPearson chi-squared:   8.168769\nDissimilarity index:   1.767308%\nResidual df:           10\nBIC:                   -73.35754\nAIC:                   -11.92818\n\n\nこれは先ほど求めた周辺重みづけの結果（内在的連関パラメータが0.25673）と一致する．"
  },
  {
    "objectID": "3-Chapter_2.html#表2.3b",
    "href": "3-Chapter_2.html#表2.3b",
    "title": "2  第2章",
    "section": "2.19 表2.3B",
    "text": "2.19 表2.3B\n\n# コントラストを確認\noptions('contrasts')\n\n$contrasts\n           factor           ordered \n\"contr.treatment\" \"contr.treatment\" \n\n# default\noptions(contrasts = c(factor = \"contr.treatment\",\n                      ordered = \"contr.poly\"))\n\nanoasを用いるときにはのエラーを無くすために行列はラベルを用いない．\n\nFreq <- c(518,  95, 6, 35, 5,\n         　 81,  67, 4, 49, 2,\n          452,1003,67,630, 5,\n           71, 157,37,562,12)\n\n# データを表形式に変換\ntab_2.3B <- matrix(Freq, \n                   nrow = 4,\n                   ncol = 5,\n                   byrow = TRUE) |> as.table()\ntab_2.3B\n\n     A    B    C    D    E\nA  518   95    6   35    5\nB   81   67    4   49    2\nC  452 1003   67  630    5\nD   71  157   37  562   12\n\n# 度数，行変数，列変数からなる集計データを作成\nEduc <- gl(n = 4, k = 5)\nOcc <- gl(n = 5, k = 1, length = 20)\nfreq_tab_2.3B <- tibble(Freq, Educ, Occ)\nfreq_tab_2.3B\n\n# A tibble: 20 × 3\n    Freq Educ  Occ  \n   <dbl> <fct> <fct>\n 1   518 1     1    \n 2    95 1     2    \n 3     6 1     3    \n 4    35 1     4    \n 5     5 1     5    \n 6    81 2     1    \n 7    67 2     2    \n 8     4 2     3    \n 9    49 2     4    \n10     2 2     5    \n11   452 3     1    \n12  1003 3     2    \n13    67 3     3    \n14   630 3     4    \n15     5 3     5    \n16    71 4     1    \n17   157 4     2    \n18    37 4     3    \n19   562 4     4    \n20    12 4     5    \n\n# 行変数と列変数の整数値を作成\nfreq_tab_2.3B <- freq_tab_2.3B |> \n  mutate(Rscore = as.numeric(Educ),\n         Cscore = as.numeric(Occ))\nfreq_tab_2.3B\n\n# A tibble: 20 × 5\n    Freq Educ  Occ   Rscore Cscore\n   <dbl> <fct> <fct>  <dbl>  <dbl>\n 1   518 1     1          1      1\n 2    95 1     2          1      2\n 3     6 1     3          1      3\n 4    35 1     4          1      4\n 5     5 1     5          1      5\n 6    81 2     1          2      1\n 7    67 2     2          2      2\n 8     4 2     3          2      3\n 9    49 2     4          2      4\n10     2 2     5          2      5\n11   452 3     1          3      1\n12  1003 3     2          3      2\n13    67 3     3          3      3\n14   630 3     4          3      4\n15     5 3     5          3      5\n16    71 4     1          4      1\n17   157 4     2          4      2\n18    37 4     3          4      3\n19   562 4     4          4      4\n20    12 4     5          4      5\n\n\n\nO <- freq_tab_2.3B |> \n  gnm(Freq ~ Educ + Occ, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nU <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nR <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Educ:Cscore, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Occ:Rscore, \n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nRplusC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Educ:Cscore + \n        Occ:Rscore,\n      constrain = c(12,16), \n      constrainTo = c(0,0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.............................\nDone\n\nUplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ +\n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.\nDone\n\nRplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................................\nDone\n\nCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\n\nRplusCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...........\nDone\n\nRC2 <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        instances(Mult(1, Educ, Occ),2),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................\nDone"
  },
  {
    "objectID": "3-Chapter_2.html#表2.6a",
    "href": "3-Chapter_2.html#表2.6a",
    "title": "2  第2章",
    "section": "2.20 表2.6A",
    "text": "2.20 表2.6A\n表2.6Aを再現する．\n\nmodels <- list()\nmodels[[1]] <- model.summary(O)\nmodels[[2]] <- model.summary(U)\nmodels[[3]] <- model.summary(R)\nmodels[[4]] <- model.summary(C)\nmodels[[5]] <- model.summary(RplusC)\nmodels[[6]] <- model.summary(RC)\nmodels[[7]] <- model.summary(UplusRC)\nmodels[[8]] <- model.summary(RplusRC)\nmodels[[9]] <- model.summary(CplusRC)\nmodels[[10]] <- model.summary(RplusCplusRC)\nmodels[[11]] <- model.summary(RC2)\nmodels |> bind_rows()\n\n# A tibble: 11 × 6\n   `Model Description`    df       L2    BIC   Delta         p\n   <chr>               <int>    <dbl>  <dbl>   <dbl>     <dbl>\n 1 O                      12 1373.    1274.  23.9    8.44e-287\n 2 U                      11  244.     153.   8.54   4.99e- 46\n 3 R                       9  206.     132.   7.38   1.85e- 39\n 4 C                       8  155.      89.3  7.47   1.48e- 29\n 5 RplusC                  6   91.6     42.1  4.63   1.40e- 17\n 6 RC                      6  125.      75.5  6.44   1.41e- 24\n 7 UplusRC                 5   17.6    -23.7  1.52   3.49e-  3\n 8 RplusRC                 4    6.94   -26.1  0.832  1.39e-  1\n 9 CplusRC                 3   11.4    -13.4  1.01   9.72e-  3\n10 RplusCplusRC            2    0.278  -16.2  0.0538 8.70e-  1\n11 RC2                     2    0.600  -15.9  0.0935 7.41e-  1"
  },
  {
    "objectID": "3-Chapter_2.html#表2.6b",
    "href": "3-Chapter_2.html#表2.6b",
    "title": "2  第2章",
    "section": "2.21 表2.6B",
    "text": "2.21 表2.6B\n\n# Table 2.4 Panel B\nbind_rows(model_comparison(1,6),\n          model_comparison(6,11),\n          model_comparison(11),\n          model_comparison(1))\n\n# A tibble: 4 × 3\n  `Model Used`    df       L2\n  <chr>        <int>    <dbl>\n1 1-6              6 1248.   \n2 6-11             4  124.   \n3 11               2    0.600\n4 1               12 1373."
  },
  {
    "objectID": "3-Chapter_2.html#表2.6c",
    "href": "3-Chapter_2.html#表2.6c",
    "title": "2  第2章",
    "section": "2.22 表2.6C",
    "text": "2.22 表2.6C\n\n# Table 2.4 Panel C\nbind_rows(model_comparison(1,2),\n          model_comparison(2,6),\n          model_comparison(6,10),\n          model_comparison(10),\n          model_comparison(1))\n\n# A tibble: 5 × 3\n  `Model Used`    df       L2\n  <chr>        <int>    <dbl>\n1 1-2              1 1129.   \n2 2-6              5  119.   \n3 6-10             4  125.   \n4 10               2    0.278\n5 1               12 1373."
  },
  {
    "objectID": "3-Chapter_2.html#表2.7a",
    "href": "3-Chapter_2.html#表2.7a",
    "title": "2  第2章",
    "section": "2.23 表2.7A",
    "text": "2.23 表2.7A\n\nset.seed(1234)\nUplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n..............\nDone\n\nsummary(UplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Cscore + Mult(1, Educ, \n    Occ), family = poisson, data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.0893  -0.5631   0.1321   0.7372   1.9761  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             5.49123         NA      NA       NA    \nEduc2                  -2.07045         NA      NA       NA    \nEduc3                  -1.00877         NA      NA       NA    \nEduc4                  -3.55473         NA      NA       NA    \nOcc2                   -1.06909         NA      NA       NA    \nOcc3                   -5.17113         NA      NA       NA    \nOcc4                   -4.53939         NA      NA       NA    \nOcc5                  -10.91018         NA      NA       NA    \nRscore:Cscore           0.55212    0.03429    16.1   <2e-16 ***\nMult(., Educ, Occ).     0.05379         NA      NA       NA    \nMult(1, ., Occ).Educ1  57.38879         NA      NA       NA    \nMult(1, ., Occ).Educ2  28.47707         NA      NA       NA    \nMult(1, ., Occ).Educ3 -10.70009         NA      NA       NA    \nMult(1, ., Occ).Educ4   9.22301         NA      NA       NA    \nMult(1, Educ, .).Occ1   0.06067         NA      NA       NA    \nMult(1, Educ, .).Occ2  -0.31188         NA      NA       NA    \nMult(1, Educ, .).Occ3   0.01526         NA      NA       NA    \nMult(1, Educ, .).Occ4   0.19408         NA      NA       NA    \nMult(1, Educ, .).Occ5   1.34889         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 17.602 on 5 degrees of freedom\nAIC: 163.98\n\nNumber of iterations: 71\n\n# 変数と係数と係数の順番を表示\npickCoef(UplusRC, \"[.]Educ\")\n\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ3 \n                   11                    12                    13 \nMult(1, ., Occ).Educ4 \n                   14 \n\npickCoef(UplusRC, \"[.]Occ\")\n\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ3 \n                   15                    16                    17 \nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ5 \n                   18                    19 \n\ndata.frame(var = names(UplusRC$coefficients),\n           estimate = UplusRC$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var     estimate number\n(Intercept)                     (Intercept)   5.49123206      1\nEduc2                                 Educ2  -2.07045034      2\nEduc3                                 Educ3  -1.00877122      3\nEduc4                                 Educ4  -3.55472593      4\nOcc2                                   Occ2  -1.06909237      5\nOcc3                                   Occ3  -5.17112951      6\nOcc4                                   Occ4  -4.53939355      7\nOcc5                                   Occ5 -10.91018443      8\nRscore:Cscore                 Rscore:Cscore   0.55211791      9\nMult(., Educ, Occ).     Mult(., Educ, Occ).   0.05378691     10\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1  57.38878762     11\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  28.47707090     12\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -10.70009235     13\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4   9.22300628     14\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1   0.06066883     15\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2  -0.31187524     16\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3   0.01525644     17\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4   0.19407628     18\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5   1.34889132     19\n\nmu <- getContrasts(UplusRC, \n                   pickCoef(UplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(UplusRC, \n                   pickCoef(UplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\n\n# 中心化制約と尺度化制約の確認\nsum(mu$qvframe[,1])\n\n[1] -2.775558e-17\n\nsum(mu$qvframe[,1]^2)\n\n[1] 1\n\nsum(nu$qvframe[,1])\n\n[1] 0\n\nsum(nu$qvframe[,1]^2)\n\n[1] 1\n\n# 行スコアと列スコアの両端の値を固定する\ncon <- c(mu$qvframe[,1][c(1,4)],nu$qvframe[,1][c(1,5)])\n\nset.seed(1234567)\nUplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Cscore + \n        Mult(1, Educ, Occ),\n      constrain = c(11,14,15,19),\n      constrainTo = con,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n.........\nDone\n\nsummary(UplusRC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\",\n                      Variable))\n\n                Variable    Estimate Std..Error   z.value     Pr...z..\n1          Rscore:Cscore  0.55211791 0.03429436 16.099379 2.576758e-58\n2    Mult(., Educ, Occ).  3.43558976 0.61932837  5.547283 2.901428e-08\n3  Mult(1, ., Occ).Educ1  0.72242916         NA        NA           NA\n4  Mult(1, ., Occ).Educ2  0.14690561 0.13431003  1.093780 2.740515e-01\n5  Mult(1, ., Occ).Educ3 -0.63296437 0.13149187 -4.813715 1.481501e-06\n6  Mult(1, ., Occ).Educ4 -0.23637040         NA        NA           NA\n7  Mult(1, Educ, .).Occ1 -0.15787324         NA        NA           NA\n8  Mult(1, Educ, .).Occ2 -0.45087063 0.05888770 -7.656448 1.911463e-14\n9  Mult(1, Educ, .).Occ3 -0.19358905 0.08174718 -2.368143 1.787760e-02\n10 Mult(1, Educ, .).Occ4 -0.05295134 0.05110102 -1.036209 3.001047e-01\n11 Mult(1, Educ, .).Occ5  0.85528425         NA        NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7b",
    "href": "3-Chapter_2.html#表2.7b",
    "title": "2  第2章",
    "section": "2.24 表2.7B",
    "text": "2.24 表2.7B\n\nRplusRC.un <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............................\nDone\n\nsummary(RplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Mult(1, Educ, \n    Occ), family = poisson, data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.96462  -0.24301  -0.05231   0.31330   1.21311  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)             7.8043         NA      NA       NA\nEduc2                  -2.5496         NA      NA       NA\nEduc3                  -1.0924         NA      NA       NA\nEduc4                  -3.6305         NA      NA       NA\nOcc2                    1.0437         NA      NA       NA\nOcc3                   -0.7855         NA      NA       NA\nOcc4                    2.0809         NA      NA       NA\nOcc5                   -1.8534         NA      NA       NA\nEduc1:Cscore           -1.7432         NA      NA       NA\nEduc2:Cscore           -0.9182         NA      NA       NA\nEduc3:Cscore           -0.5398         NA      NA       NA\nEduc4:Cscore            0.0000         NA      NA       NA\nMult(., Educ, Occ).    -0.4213         NA      NA       NA\nMult(1, ., Occ).Educ1  -2.0586         NA      NA       NA\nMult(1, ., Occ).Educ2  -0.7258         NA      NA       NA\nMult(1, ., Occ).Educ3   0.5605         NA      NA       NA\nMult(1, ., Occ).Educ4  -0.2104         NA      NA       NA\nMult(1, Educ, .).Occ1   0.2200         NA      NA       NA\nMult(1, Educ, .).Occ2  -0.9616         NA      NA       NA\nMult(1, Educ, .).Occ3   0.1953         NA      NA       NA\nMult(1, Educ, .).Occ4   0.7768         NA      NA       NA\nMult(1, Educ, .).Occ5   4.8551         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 6.9359 on 4 degrees of freedom\nAIC: 155.31\n\nNumber of iterations: 29\n\npickCoef(RplusRC.un, \"[:]Cscore\")\n\nEduc1:Cscore Educ2:Cscore Educ3:Cscore Educ4:Cscore \n           9           10           11           12 \n\nRplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations........................................\nDone\n\nsummary(RplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Mult(1, Educ, \n    Occ), constrain = c(9, 12), constrainTo = c(0, 0), family = poisson, \n    data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.96462  -0.24301  -0.05231   0.31330   1.21311  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)             5.0338         NA      NA       NA    \nEduc2                  -0.4417         NA      NA       NA    \nEduc3                   3.0501         NA      NA       NA    \nEduc4                  -0.7074         NA      NA       NA    \nOcc2                    0.6767         NA      NA       NA    \nOcc3                   -1.1329         NA      NA       NA    \nOcc4                    1.6580         NA      NA       NA    \nOcc5                   -1.7737         NA      NA       NA    \nEduc1:Cscore            0.0000         NA      NA       NA    \nEduc2:Cscore           -0.4321     0.2210  -1.955   0.0506 .  \nEduc3:Cscore           -1.2670     0.1931  -6.562 5.31e-11 ***\nEduc4:Cscore            0.0000         NA      NA       NA    \nMult(., Educ, Occ).    -1.5191         NA      NA       NA    \nMult(1, ., Occ).Educ1   4.6510         NA      NA       NA    \nMult(1, ., Occ).Educ2   0.9307         NA      NA       NA    \nMult(1, ., Occ).Educ3  -2.6602         NA      NA       NA    \nMult(1, ., Occ).Educ4  -0.5081         NA      NA       NA    \nMult(1, Educ, .).Occ1  -0.1724         NA      NA       NA    \nMult(1, Educ, .).Occ2   0.1674         NA      NA       NA    \nMult(1, Educ, .).Occ3   0.2749         NA      NA       NA    \nMult(1, Educ, .).Occ4   0.4395         NA      NA       NA    \nMult(1, Educ, .).Occ5   0.2568         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 6.9359 on 4 degrees of freedom\nAIC: 155.31\n\nNumber of iterations: 40\n\n# 変数と係数と係数の順番を表示\npickCoef(RplusRC.un, \"[.]Educ\")\n\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ3 \n                   14                    15                    16 \nMult(1, ., Occ).Educ4 \n                   17 \n\npickCoef(RplusRC.un, \"[.]Occ\")\n\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ3 \n                   18                    19                    20 \nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ5 \n                   21                    22 \n\ndata.frame(var = names(RplusRC$coefficients),\n           estimate = RplusRC$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var   estimate number\n(Intercept)                     (Intercept)  5.0338134      1\nEduc2                                 Educ2 -0.4416984      2\nEduc3                                 Educ3  3.0500999      3\nEduc4                                 Educ4 -0.7074330      4\nOcc2                                   Occ2  0.6766646      5\nOcc3                                   Occ3 -1.1329222      6\nOcc4                                   Occ4  1.6579720      7\nOcc5                                   Occ5 -1.7736652      8\nEduc1:Cscore                   Educ1:Cscore         NA      9\nEduc2:Cscore                   Educ2:Cscore -0.4320760     10\nEduc3:Cscore                   Educ3:Cscore -1.2669500     11\nEduc4:Cscore                   Educ4:Cscore         NA     12\nMult(., Educ, Occ).     Mult(., Educ, Occ). -1.5191478     13\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1  4.6509709     14\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  0.9307366     15\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -2.6601848     16\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4 -0.5080538     17\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1 -0.1724067     18\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2  0.1674123     19\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3  0.2748827     20\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4  0.4395333     21\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5  0.2567545     22\n\nmu <- getContrasts(RplusRC, \n                   pickCoef(RplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(RplusRC, \n                   pickCoef(RplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nRplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,14,17,18,22),\n      constrainTo = con,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.....................................\nDone\n\nsummary(RplusRC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable    Estimate Std..Error    z.value     Pr...z..\n1           Educ1:Cscore  0.00000000         NA         NA           NA\n2           Educ2:Cscore -0.43207600  0.2209849 -1.9552282 5.055614e-02\n3           Educ3:Cscore -1.26695003  0.1930731 -6.5620238 5.308234e-11\n4           Educ4:Cscore  0.00000000         NA         NA           NA\n5    Mult(., Educ, Occ). -3.67046405  0.5474332 -6.7048620 2.015968e-11\n6  Mult(1, ., Occ).Educ1  0.75983648         NA         NA           NA\n7  Mult(1, ., Occ).Educ2  0.06145542  0.1367987  0.4492399 6.532586e-01\n8  Mult(1, ., Occ).Educ3 -0.61265036  0.1325427 -4.6222852 3.795357e-06\n9  Mult(1, ., Occ).Educ4 -0.20864153         NA         NA           NA\n10 Mult(1, Educ, .).Occ1 -0.80614447         NA         NA           NA\n11 Mult(1, Educ, .).Occ2 -0.05693272  0.1225191 -0.4646846 6.421573e-01\n12 Mult(1, Educ, .).Occ3  0.18001127  0.1630841  1.1037941 2.696825e-01\n13 Mult(1, Educ, .).Occ4  0.54302264  0.2004941  2.7084221 6.760398e-03\n14 Mult(1, Educ, .).Occ5  0.14004328         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7c",
    "href": "3-Chapter_2.html#表2.7c",
    "title": "2  第2章",
    "section": "2.25 表2.7C",
    "text": "2.25 表2.7C\n\nCplusRC.un <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n\nsummary(CplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Occ + Mult(1, Educ, \n    Occ), family = poisson, data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98938  -0.14103  -0.01486   0.18280   2.20453  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)\n(Intercept)            7.27665         NA      NA       NA\nEduc2                 -0.42020         NA      NA       NA\nEduc3                  2.28710         NA      NA       NA\nEduc4                  1.48088         NA      NA       NA\nOcc2                  -1.68636         NA      NA       NA\nOcc3                  -5.70983         NA      NA       NA\nOcc4                  -4.19924         NA      NA       NA\nOcc5                  -7.11952         NA      NA       NA\nOcc1:Rscore           -1.14020         NA      NA       NA\nOcc2:Rscore           -0.42134         NA      NA       NA\nOcc3:Rscore            0.12982         NA      NA       NA\nOcc4:Rscore            0.40748         NA      NA       NA\nOcc5:Rscore            0.00000         NA      NA       NA\nMult(., Educ, Occ).   -3.12869         NA      NA       NA\nMult(1, ., Occ).Educ1  0.69396         NA      NA       NA\nMult(1, ., Occ).Educ2  0.23360         NA      NA       NA\nMult(1, ., Occ).Educ3 -0.35305         NA      NA       NA\nMult(1, ., Occ).Educ4  0.38680         NA      NA       NA\nMult(1, Educ, .).Occ1 -0.04321         NA      NA       NA\nMult(1, Educ, .).Occ2  0.27107         NA      NA       NA\nMult(1, Educ, .).Occ3 -0.03610         NA      NA       NA\nMult(1, Educ, .).Occ4 -0.11942         NA      NA       NA\nMult(1, Educ, .).Occ5 -0.70227         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 11.405 on 3 degrees of freedom\nAIC: 161.78\n\nNumber of iterations: 68\n\npickCoef(CplusRC.un, \"[:]Rscore\")\n\nOcc1:Rscore Occ2:Rscore Occ3:Rscore Occ4:Rscore Occ5:Rscore \n          9          10          11          12          13 \n\nCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,13),\n      constrainTo = c(0,0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations..............................................\nDone\n\nsummary(CplusRC)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Rscore:Occ + Mult(1, Educ, \n    Occ), constrain = c(9, 13), constrainTo = c(0, 0), family = poisson, \n    data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.98938  -0.14103  -0.01486   0.18280   2.20453  \n\nCoefficients:\n                      Estimate Std. Error z value Pr(>|z|)    \n(Intercept)            6.20454         NA      NA       NA    \nEduc2                 -1.63681         NA      NA       NA    \nEduc3                 -0.14388         NA      NA       NA    \nEduc4                 -2.18819         NA      NA       NA    \nOcc2                  -2.74715         NA      NA       NA    \nOcc3                  -5.73384         NA      NA       NA    \nOcc4                  -3.94201         NA      NA       NA    \nOcc5                  -4.89503         NA      NA       NA    \nOcc1:Rscore            0.00000         NA      NA       NA    \nOcc2:Rscore            1.26259    0.16970   7.440 1.00e-13 ***\nOcc3:Rscore            1.28232    0.20937   6.125 9.08e-10 ***\nOcc4:Rscore            1.41583    0.09054  15.638  < 2e-16 ***\nOcc5:Rscore            0.00000         NA      NA       NA    \nMult(., Educ, Occ).   -0.17540         NA      NA       NA    \nMult(1, ., Occ).Educ1 -0.72102         NA      NA       NA    \nMult(1, ., Occ).Educ2 -1.11818         NA      NA       NA    \nMult(1, ., Occ).Educ3 -0.97365         NA      NA       NA    \nMult(1, ., Occ).Educ4 -6.51841         NA      NA       NA    \nMult(1, Educ, .).Occ1  0.20351         NA      NA       NA    \nMult(1, Educ, .).Occ2 -1.10357         NA      NA       NA    \nMult(1, Educ, .).Occ3  0.17394         NA      NA       NA    \nMult(1, Educ, .).Occ4  0.52047         NA      NA       NA    \nMult(1, Educ, .).Occ5  2.94447         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 11.405 on 3 degrees of freedom\nAIC: 161.78\n\nNumber of iterations: 46\n\nsummary(CplusRC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable   Estimate Std..Error   z.value     Pr...z..\n1            Occ1:Rscore  0.0000000         NA        NA           NA\n2            Occ2:Rscore  1.2625901  0.1696974  7.440245 1.004990e-13\n3            Occ3:Rscore  1.2823194  0.2093667  6.124752 9.082487e-10\n4            Occ4:Rscore  1.4158283  0.0905404 15.637531 4.040916e-55\n5            Occ5:Rscore  0.0000000         NA        NA           NA\n6    Mult(., Educ, Occ). -0.1754033         NA        NA           NA\n7  Mult(1, ., Occ).Educ1 -0.7210218         NA        NA           NA\n8  Mult(1, ., Occ).Educ2 -1.1181754         NA        NA           NA\n9  Mult(1, ., Occ).Educ3 -0.9736536         NA        NA           NA\n10 Mult(1, ., Occ).Educ4 -6.5184053         NA        NA           NA\n11 Mult(1, Educ, .).Occ1  0.2035117         NA        NA           NA\n12 Mult(1, Educ, .).Occ2 -1.1035705         NA        NA           NA\n13 Mult(1, Educ, .).Occ3  0.1739351         NA        NA           NA\n14 Mult(1, Educ, .).Occ4  0.5204683         NA        NA           NA\n15 Mult(1, Educ, .).Occ5  2.9444684         NA        NA           NA\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(CplusRC$coefficients),\n           estimate = CplusRC$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var   estimate number\n(Intercept)                     (Intercept)  6.2045374      1\nEduc2                                 Educ2 -1.6368135      2\nEduc3                                 Educ3 -0.1438756      3\nEduc4                                 Educ4 -2.1881854      4\nOcc2                                   Occ2 -2.7471517      5\nOcc3                                   Occ3 -5.7338368      6\nOcc4                                   Occ4 -3.9420090      7\nOcc5                                   Occ5 -4.8950260      8\nOcc1:Rscore                     Occ1:Rscore         NA      9\nOcc2:Rscore                     Occ2:Rscore  1.2625901     10\nOcc3:Rscore                     Occ3:Rscore  1.2823194     11\nOcc4:Rscore                     Occ4:Rscore  1.4158283     12\nOcc5:Rscore                     Occ5:Rscore         NA     13\nMult(., Educ, Occ).     Mult(., Educ, Occ). -0.1754033     14\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1 -0.7210218     15\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2 -1.1181754     16\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3 -0.9736536     17\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4 -6.5184053     18\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1  0.2035117     19\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -1.1035705     20\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3  0.1739351     21\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4  0.5204683     22\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5  2.9444684     23\n\nmu <- getContrasts(CplusRC, \n                   pickCoef(CplusRC, \"[.]Educ\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(CplusRC, \n                   pickCoef(CplusRC, \"[.]Occ\"),\n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,13,15,18,19,23),\n      constrainTo = con,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.........................................................\n...........\nDone\n\nsummary(CplusRC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable     Estimate Std..Error   z.value     Pr...z..\n1            Occ1:Rscore  0.000000000         NA        NA           NA\n2            Occ2:Rscore  1.262590058 0.16969738  7.440245 1.004990e-13\n3            Occ3:Rscore  1.282319390 0.20936674  6.124752 9.082487e-10\n4            Occ4:Rscore  1.415828283 0.09054040 15.637531 4.040916e-55\n5            Occ5:Rscore  0.000000000         NA        NA           NA\n6    Mult(., Educ, Occ). -2.509132039 0.47337666 -5.300498 1.154873e-07\n7  Mult(1, ., Occ).Educ1  0.332914652         NA        NA           NA\n8  Mult(1, ., Occ).Educ2  0.250882838 0.17043562  1.472009 1.410183e-01\n9  Mult(1, ., Occ).Educ3  0.280733721 0.25875316  1.084948 2.779447e-01\n10 Mult(1, ., Occ).Educ4 -0.864531211         NA        NA           NA\n11 Mult(1, Educ, .).Occ1 -0.116510615         NA        NA           NA\n12 Mult(1, Educ, .).Occ2 -0.558888360 0.15090381 -3.703607 2.125557e-04\n13 Mult(1, Educ, .).Occ3 -0.126520705 0.12280113 -1.030289 3.028742e-01\n14 Mult(1, Educ, .).Occ4 -0.009237675 0.06533009 -0.141400 8.875539e-01\n15 Mult(1, Educ, .).Occ5  0.811157355         NA        NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7d",
    "href": "3-Chapter_2.html#表2.7d",
    "title": "2  第2章",
    "section": "2.26 表2.7D",
    "text": "2.26 表2.7D\nまずは行効果と列効果のパラメータに対して0という制約を課し，その上で推定した行スコアと列スコアを正規化し，再度推定する．\n\nRplusCplusRC.un <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations................\nDone\n\nsummary(RplusCplusRC.un)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + Cscore:Educ + Rscore:Occ + \n    Mult(1, Educ, Occ), family = poisson, data = freq_tab_2.3B, \n    tolerance = 1e-12)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.46856  -0.01129  -0.00160   0.02313   0.20690  \n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)\n(Intercept)             7.74293         NA      NA       NA\nEduc2                   3.14029         NA      NA       NA\nEduc3                  10.24787         NA      NA       NA\nEduc4                  12.41837         NA      NA       NA\nOcc2                   -5.57138         NA      NA       NA\nOcc3                  -12.20149         NA      NA       NA\nOcc4                  -13.84551         NA      NA       NA\nOcc5                  -18.60224         NA      NA       NA\nEduc1:Cscore            2.41445         NA      NA       NA\nEduc2:Cscore            1.71183         NA      NA       NA\nEduc3:Cscore            0.57802         NA      NA       NA\nEduc4:Cscore            0.00000         NA      NA       NA\nOcc1:Rscore            -4.06530         NA      NA       NA\nOcc2:Rscore            -2.30050         NA      NA       NA\nOcc3:Rscore            -1.09826         NA      NA       NA\nOcc4:Rscore             0.00000         NA      NA       NA\nOcc5:Rscore             0.00000         NA      NA       NA\nMult(., Educ, Occ).    -5.48724         NA      NA       NA\nMult(1, ., Occ).Educ1  -0.10945         NA      NA       NA\nMult(1, ., Occ).Educ2   0.04996         NA      NA       NA\nMult(1, ., Occ).Educ3   0.17934         NA      NA       NA\nMult(1, ., Occ).Educ4  -0.25103         NA      NA       NA\nMult(1, Educ, .).Occ1   0.26319         NA      NA       NA\nMult(1, Educ, .).Occ2  -0.24080         NA      NA       NA\nMult(1, Educ, .).Occ3   0.03257         NA      NA       NA\nMult(1, Educ, .).Occ4   0.01140         NA      NA       NA\nMult(1, Educ, .).Occ5   0.67203         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 0.27843 on 2 degrees of freedom\nAIC: 152.66\n\nNumber of iterations: 16\n\npickCoef(RplusCplusRC.un, \"[:]Cscore\")\n\nEduc1:Cscore Educ2:Cscore Educ3:Cscore Educ4:Cscore \n           9           10           11           12 \n\npickCoef(RplusCplusRC.un, \"[:]Rscore\")\n\nOcc1:Rscore Occ2:Rscore Occ3:Rscore Occ4:Rscore Occ5:Rscore \n         13          14          15          16          17 \n\nRplusCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,13,14,17), \n      constrainTo = c(0,0,0,0,0),\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.............................\nDone\n\n# 変数と係数と係数の順番を表示\ndata.frame(var = names(CplusRC$coefficients),\n           estimate = CplusRC$coefficients) |> \n  mutate(estimate = estimate,\n         number = row_number())\n\n                                        var     estimate number\n(Intercept)                     (Intercept)  6.132951036      1\nEduc2                                 Educ2 -1.598655285      2\nEduc3                                 Educ3 -0.119602932      3\nEduc4                                 Educ4 -1.631176445      4\nOcc2                                   Occ2 -3.281987830      5\nOcc3                                   Occ3 -5.745938986      6\nOcc4                                   Occ4 -3.812315688      7\nOcc5                                   Occ5 -3.773472310      8\nOcc1:Rscore                     Occ1:Rscore           NA      9\nOcc2:Rscore                     Occ2:Rscore  1.262590058     10\nOcc3:Rscore                     Occ3:Rscore  1.282319390     11\nOcc4:Rscore                     Occ4:Rscore  1.415828283     12\nOcc5:Rscore                     Occ5:Rscore           NA     13\nMult(., Educ, Occ).     Mult(., Educ, Occ). -2.509132039     14\nMult(1, ., Occ).Educ1 Mult(1, ., Occ).Educ1           NA     15\nMult(1, ., Occ).Educ2 Mult(1, ., Occ).Educ2  0.250882838     16\nMult(1, ., Occ).Educ3 Mult(1, ., Occ).Educ3  0.280733721     17\nMult(1, ., Occ).Educ4 Mult(1, ., Occ).Educ4           NA     18\nMult(1, Educ, .).Occ1 Mult(1, Educ, .).Occ1           NA     19\nMult(1, Educ, .).Occ2 Mult(1, Educ, .).Occ2 -0.558888360     20\nMult(1, Educ, .).Occ3 Mult(1, Educ, .).Occ3 -0.126520705     21\nMult(1, Educ, .).Occ4 Mult(1, Educ, .).Occ4 -0.009237675     22\nMult(1, Educ, .).Occ5 Mult(1, Educ, .).Occ5           NA     23\n\nmu <- getContrasts(RplusCplusRC, \n                   pickCoef(RplusCplusRC, \"[.]Educ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\nnu <- getContrasts(RplusCplusRC,\n                   pickCoef(RplusCplusRC, \"[.]Occ\"), \n                   ref = \"mean\",\n                   scaleRef = \"mean\", \n                   scaleWeights = \"unit\")\ncon <- c(0,0,0,0,0,\n         mu$qvframe[,1][c(1,4)],\n         nu$qvframe[,1][c(1,5)])\n\nRplusCplusRC <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        Cscore:Educ + \n        Rscore:Occ + \n        Mult(1, Educ, Occ),\n      constrain = c(9,12,13,14,17,19,22,23,27), \n      constrainTo = con,\n      family = poisson, \n      data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......................\nDone\n\nmu\n\n                         Estimate Std. Error\nMult(1, ., Occ).Educ1  0.76639941 0.03714637\nMult(1, ., Occ).Educ2  0.05505913 0.08952794\nMult(1, ., Occ).Educ3 -0.60073372 0.04744381\nMult(1, ., Occ).Educ4 -0.22072481 0.06764890\n\nnu\n\n                         Estimate Std. Error\nMult(1, Educ, .).Occ1  0.83832072 0.02535129\nMult(1, Educ, .).Occ2 -0.04397713 0.08855421\nMult(1, Educ, .).Occ3 -0.11946443 0.09158773\nMult(1, Educ, .).Occ4 -0.50065982 0.06550415\nMult(1, Educ, .).Occ5 -0.17421935 0.12622465\n\nsummary(RplusCplusRC)$coefficients |>\n  data.frame() |>\n  rownames_to_column(\"Variable\") |>\n  dplyr::filter(grepl(\"Rscore|Cscore|Mult\", Variable))\n\n                Variable    Estimate Std..Error    z.value     Pr...z..\n1           Educ1:Cscore  0.00000000         NA         NA           NA\n2           Educ2:Cscore -0.29016794  0.1835938 -1.5804884 1.139951e-01\n3           Educ3:Cscore -0.95452353  0.2168230 -4.4023158 1.071015e-05\n4           Educ4:Cscore  0.00000000         NA         NA           NA\n5            Occ1:Rscore  0.00000000         NA         NA           NA\n6            Occ2:Rscore  0.00000000         NA         NA           NA\n7            Occ3:Rscore  0.39725281  0.1673266  2.3741161 1.759102e-02\n8            Occ4:Rscore  0.32684292  0.1614939  2.0238715 4.298337e-02\n9            Occ5:Rscore  0.00000000         NA         NA           NA\n10   Mult(., Educ, Occ).  2.85715993  0.5343817  5.3466654 8.958940e-08\n11 Mult(1, ., Occ).Educ1  0.76639941         NA         NA           NA\n12 Mult(1, ., Occ).Educ2  0.05505913  0.1291228  0.4264091 6.698098e-01\n13 Mult(1, ., Occ).Educ3 -0.60073372  0.1297703 -4.6292078 3.670672e-06\n14 Mult(1, ., Occ).Educ4 -0.22072481         NA         NA           NA\n15 Mult(1, Educ, .).Occ1  0.83832072         NA         NA           NA\n16 Mult(1, Educ, .).Occ2 -0.04397713  0.1677272 -0.2621944 7.931715e-01\n17 Mult(1, Educ, .).Occ3 -0.11946443  0.1842187 -0.6484923 5.166666e-01\n18 Mult(1, Educ, .).Occ4 -0.50065982  0.2149854 -2.3288081 1.986923e-02\n19 Mult(1, Educ, .).Occ5 -0.17421935         NA         NA           NA"
  },
  {
    "objectID": "3-Chapter_2.html#表2.7e",
    "href": "3-Chapter_2.html#表2.7e",
    "title": "2  第2章",
    "section": "2.27 表2.7E",
    "text": "2.27 表2.7E\nWongのサポートページにあるように，gnmを用いてRC(2)の係数を推定することは難しい．ここではKateri, Maria. 2014. {¥it Contingency Table Analysis: Methods and Implementation Using R}. New York: Birkhäuser. のsupportページにあるプログラムを使用して係数を求める．\n\\(M > 1\\)のRC(M)を推定するためにはgnmのinstancesを用いる． 今はinstances = 2としており，RC(2)を用いている． なお，式(2.35)のように\\(\\phi\\)は推定されない． これらスコアは求まるものの，直交という次元間制約が課されてない． そこで，特異値分解（SVD: singular value decomposition）によって行スコアと列スコアのそれぞれが次元間で直行するような変換を行う．\nまず次元間制約が課されてない行スコアの行列（\\(I\\times m\\)）と列スコアの行列（\\(J\\times m\\)）の積を求め，モデル化での2元交互作用パラメータを求める．\n\nRC2 <- freq_tab_2.3B |>\n  gnm(Freq ~ Educ + Occ + \n        instances(Mult(Educ, Occ), instances = 2),\n      family = poisson, data = _, \n      tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\n\nsummary(RC2)\n\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(Educ, Occ), \n    instances = 2), family = poisson, data = freq_tab_2.3B, tolerance = 1e-12)\n\nDeviance Residuals: \n      Min         1Q     Median         3Q        Max  \n-0.631356  -0.030234  -0.004363   0.050323   0.320666  \n\nCoefficients:\n                             Estimate Std. Error z value Pr(>|z|)\n(Intercept)                   5.08405         NA      NA       NA\nEduc2                        -0.88326         NA      NA       NA\nEduc3                         1.08707         NA      NA       NA\nEduc4                         0.33875         NA      NA       NA\nOcc2                          0.40057         NA      NA       NA\nOcc3                         -2.18119         NA      NA       NA\nOcc4                          0.06672         NA      NA       NA\nOcc5                         -4.15751         NA      NA       NA\nMult(., Occ, inst = 1).Educ1 -3.75327         NA      NA       NA\nMult(., Occ, inst = 1).Educ2 -0.37421         NA      NA       NA\nMult(., Occ, inst = 1).Educ3 -0.12043         NA      NA       NA\nMult(., Occ, inst = 1).Educ4  5.50294         NA      NA       NA\nMult(Educ, ., inst = 1).Occ1 -0.23246         NA      NA       NA\nMult(Educ, ., inst = 1).Occ2 -0.05608         NA      NA       NA\nMult(Educ, ., inst = 1).Occ3  0.12089         NA      NA       NA\nMult(Educ, ., inst = 1).Occ4  0.21134         NA      NA       NA\nMult(Educ, ., inst = 1).Occ5  0.13393         NA      NA       NA\nMult(., Occ, inst = 2).Educ1 -1.38606         NA      NA       NA\nMult(., Occ, inst = 2).Educ2 -0.52797         NA      NA       NA\nMult(., Occ, inst = 2).Educ3  0.40562         NA      NA       NA\nMult(., Occ, inst = 2).Educ4 -0.55732         NA      NA       NA\nMult(Educ, ., inst = 2).Occ1 -0.21148         NA      NA       NA\nMult(Educ, ., inst = 2).Occ2  0.82021         NA      NA       NA\nMult(Educ, ., inst = 2).Occ3  0.54578         NA      NA       NA\nMult(Educ, ., inst = 2).Occ4  0.57577         NA      NA       NA\nMult(Educ, ., inst = 2).Occ5 -0.87947         NA      NA       NA\n\nStd. Error is NA where coefficient has been constrained or is unidentified\n\nResidual deviance: 0.6001 on 2 degrees of freedom\nAIC: 152.98\n\nNumber of iterations: 54\n\nRCmodel_coef <- function(RCmodel, row, col, m, data){\n  NI <- RCmodel$xlevels[[1]] |> length()\n  NJ <- RCmodel$xlevels[[2]] |> length()\n  iflag <- 0\n  y <- length(RCmodel$y)\n  X <- gl(NI,NJ,length = y)\n  Y <- gl(NJ,1,length = y)\n  IX <- pickCoef(RCmodel, \n                 paste0(\"[.]\",deparse(substitute(row))))\n  IY <- pickCoef(RCmodel,\n                 paste0(\"[.]\",deparse(substitute(col))))\n  X <- RCmodel$coefficients[IX]\n  Y <- RCmodel$coefficients[IY]\n  mu0 <- matrix(X,nrow = NI,ncol = m)\n  nu0 <- matrix(Y,nrow = NJ,ncol = m)\n  mu <- mu0\n  nu <- nu0\n  A <- mu %*% t(nu) # [NI, M] [M. NJ]\n  R1 <- diag(1,NI)\n  C1 <- diag(1,NJ)\n  Rone <- matrix(rep(1,NI^2),nrow = NI)\n  Cone <- matrix(rep(1,NJ^2),nrow = NJ)\n  rowP <- c(rep(1,NI))\n  colP <- c(rep(1,NJ));\n  data <- RC2$model\n  list(y,X,Y,IX,IY,data)\n  if (iflag == 1) {\n    rowP <- with(data, tapply(freq,row,sum)/sum(freq))\n    colP <- with(data, tapply(freq,col,sum)/sum(freq))}\n  DR <- diag(rowP^(-1/2),NI)\n  DC <- diag(colP^(-1/2),NJ)\n  RWsqr <- diag(rowP^(1/2),NI)\n  CWsqr <- diag(colP^(1/2),NJ)\n  RW <- RWsqr^2\n  CW <- CWsqr^2\n  L <- (R1 - (Rone %*% RW)/sum(RW)) %*% A %*% t(C1 - (Cone %*% CW)/sum(CW))\n  phiv <- svd(RWsqr %*% L %*% CWsqr)$d[1:m]\n  mu <- svd(RWsqr %*% L %*% CWsqr)$u[,1:m]\n  nu <- svd(RWsqr %*% L %*% CWsqr)$v[,1:m]\n  mu <- DR %*% mu\n  nu <- DC %*% nu\n  phi <- diag(phiv, m)\n  L2 <- RCmodel$deviance\n  df <- RCmodel$df.residual\n  p.value <- 1 - pchisq(L2,df)\n  fit.freq <- predict(RCmodel, \n                      type = \"response\", \n                      se.fit = TRUE)\n  \n  print(list(model = RCmodel, \n     L2 = L2, \n     df = df,\n     p.value = p.value,\n     obs_freq = summary(RC2)$y, \n     fit.freq = fit.freq,\n     phi = phi, \n     mu = mu, \n     nu = nu,\n     cor(mu) |> round(3),\n     cor(nu) |> round(3)))\n  }\n\nRCmodel_coef(RC2, row = Educ, col = Occ, m =  2)\n\n$model\n\nCall:\ngnm(formula = Freq ~ Educ + Occ + instances(Mult(Educ, Occ), \n    instances = 2), family = poisson, data = freq_tab_2.3B, tolerance = 1e-12)\n\nCoefficients:\n                 (Intercept)                         Educ2  \n                     5.08405                      -0.88326  \n                       Educ3                         Educ4  \n                     1.08707                       0.33875  \n                        Occ2                          Occ3  \n                     0.40057                      -2.18119  \n                        Occ4                          Occ5  \n                     0.06672                      -4.15751  \nMult(., Occ, inst = 1).Educ1  Mult(., Occ, inst = 1).Educ2  \n                    -3.75327                      -0.37421  \nMult(., Occ, inst = 1).Educ3  Mult(., Occ, inst = 1).Educ4  \n                    -0.12043                       5.50294  \nMult(Educ, ., inst = 1).Occ1  Mult(Educ, ., inst = 1).Occ2  \n                    -0.23246                      -0.05608  \nMult(Educ, ., inst = 1).Occ3  Mult(Educ, ., inst = 1).Occ4  \n                     0.12089                       0.21134  \nMult(Educ, ., inst = 1).Occ5  Mult(., Occ, inst = 2).Educ1  \n                     0.13393                      -1.38606  \nMult(., Occ, inst = 2).Educ2  Mult(., Occ, inst = 2).Educ3  \n                    -0.52797                       0.40562  \nMult(., Occ, inst = 2).Educ4  Mult(Educ, ., inst = 2).Occ1  \n                    -0.55732                      -0.21148  \nMult(Educ, ., inst = 2).Occ2  Mult(Educ, ., inst = 2).Occ3  \n                     0.82021                       0.54578  \nMult(Educ, ., inst = 2).Occ4  Mult(Educ, ., inst = 2).Occ5  \n                     0.57577                      -0.87947  \n\nDeviance:            0.6001022 \nPearson chi-squared: 0.5746549 \nResidual df:         2 \n\n$L2\n[1] 0.6001022\n\n$df\n[1] 2\n\n$p.value\n[1] 0.7407804\n\n$obs_freq\nNULL\n\n$fit.freq\n$fit.freq$fit\n          1           2           3           4           5           6 \n 517.836063   95.414391    5.433736   35.145848    5.169961   81.405000 \n          7           8           9          10          11          12 \n  65.976261    5.398934   48.639687    1.580117  451.846566 1003.387842 \n         13          14          15          16          17          18 \n  66.470016  630.136504    5.159072   70.912370  157.221505   36.697314 \n         19          20 \n 562.077961   12.090850 \n\n$fit.freq$se.fit\n        1         2         3         4         5         6         7         8 \n22.748933  9.732333  2.174395  5.860792  2.230227  8.912865  7.856714  1.044826 \n        9        10        11        12        13        14        15        16 \n 6.616317  0.619348 21.250045 31.666672  8.114913 25.088611  2.233235  8.415482 \n       17        18        19        20 \n12.530867  6.041164 23.703381  3.469126 \n\n$fit.freq$residual.scale\n[1] 1\n\n\n$phi\n         [,1]     [,2]\n[1,] 2.600861 0.000000\n[2,] 0.000000 1.521971\n\n$mu\n            [,1]        [,2]\n[1,]  0.74345129  0.27619989\n[2,]  0.08846472 -0.06103682\n[3,] -0.19984223 -0.77722344\n[4,] -0.63207378  0.56206037\n\n$nu\n            [,1]         [,2]\n[1,]  0.76509960 -0.137064850\n[2,]  0.01966104 -0.548959995\n[3,] -0.32245067 -0.119769392\n[4,] -0.55005650 -0.009934123\n[5,]  0.08774653  0.815728360\n\n[[10]]\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n\n[[11]]\n     [,1] [,2]\n[1,]    1    0\n[2,]    0    1\n\n\nlogmultパッケージのrcによってRC(2)を推定する．まずはanoasで連関分析を行う．表2.6Aと同じ結果になっていることを確認する．正規化だけではなく，次元間制約が課されており，表2.7の結果と一致する．\n\nanoas(tab_2.3B)\n\nFitting independence model...\nFitting model with 1 dimension...\nInitialising\nRunning start-up iterations..\nRunning main iterations......................................................\nDone\nFitting model with 2 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations........\nDone\nFitting model with 3 dimensions...\nInitialising\nRunning start-up iterations..\nRunning main iterations....\nDone\n\n\n       Res. Df           Res. Dev    Dev./Indep. (%)  Dissim. (%)\nIndep.      12 1373.1757656522454 100.00000000000000 23.861575295\nRC(1)        6  125.0597485501468   9.10733728910112  6.436039098\nRC(2)        2    0.6001022352681   0.04370177877288  0.093516580\nRC(3)        0    0.0000000000002   0.00000000000002  0.000000004\n                      BIC                AIC    Dev. Df\nIndep. 1274.0809153306573 1349.1757656522454      NA NA\nRC(1)    75.5123233893527  113.0597485501468 -1248.1 -6\nRC(2)   -15.9157061516632   -3.3998977647319  -124.5 -4\nRC(3)     0.0000000000002    0.0000000000002    -0.6 -2\n\n\n\nRC2 <- rc(tab_2.3B, \n          nd = 2, \n          weighting = \"none\", \n          se = \"bootstrap\",\n          nreplicates = 1000, \n          ncpus = getOption(\"boot.ncpus\"))\n\nInitialising\nRunning start-up iterations..\nRunning main iterations.......\nDone\nComputing bootstrap standard errors...\n.\n\n\nWarning in jackboot(se, ncpus, nreplicates, tab, model, assoc1 =\ngetS3method(\"assoc\", : One model replicate failed and its results will be\nskipped. Standard errors will not be completely accurate. Consider raising the\nvalue of iterMax.\n\nsummary(RC2)\n\nCall:\nrc(tab = tab_2.3B, nd = 2, weighting = \"none\", se = \"bootstrap\", \n    nreplicates = 1000, ncpus = getOption(\"boot.ncpus\"))\n\nDeviance Residuals:\n    Columns\nRows         A         B         C         D         E\n   A   0.00720  -0.04245   0.23888  -0.02462  -0.07516\n   B  -0.04493   0.12571  -0.63136   0.05160   0.32067\n   C   0.00722  -0.01224   0.06492  -0.00544  -0.07040\n   D   0.01040  -0.01767   0.04990  -0.00329  -0.02616\n\nAssociation coefficients:\n               Normalized    Adjusted  Std. error   Pr(>|z|)     \nDim1            2.6008615          NA      1.8941   0.169699     \nDim2            1.5219709          NA      4.4294   0.731145     \nDim1:RowsA      0.7434513   1.1989778      0.0192  < 2.2e-16  ***\nDim1:RowsB      0.0884647   0.1426687      0.0405   0.028910  *  \nDim1:RowsC     -0.1998422  -0.3222893      0.0287  3.398e-12  ***\nDim1:RowsD     -0.6320738  -1.0193572      0.0256  < 2.2e-16  ***\nDim2:RowsA      0.2761999   0.3407428      0.0963   0.004115  ** \nDim2:RowsB     -0.0610368  -0.0753000      0.1541   0.692068     \nDim2:RowsC     -0.7772234  -0.9588465      0.0696  < 2.2e-16  ***\nDim2:RowsD      0.5620604   0.6934037      0.0667  < 2.2e-16  ***\nDim1:ColumnsA   0.7650996   1.2338904      0.0472  < 2.2e-16  ***\nDim1:ColumnsB   0.0196610   0.0317077      0.0423   0.641715     \nDim1:ColumnsC  -0.3224507  -0.5200222      0.1027   0.001697  ** \nDim1:ColumnsD  -0.5500565  -0.8870864      0.0738  8.891e-14  ***\nDim1:ColumnsE   0.0877465   0.1415105      0.1013   0.386310     \nDim2:ColumnsA  -0.1370648  -0.1690944      0.0500   0.006123  ** \nDim2:ColumnsB  -0.5489600  -0.6772420      0.0852  1.148e-10  ***\nDim2:ColumnsC  -0.1197694  -0.1477573      0.0957   0.210944     \nDim2:ColumnsD  -0.0099341  -0.0122555      0.0712   0.889013     \nDim2:ColumnsE   0.8157284   1.0063493      0.0576  < 2.2e-16  ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nNormalization weights: none\nDeviance:              0.6001022\nPearson chi-squared:   0.5746549\nDissimilarity index:   0.09351658%\nResidual df:           2\nBIC:                   -15.91571\nAIC:                   -3.399898\n\nRC2 |> \n  summary() |>\n  pluck(coefficients) |>\n  data.frame() |>\n  rownames_to_column(var = \"Parameter\") |>\n  arrange(Parameter)\n\n       Parameter   Normalized    Adjusted Std..error      Pr...z..\n1           Dim1  2.600861491          NA 1.89405291  1.696987e-01\n2  Dim1:ColumnsA  0.765099600  1.23389040 0.04721223  4.608229e-59\n3  Dim1:ColumnsB  0.019661041  0.03170773 0.04225439  6.417154e-01\n4  Dim1:ColumnsC -0.322450671 -0.52002222 0.10273412  1.697042e-03\n5  Dim1:ColumnsD -0.550056503 -0.88708639 0.07376957  8.890839e-14\n6  Dim1:ColumnsE  0.087746534  0.14151047 0.10128541  3.863095e-01\n7     Dim1:RowsA  0.743451285  1.19897776 0.01923574  0.000000e+00\n8     Dim1:RowsB  0.088464723  0.14266871 0.04049269  2.891024e-02\n9     Dim1:RowsC -0.199842228 -0.32228929 0.02871223  3.398435e-12\n10    Dim1:RowsD -0.632073780 -1.01935718 0.02557586 7.623099e-135\n11          Dim2  1.521970931          NA 4.42944364  7.311447e-01\n12 Dim2:ColumnsA -0.137064849 -0.16909442 0.05000284  6.122613e-03\n13 Dim2:ColumnsB -0.548959996 -0.67724199 0.08516177  1.147764e-10\n14 Dim2:ColumnsC -0.119769391 -0.14775733 0.09574083  2.109436e-01\n15 Dim2:ColumnsD -0.009934124 -0.01225555 0.07118509  8.890128e-01\n16 Dim2:ColumnsE  0.815728359  1.00634928 0.05755149  1.329316e-45\n17    Dim2:RowsA  0.276199889  0.34074279 0.09626414  4.115274e-03\n18    Dim2:RowsB -0.061036818 -0.07530002 0.15411363  6.920676e-01\n19    Dim2:RowsC -0.777223438 -0.95884646 0.06957607  5.664024e-29\n20    Dim2:RowsD  0.562060367  0.69340368 0.06667337  3.454936e-17\n\n# getS3method(\"assoc\",\"rc\")"
  },
  {
    "objectID": "6-Chapter_5.html",
    "href": "6-Chapter_5.html",
    "title": "5  第5章",
    "section": "",
    "text": "library(tidyverse)\nlibrary(magrittr)\nlibrary(gnm)"
  },
  {
    "objectID": "6-Chapter_5.html#表5.1",
    "href": "6-Chapter_5.html#表5.1",
    "title": "5  第5章",
    "section": "5.1 表5.1",
    "text": "5.1 表5.1\n\n# Table 5.1\nFreq<-c(118, 28,  32,  6,  7,\n        218, 28,  97, 12, 14,\n         11,  2,   4,  1,  1,\n        104, 22,  61,  8,  5,\n        117, 24,  70,  9,  7,\n         42,  6,  20,  2,  0,\n         48, 16, 104, 14,  9,\n        128, 52,  81, 14, 12)\n\n\nWorries<-gl(8,5)\nSituations<-gl(5,1,8*5)\n\n\n# Model 1 - Independence\nm1<-gnm(Freq~Worries+Situations,family=poisson,trace=F,tolerance = 1e-12)\nmodel.summary(m1)\n\n[1] \"Model Summary:\"\n\n\n Df       L2            p  AIC(L2)   BIC(L2)    Delta\n 28 121.4661 1.307612e-13 65.46607 -84.29438 9.844607\n\n# Model 2 - RC(1)\nm2<-gnm(Freq~Worries+Situations+Mult(1,Worries,Situations),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m2)\n\n[1] \"Model Summary:\"\n\n\n Df       L2            p  AIC(L2)   BIC(L2)    Delta\n 27 121.4952 5.976962e-14 67.49515 -76.91671 9.833904\n\n# Model 3 - RC(1) with equality constraints on\n# MIL=ECO=MTO, ENR=SAB=OTH and ASAF=IFAA\nWorries.a<-Worries\nlevels(Worries.a)<-factor(c(1,2,2,3,3,2,4,3))\nWorries.a\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 4 4 4 4 4 3 3 3 3 3\nLevels: 1 2 3 4\n\nSituations.a<-Situations\nlevels(Situations.a)<-factor(c(1,2,3,3,4))\nSituations.a\n\n [1] 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4 1 2 3 3 4\nLevels: 1 2 3 4\n\nm3.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.a,Situations.a),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..................................\nDone\n\nmodel.summary(m3.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 32 925.4714 8.207554e-174 861.4714 690.3166 30.30552\n\nmu<-getContrasts(m3.un, pickCoef(m3.un, \"[.]Worries.a\"),\n                ref = c(1,3,3,1)/8, scaleRef = c(1,3,3,1)/8,\n                scaleWeights = c(1,3,3,1))\nnu<-getContrasts(m3.un, pickCoef(m3.un, \"[.]Situations.a\"),\n                ref = c(1,1,2,1)/5, scaleRef = c(1,1,2,1)/5,\n                scaleWeights = c(1,1,2,1))\n\ncon<-c(mu$qvframe[,1][c(1,4)],nu$qvframe[,1][c(1,4)])\nm3<-gnm(Freq~Worries+Situations+Mult(1,Worries.a,Situations.a),family=poisson,\n             constrain=c(14,17,18,21),constrainTo=con,\n             trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..................................................\n\n\n\nDeviance is not finite\n\n\nWarning: Algorithm failed - no model could be estimated\n\nsummary(m3);mu;nu;model.summary(m3.un)\n\nLength  Class   Mode \n     0   NULL   NULL \n\n\n                                      Estimate Std. Error\nMult(1, ., Situations.a).Worries.a1 -0.1131301 0.11361061\nMult(1, ., Situations.a).Worries.a2 -0.4170232 0.02269737\nMult(1, ., Situations.a).Worries.a3  0.3368043 0.03042467\nMult(1, ., Situations.a).Worries.a4  0.3537867 0.08354914\n\n\n                                       Estimate Std. Error\nMult(1, Worries.a, .).Situations.a1  0.66229120 0.02512458\nMult(1, Worries.a, .).Situations.a2 -0.11763705 0.03837698\nMult(1, Worries.a, .).Situations.a3  0.09189854 0.01868966\nMult(1, Worries.a, .).Situations.a4 -0.72845124 0.02397519\n\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 32 925.4714 8.207554e-174 861.4714 690.3166 30.30552\n\n# Model 4 - RC(1) with equality constraints on\n# MIL=ECO=MTO=ENR=SAB=OTH and ASAF=IFAA\nWorries.b<-Worries\nlevels(Worries.b)<-factor(c(1,2,2,2,2,2,3,2))\nWorries.b\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 2 2 2 2 2\nLevels: 1 2 3\n\nm4.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.b,Situations.a),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n.....\nDone\n\nmodel.summary(m4.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)   Delta\n 33 964.1288 3.382326e-181 898.1288 721.6254 30.4467\n\n# Model 5\nm5.un<-gnm(Freq~Worries+Situations+Mult(1,Worries,Situations,inst=1)\n         +Mult(1,Worries,Situations,inst=2),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m5.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2          p   AIC(L2)   BIC(L2)    Delta\n 17 29.38401 0.03114517 -4.615995 -95.54198 3.923013\n\n# Model 6 - RC(2) with equality constraints on\n# ECO=MTO=MIL=ENR=SAB and ASAF=IFAA in both dimensions\nWorries.c<-Worries\nlevels(Worries.c)<-factor(c(1,2,2,2,2,2,3,4))\nWorries.c\n\n [1] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 4 4 4 4 4\nLevels: 1 2 3 4\n\nset.seed(12345)\nm6.un<-gnm(Freq~Worries+Situations+Mult(1,Worries.c,Situations.a,inst=1)\n         +Mult(1,Worries.c,Situations.a,inst=2),family=poisson,\n         trace=F,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations............................................................\nDone\n\nmodel.summary(m6.un)\n\n[1] \"Model Summary:\"\n\n\n Df       L2             p  AIC(L2)  BIC(L2)    Delta\n 27 853.0971 2.550771e-162 799.0971 654.6853 27.69847"
  },
  {
    "objectID": "6-Chapter_5.html#表5.4",
    "href": "6-Chapter_5.html#表5.4",
    "title": "5  第5章",
    "section": "5.2 表5.4",
    "text": "5.2 表5.4\n\n# Table 5.4\nFreq<-c(1096,  1847,  1255,  925,    3321,  6123,  6830,  5524,\n        1541,  3134,  3145, 3300,    1915,  4429,  7035,  9421,\n        4183,  5139,  1857, 1272,    8080,  8586,  4788,  4294,\n        6033,  9211,  5046, 1058,   28130, 44589, 20074,  3408,\n        4354, 13430, 18670, 9821,    2250,  9075, 18286, 14358,\n       14587, 31470, 16390, 3751,    8242, 17532, 12825,  3956,\n        1517,  5820,  6197, 2372,     721,  2909,  4141,  2070,\n        3581,  9268,  5463, 1007,    1341,  3808,  3163,   815,\n        1454,  3109,  1055,  888,     563,  1909,  1018,  1051,\n        3237,  3851,   377,  102,     731,   858,   247,    84,\n       14882, 22182,  5363, 1136,   11650, 15818,  5524,  2122,\n        6033,  3475,    63,   18,    1603,  1005,    30,    16,\n        \n        5968,  8783,  7701, 6483,    8733, 14329, 19386, 28143,\n        1011,  2162,  3536, 6649,     697,  1299,  2362, 10796,\n        3214,  3621,  2485, 3177,     793,  1134,  1292,  3597,\n       11532, 16837,  6975, 1839,    2563,  2995,  2060,  1600,\n        1009,  2719,  3521, 3409,     296,   503,   626,  1273,\n        1586,  3025,  1726,  668,     245,   415,   238,   218,\n         387,   941,   564,  316,      86,   138,    79,    48,\n         994,  1988,   542,  145,     158,   259,   101,    56,\n         171,   409,   223,  245,      65,   172,    99,   174,\n         293,   290,    67,   31,      32,    62,    18,    30,\n        4288,  4916,  1452,  766,     616,   794,   347,   300,\n         370,   186,     3,    4,      67,    37,     5,     2)\n\nIncome<-gl(4,1,192)\nOcc<-gl(12,8,192)\nE1<-gl(2,4,192)\nE2<-gl(2,96,192)\nEduc<-E2:E1\nlevels(Educ)<-1:4\n\n#nEduc<-as.numeric(Educ)\n#nAttitude<-as.numeric(Attitude)\n#Attitude.c<-Attitude\n#levels(Attitude.c)<-c(\"1\",\"2\",\"3\",\"3\")\nTable<-data.frame(Freq,Income,Occ,Educ)\n########################################################################################\n\n# Table 5.5\n# Model 1: Complete Independence\nm1<-gnm(Freq~Educ+Occ+Income,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m1) \n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 174 586906.2 0 586558.2 584536.9 33.84897\n\n# Model 2: Conditional Independence\nm2<-gnm(Freq~Educ*Occ+Income*Occ,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m2)\n\n[1] \"Model Summary:\"\n\n\n  Df      L2 p AIC(L2)  BIC(L2)    Delta\n 108 27957.4 0 27741.4 26486.78 6.003195\n\n# Model 3: All two-way interaction\nm3<-gnm(Freq~Educ*Occ+Income*Occ+Educ*Income,data=Table,family=poisson,tolerance = 1e-12)\nmodel.summary(m3)\n\n[1] \"Model Summary:\"\n\n\n Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 99 6540.396 0 6342.396 5192.331 2.635334\n\n# Model 4: RC(1)+RL(1) partial association\nm4<-gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ)+Mult(1,Occ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m4)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 161 253618.9 0 253296.9 251426.6 21.93752\n\n# Model 5: Model 4 with consistent row (occupation) scores\nm5<-gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ+Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n.........\nDone\n\nmodel.summary(m5)\n\n[1] \"Model Summary:\"\n\n\n  Df     L2 p AIC(L2)  BIC(L2)    Delta\n 176 580146 0  579794 577749.4 34.02388\n\nmu<-getContrasts(m5, pickCoef(m5, \"[.]Occ\")[1:12],\n       ref = \"mean\", scaleRef = \"mean\", scaleWeights = \"unit\")\nmu\n\n                                   Estimate   Std. Error\nMult(1, ., Educ + Income).Occ1   0.33839063 0.0008640428\nMult(1, ., Educ + Income).Occ2   0.21498414 0.0005596694\nMult(1, ., Educ + Income).Occ3   0.16684069 0.0007135237\nMult(1, ., Educ + Income).Occ4   0.27819124 0.0005931120\nMult(1, ., Educ + Income).Occ5   0.18522878 0.0006430725\nMult(1, ., Educ + Income).Occ6   0.17800946 0.0006694356\nMult(1, ., Educ + Income).Occ7  -0.12247946 0.0020470139\nMult(1, ., Educ + Income).Occ8  -0.05945973 0.0017761063\nMult(1, ., Educ + Income).Occ9  -0.36163327 0.0028438260\nMult(1, ., Educ + Income).Occ10 -0.52644741 0.0029566216\nMult(1, ., Educ + Income).Occ11  0.16967565 0.0007019976\nMult(1, ., Educ + Income).Occ12 -0.46130072 0.0029820415\n\n# Model 6: RC(1)+RL(1)+CL(1) partial association\nm6 <- gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ)+Mult(1,Occ,Income)+Mult(1,Educ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m6)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2)  BIC(L2)    Delta\n 154 167714.2 0 167406.2 165617.2 16.84677\n\n# Model 7: Model 6 with consistent row (occupation) scores\nm7 <- gnm(Freq~Educ+Occ+Income+Mult(1,Occ,Educ+Income)+Mult(1,Educ,Income),\n        data=Table,family=poisson,tolerance = 1e-12)\n\nInitialising\nRunning start-up iterations..\nRunning main iterations...................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n..........................................................................................\n.........................................................................\nDone\n\n\nWarning in gnmFit(modelTools = modelTools, y = y, constrain = constrain, : Fitting algorithm has either not converged or converged\nto a non-solution of the likelihood equations.\nUse exitInfo() for numerical details of last iteration.\n\nmodel.summary(m7)\n\n[1] \"Model Summary:\"\n\n\n  Df       L2 p  AIC(L2) BIC(L2)    Delta\n 169 545514.3 0 545176.3  543213 31.30187\n\nmu <- getContrasts(m7, pickCoef(m7, \"[.]Occ\"),\n                 ref = \"mean\", scaleRef = \"mean\",scaleWeights = \"unit\")\nmu\n\n                                   Estimate  Std. Error\nMult(1, ., Educ + Income).Occ1  -0.60162667 0.001624233\nMult(1, ., Educ + Income).Occ2  -0.17978630 0.001640694\nMult(1, ., Educ + Income).Occ3  -0.03148963 0.001714147\nMult(1, ., Educ + Income).Occ4   0.39959683 0.001127586\nMult(1, ., Educ + Income).Occ5   0.32643104 0.001187228\nMult(1, ., Educ + Income).Occ6   0.40809823 0.001123581\nMult(1, ., Educ + Income).Occ7  -0.05232457 0.001723636\nMult(1, ., Educ + Income).Occ8  -0.03112601 0.001713929\nMult(1, ., Educ + Income).Occ9  -0.17530724 0.001647652\nMult(1, ., Educ + Income).Occ10 -0.18239249 0.001636530\nMult(1, ., Educ + Income).Occ11  0.28025194 0.001245468\nMult(1, ., Educ + Income).Occ12 -0.16032512 0.001669009\n\n# Model 8: model 6 with consistent row, column and layer scores\n# currently, this might not be fitted with gnm!"
  }
]